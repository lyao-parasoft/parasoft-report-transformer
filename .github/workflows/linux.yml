
# This is a basic workflow to help you get started with the Run Jtest action.
name: Linux-action

on:
  # Trigger the workflow on push or pull request events but only for the main branch.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  build-on-linux:
    name: Analyze project with Jtest
    
    permissions:
      # required for all workflows
      security-events: write
      
    # Specifies the type of runner that the job will run on.
    runs-on: [self-hosted, luffy-linux]

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
    # Checks out your repository under $GITHUB_WORKSPACE, so that your job can access it.
    - name: Checkout repository
      uses: actions/checkout@v3

    # change authority of the build script.
    - name: build the sh file
      run: chmod -R 777 /home/devtest/github-runner/_work/parasoft-report-transformer
      
    # build the project.
    - name: build the batch file
      run: ./gradlew clean build -x test
         
     # unzip the parasoft-report-transformer-1.0.0.zip.
    - name: unzip the parasoft-report-transformer-1.0.0.zip
      run: unzip build/distributions/parasoft-report-transformer-1.0.0.zip

    # check CRLF
    #- name: Check and convert line endings
    #  run: |
    #      file parasoft-report-transformer-1.0.0/bin/XMLToSARIF.bat
    #      sed -i 's/$/\r/' parasoft-report-transformer-1.0.0/bin/XMLToSARIF.bat
    #      file parasoft-report-transformer-1.0.0/bin/XMLToSARIF.bat

    # Generates the jtest.data.json input file.
    - name: Create input for Jtest
      run: ./gradlew clean build jtest -I /home/devtest/parasoft-tools/2024.2.0/jtest\integration\gradle\init.gradle "-Djtest.skip=true"

    # Runs code analysis with Jtest.
    - name: Run Jtest
      id: jtest
      uses: parasoft/run-jtest-action@2.0.0
      with:
        #Uses the jtest.data.json generated with the Gradle command in the previous step
        installDir: /home/devtest/parasoft-tools/2024.2.0/jtest
        testConfig: 'jtest_settings.properties'
        input: build/jtest/jtest.data.json
        
    # converte the xml2sarif.
    - name: converte the xml2sarif
      run: parasoft-report-transformer-1.0.0\bin\XMLToSARIF.sh -i reports\report.xml -o reports\report-new.sarif
    
    # Uploads analysis results in the SARIF format, so that they are displayed as GitHub code scanning alerts.
    - name: Upload results (SARIF)
      if: always()
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: reports/report-new.sarif # reports is a default location for reports directory

    # Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Static analysis reports
        path: reports/*.*
