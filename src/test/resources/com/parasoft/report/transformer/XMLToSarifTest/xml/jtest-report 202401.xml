<?xml version='1.0' encoding='UTF-8'?><ResultsSession buildId="CICD_JavaProjectTemplate-2024-07-04" climode="true" endTime="2024-07-04T17:56:27+08:00" execEnv="win32_x86_64" hasViols="true" id="1720076876910" lang="en_US" machine="CD-name-02" prjModule="javaprojecttemplate" project="CICD_JavaProjectTemplate" tag="jtest_settings-javaprojecttemplate-${scontrol_branch}-win32_x86_64" time="2024-07-04T17:55:32+08:00" toolDispName="Jtest" toolId="jtest" toolName="DTP Engine for Java" toolVer="2024.1.1" user="user1">
   <TestConfig machine="CD-name-02" name="jtest_settings" pseudoUrl="D:\reports\projects\javaprojecttemplate\jtest_settings.properties" user="user1"/>
   <Authors>
      <Author id="dev1" name="user1"/>
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.jtest.globals.analyzer.GlobalsAnalyzer" name="Parasoft Globals Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.jtest.flowanalyzer" name="Parasoft Java Flow Analyzer" ver="10.7.0.20240424B4736"/>
      <Analyzer id="com.parasoft.jtest.standards.dupcode" name="Code Duplication Detector" ver="10.7.0.20240524"/>
      <Analyzer id="com.parasoft.jtest.globals.ioc.springxml.analyzer.IOCAnalyzer" name="Parasoft IOC Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.xml" name="Parasoft XML Static Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.xtest.dupcode.parser" name="Code Duplication Parser" ver="10.7.0.20240524"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.java" name="Parasoft Java Static Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.prop" name="Parasoft Properties Static Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.jtest.standards.metrics.analyzer" name="Parasoft Metrics Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.rulewizard" name="Parasoft RuleWizard Static Analyzer" ver="10.7.0.20240618"/>
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IChangeImpactViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1"/>
   </VersionInfos>
   <Goals tsks="50">
      
   </Goals>
   <Metrics>
      <Metric avg="0.5" disp="true" id="METRIC.CBO" max="2" min="0" name="Coupling Between Objects" noi="12" stddev="0.764">
         <Info avg="0.5" disp="true" elem="javaprojecttemplate" max="2" min="0" noi="12" stddev="0.764"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.CC" max="1" min="1" name="McCabe Cyclomatic Complexity" noi="18" stddev="0">
         <Info avg="1" disp="true" elem="javaprojecttemplate" max="1" min="1" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.CLLOCRIF" max="0" min="0" name="Comment/Logical Lines in Files" noi="6" stddev="0">
         <Info avg="0" disp="true" elem="javaprojecttemplate" max="0" min="0" noi="6" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.CLLOCRIM" max="0" min="0" name="Comment/Logical Lines in Methods" noi="16" stddev="0">
         <Info avg="0" disp="true" elem="javaprojecttemplate" max="0" min="0" noi="16" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.CLLOCRIT" max="0" min="0" name="Comment/Logical Lines in Types" noi="8" stddev="0">
         <Info avg="0" disp="true" elem="javaprojecttemplate" max="0" min="0" noi="8" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.DIF" max="0" min="0" name="Depth of Nested 'if' Statements" noi="18" stddev="0">
         <Info avg="0" disp="true" elem="javaprojecttemplate" max="0" min="0" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.ECC" max="1" min="1" name="Essential Cyclomatic Complexity" noi="18" stddev="0">
         <Info avg="1" disp="true" elem="javaprojecttemplate" max="1" min="1" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="0.5" disp="true" id="METRIC.FO" max="2" min="0" name="Fan Out" noi="10" stddev="0.671">
         <Info avg="0.5" disp="true" elem="javaprojecttemplate" max="2" min="0" noi="10" stddev="0.671"/>
      </Metric>
      <Metric avg="3.233" disp="true" id="METRIC.HDIFM" max="7" min="0.5" name="Halstead Difficulty" noi="18" stddev="1.739">
         <Info avg="3.233" disp="true" elem="javaprojecttemplate" max="7" min="0.5" noi="18" stddev="1.739"/>
      </Metric>
      <Metric avg="197.066" disp="true" id="METRIC.HEFM" max="1163.358" min="2.377" name="Halstead Effort" noi="18" stddev="268.37">
         <Info avg="197.066" disp="true" elem="javaprojecttemplate" max="1163.358" min="2.377" noi="18" stddev="268.37"/>
      </Metric>
      <Metric avg="13.112" disp="true" id="METRIC.HICM" max="24.123" min="8.242" name="Halstead Intelligent Content" noi="18" stddev="4.657">
         <Info avg="13.112" disp="true" elem="javaprojecttemplate" max="24.123" min="8.242" noi="18" stddev="4.657"/>
      </Metric>
      <Metric avg="13.167" disp="true" id="METRIC.HLENM" max="44" min="3" name="Halstead Program Length" noi="18" stddev="8.908">
         <Info avg="13.167" disp="true" elem="javaprojecttemplate" max="44" min="3" noi="18" stddev="8.908"/>
      </Metric>
      <Metric avg="0.511" disp="true" id="METRIC.HLEVM" max="2" min="0.143" name="Halstead Program Level" noi="18" stddev="0.537">
         <Info avg="0.511" disp="true" elem="javaprojecttemplate" max="2" min="0.143" noi="18" stddev="0.537"/>
      </Metric>
      <Metric avg="0.01" disp="true" id="METRIC.HNOBM" max="0.037" min="0.001" name="Halstead Number of Bugs" noi="18" stddev="0.008">
         <Info avg="0.01" disp="true" elem="javaprojecttemplate" max="0.037" min="0.001" noi="18" stddev="0.008"/>
      </Metric>
      <Metric avg="10.948" disp="true" id="METRIC.HTTPM" max="64.631" min="0.132" name="Halstead Time to Program" noi="18" stddev="14.909">
         <Info avg="10.948" disp="true" elem="javaprojecttemplate" max="64.631" min="0.132" noi="18" stddev="14.909"/>
      </Metric>
      <Metric avg="9.444" disp="true" id="METRIC.HVOCM" max="14" min="3" name="Halstead Program Vocabulary" noi="18" stddev="3.095">
         <Info avg="9.444" disp="true" elem="javaprojecttemplate" max="14" min="3" noi="18" stddev="3.095"/>
      </Metric>
      <Metric avg="44.989" disp="true" id="METRIC.HVOLM" max="167.524" min="4.755" name="Halstead Program Volume" noi="18" stddev="35.798">
         <Info avg="44.989" disp="true" elem="javaprojecttemplate" max="167.524" min="4.755" noi="18" stddev="35.798"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.IDOC" max="1" min="1" name="Inheritance Depth of Class" noi="7" stddev="0">
         <Info avg="1" disp="true" elem="javaprojecttemplate" max="1" min="1" noi="7" stddev="0"/>
      </Metric>
      <Metric avg="0.021" disp="true" id="METRIC.LCOM" max="0.25" min="0" name="Lack of Cohesion" noi="12" stddev="0.069">
         <Info avg="0.021" disp="true" elem="javaprojecttemplate" max="0.25" min="0" noi="12" stddev="0.069"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.MCC" max="1" min="1" name="Modified Cyclomatic Complexity" noi="18" stddev="0">
         <Info avg="1" disp="true" elem="javaprojecttemplate" max="1" min="1" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="128.084" disp="true" id="METRIC.MI" max="133.922" min="110.469" name="Maintainability Index" noi="7" stddev="8.176">
         <Info avg="128.084" disp="true" elem="javaprojecttemplate" max="133.922" min="110.469" noi="7" stddev="8.176"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NBD" max="0" min="0" name="Nested Blocks Depth" noi="18" stddev="0">
         <Info avg="0" disp="true" elem="javaprojecttemplate" max="0" min="0" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="4" disp="true" id="METRIC.NOBLIF" max="12" min="1" name="Blank Lines in Files" noi="7" stddev="3.625">
         <Info avg="4" disp="true" elem="javaprojecttemplate" max="12" min="1" noi="7" stddev="3.625"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOBLIM" max="0" min="0" name="Blank Lines in Methods" noi="18" stddev="0">
         <Info avg="0" disp="true" elem="javaprojecttemplate" max="0" min="0" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="1.5" disp="true" id="METRIC.NOBLIT" max="6" min="0" name="Blank Lines in Types" noi="12" stddev="1.848">
         <Info avg="1.5" disp="true" elem="javaprojecttemplate" max="6" min="0" noi="12" stddev="1.848"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.NOC" max="1" min="1" name="Number of Classes" noi="7" stddev="0">
         <Info avg="1" disp="true" elem="javaprojecttemplate" max="1" min="1" noi="7" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOCLIF" max="0" min="0" name="Comment Lines in Files" noi="7" stddev="0">
         <Info avg="0" disp="true" elem="javaprojecttemplate" max="0" min="0" noi="7" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOCLIM" max="0" min="0" name="Comment Lines in Methods" noi="18" stddev="0">
         <Info avg="0" disp="true" elem="javaprojecttemplate" max="0" min="0" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOCLIT" max="0" min="0" name="Comment Lines in Types" noi="12" stddev="0">
         <Info avg="0" disp="true" elem="javaprojecttemplate" max="0" min="0" noi="12" stddev="0"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.NOF" max="1" min="1" name="Number of Files" noi="7" stddev="0">
         <Info avg="1" disp="true" elem="javaprojecttemplate" max="1" min="1" noi="7" stddev="0"/>
      </Metric>
      <Metric avg="4" disp="true" id="METRIC.NOLLOCIF" max="9" min="0" name="Logical Lines in Files" noi="7" stddev="2.928">
         <Info avg="4" disp="true" elem="javaprojecttemplate" max="9" min="0" noi="7" stddev="2.928"/>
      </Metric>
      <Metric avg="1.5" disp="true" id="METRIC.NOLLOCIM" max="6" min="0" name="Logical Lines in Methods" noi="18" stddev="1.302">
         <Info avg="1.5" disp="true" elem="javaprojecttemplate" max="6" min="0" noi="18" stddev="1.302"/>
      </Metric>
      <Metric avg="2.333" disp="true" id="METRIC.NOLLOCIT" max="8" min="0" name="Logical Lines in Types" noi="12" stddev="2.494">
         <Info avg="2.333" disp="true" elem="javaprojecttemplate" max="8" min="0" noi="12" stddev="2.494"/>
      </Metric>
      <Metric avg="0.5" disp="true" id="METRIC.NOMCIM" max="5" min="0" name="Method Calls in Methods" noi="18" stddev="1.167">
         <Info avg="0.5" disp="true" elem="javaprojecttemplate" max="5" min="0" noi="18" stddev="1.167"/>
      </Metric>
      <Metric avg="1.5" disp="true" id="METRIC.NOMIT" max="6" min="0" name="Number of Methods in Types" noi="12" stddev="1.5">
         <Info avg="1.5" disp="true" elem="javaprojecttemplate" max="6" min="0" noi="12" stddev="1.5"/>
      </Metric>
      <Metric avg="0.556" disp="true" id="METRIC.NOPAR" max="2" min="0" name="Parameters of Methods" noi="18" stddev="0.762">
         <Info avg="0.556" disp="true" elem="javaprojecttemplate" max="2" min="0" noi="18" stddev="0.762"/>
      </Metric>
      <Metric avg="18.857" disp="true" id="METRIC.NOPLIF" max="50" min="5" name="Physical Lines in Files" noi="7" stddev="14.297">
         <Info avg="18.857" disp="true" elem="javaprojecttemplate" max="50" min="5" noi="7" stddev="14.297"/>
      </Metric>
      <Metric avg="3.389" disp="true" id="METRIC.NOPLIM" max="8" min="1" name="Physical Lines in Methods" noi="18" stddev="1.458">
         <Info avg="3.389" disp="true" elem="javaprojecttemplate" max="8" min="1" noi="18" stddev="1.458"/>
      </Metric>
      <Metric avg="9.167" disp="true" id="METRIC.NOPLIT" max="30" min="3" name="Physical Lines in Types" noi="12" stddev="7.198">
         <Info avg="9.167" disp="true" elem="javaprojecttemplate" max="30" min="3" noi="12" stddev="7.198"/>
      </Metric>
      <Metric avg="0.333" disp="true" id="METRIC.NOPRIVMIT" max="2" min="0" name="Private Members of Types" noi="12" stddev="0.624">
         <Info avg="0.333" disp="true" elem="javaprojecttemplate" max="2" min="0" noi="12" stddev="0.624"/>
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOPROTMIT" max="0" min="0" name="Protected Members of Types" noi="12" stddev="0">
         <Info avg="0" disp="true" elem="javaprojecttemplate" max="0" min="0" noi="12" stddev="0"/>
      </Metric>
      <Metric avg="2.167" disp="true" id="METRIC.NOPUBMIT" max="6" min="0" name="Public Members of Types" noi="12" stddev="1.724">
         <Info avg="2.167" disp="true" elem="javaprojecttemplate" max="6" min="0" noi="12" stddev="1.724"/>
      </Metric>
      <Metric avg="0.556" disp="true" id="METRIC.NORET" max="1" min="0" name="Number of Returns in Methods" noi="18" stddev="0.497">
         <Info avg="0.556" disp="true" elem="javaprojecttemplate" max="1" min="0" noi="18" stddev="0.497"/>
      </Metric>
      <Metric avg="14.857" disp="true" id="METRIC.NOSLIF" max="38" min="4" name="Source Lines in Files" noi="7" stddev="10.71">
         <Info avg="14.857" disp="true" elem="javaprojecttemplate" max="38" min="4" noi="7" stddev="10.71"/>
      </Metric>
      <Metric avg="3.389" disp="true" id="METRIC.NOSLIM" max="8" min="1" name="Source Lines in Methods" noi="18" stddev="1.458">
         <Info avg="3.389" disp="true" elem="javaprojecttemplate" max="8" min="1" noi="18" stddev="1.458"/>
      </Metric>
      <Metric avg="7.667" disp="true" id="METRIC.NOSLIT" max="24" min="3" name="Source Lines in Types" noi="12" stddev="5.662">
         <Info avg="7.667" disp="true" elem="javaprojecttemplate" max="24" min="3" noi="12" stddev="5.662"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.NOT" max="1" min="1" name="Number of Types" noi="12" stddev="0">
         <Info avg="1" disp="true" elem="javaprojecttemplate" max="1" min="1" noi="12" stddev="0"/>
      </Metric>
      <Metric avg="2.5" disp="true" id="METRIC.RFC" max="7" min="0" name="Response for Class" noi="12" stddev="2.141">
         <Info avg="2.5" disp="true" elem="javaprojecttemplate" max="7" min="0" noi="12" stddev="2.141"/>
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.SCC" max="1" min="1" name="Strict Cyclomatic Complexity" noi="18" stddev="0">
         <Info avg="1" disp="true" elem="javaprojecttemplate" max="1" min="1" noi="18" stddev="0"/>
      </Metric>
      <Metric avg="1.5" disp="true" id="METRIC.WMC" max="6" min="0" name="Weighted Methods of Class" noi="12" stddev="1.5">
         <Info avg="1.5" disp="true" elem="javaprojecttemplate" max="6" min="0" noi="12" stddev="1.5"/>
      </Metric>
   </Metrics>
   <Scope>
      <Repositories/>
      <Locations>
         <Loc hash="1741334343" locRef="1" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" resProjPath="src/main/java/Calculator.java" totLns="27" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/Calculator.java"/>
         <Loc hash="-662881149" locRef="2" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" resProjPath="src/main/java/com/parasoft/Convertor.java" totLns="14" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java"/>
         <Loc hash="469181545" locRef="3" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" resProjPath="src/main/java/com/parasoft/another/Convertor.java" totLns="14" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java"/>
         <Loc hash="473374080" locRef="4" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" resProjPath="src/main/java/com/parasoft/differentViolations/GenerateViolations.java" totLns="15" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java"/>
         <Loc hash="-1706285489" locRef="5" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" resProjPath="src/main/java/com/parasoft/interfaces/IConvertor.java" totLns="5" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java"/>
         <Loc hash="1200206342" locRef="6" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" resProjPath="src/main/java/com/parasoft/interfaces2/ICalculator.java" totLns="7" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java"/>
         <Loc hash="-1917579824" locRef="7" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" resProjPath="src/main/java/com/parasoft/nested/PhoneFactory.java" totLns="50" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java"/>
      </Locations>
   </Scope>
   
  <SetupProblems>
    <Problem msg="Some rules in test configuration are not supported in current Jtest version" sev="1" totErrs="1" type="MissingRulesSetupProblem">
      <ErrorList>
        <Error val="Flow Analysis [BD]: BD.PB.DEREF"/>
      </ErrorList>
    </Problem>
    <Problem msg="Configuration setup problems:" sev="1" totErrs="10" type="ConfigurationSetupProblem">
      <ErrorList>
        <Error val="The METRICS rule category is deprecated. Consider enabling code metrics in your test configuration."/>
        <Error val="The rule HIBERNATE.CSF has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
        <Error val="The rule HIBERNATE.CHS has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
        <Error val="The rule PB.RE.PNPD has been deprecated and should be replaced with BD.EXCEPT.NP in your test configuration."/>
        <Error val="The rule JDBC.CDBC has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
        <Error val="The rule CODSTA.BP.PPAC has been removed. You can obtain similar results by enabling OPT.AAM in your test configuration."/>
        <Error val="The rule PB.USC.CC has been deprecated and should be replaced with BD.PB.CC in your test configuration."/>
        <Error val="The rule JDBC.RRWD has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
        <Error val="The rule OPT.CCR has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
        <Error val="The rule OPT.CIO has been deprecated and should be replaced with BD.RES.LEAKS in your test configuration."/>
      </ErrorList>
    </Problem>
    <Problem msg="The following dependencies do not exist:" sev="0" totErrs="2" type="DependencySetupProblem">
      <ErrorList>
        <Error val="D:\reports\projects\javaprojecttemplate/lib/junit-4.13.2.jar"/>
        <Error val="D:\reports\projects\javaprojecttemplate/lib/servlet-api-2.4.jar"/>
      </ErrorList>
    </Problem>
  </SetupProblems>

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:37">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="7" checkedLns="132" id="javaprojecttemplate" name="javaprojecttemplate" qfixErrs="0" suppErrs="0" totErrs="413" totFiles="7" totLns="132"/>
      </Projects>
      
      
      <Rules>
         <CategoriesList>
            <Category authTot="0;" authUrg="0;" desc="DISA ASD STIG" name="APSC_DV" rules="1376" total="0">
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001300 The application must protect audit information from unauthorized deletion." name="APSC_DV.001300" rules="20" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001740 The application must only store cryptographic representations of passwords." name="APSC_DV.001740" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002510 The application must protect from command injection." name="APSC_DV.002510" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000510 The application must execute without excessive account permissions." name="APSC_DV.000510" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001660 Service-Oriented Applications handling non-releasable data must authenticate endpoint devices via mutual SSL/TLS." name="APSC_DV.001660" rules="30" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002530 The application must validate all input." name="APSC_DV.002530" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001860 The application must use mechanisms meeting the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance for authentication to a cryptographic module." name="APSC_DV.001860" rules="26" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000650 The application must not write sensitive data into the application logs." name="APSC_DV.000650" rules="7" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002550 The application must not be vulnerable to XML-oriented attacks." name="APSC_DV.002550" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002210 The application must set the HTTPOnly flag on session cookies." name="APSC_DV.002210" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002350 The application must use appropriate cryptography in order to protect stored DoD information when required by the information owner or DoD policy." name="APSC_DV.002350" rules="31" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002570 The application must generate error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries." name="APSC_DV.002570" rules="13" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000170 The application must implement cryptographic mechanisms to protect the integrity of remote access sessions." name="APSC_DV.000170" rules="54" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002010 The application must implement NSA-approved cryptography to protect classified information in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards." name="APSC_DV.002010" rules="25" total="0"/>
               <Category authTot="7;" authUrg="1;" desc="APSC_DV.001460 An application vulnerability assessment must be conducted." name="APSC_DV.001460" rules="93" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001680 The application must enforce a minimum 15-character password length." name="APSC_DV.001680" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002590 The application must not be vulnerable to overflow attacks." name="APSC_DV.002590" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002470 The application must maintain the confidentiality and integrity of information during reception." name="APSC_DV.002470" rules="48" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000080 The application must automatically terminate the admin user session and log off admin users after a 10 minute idle time period is exceeded." name="APSC_DV.000080" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001290 The application must protect audit information from unauthorized modification." name="APSC_DV.001290" rules="20" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001995 The application must not be vulnerable to race conditions." name="APSC_DV.001995" rules="66" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000500 The application must prevent non-privileged users from executing privileged functions to include disabling, circumventing, or altering implemented security safeguards/countermeasures." name="APSC_DV.000500" rules="18" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001850 The application must not display passwords/PINs as clear text." name="APSC_DV.001850" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002400 The application must restrict the ability to launch Denial of Service (DoS) attacks against itself or other information systems." name="APSC_DV.002400" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002500 The application must protect from Cross-Site Request Forgery (CSRF) vulnerabilities." name="APSC_DV.002500" rules="4" total="0"/>
               <Category authTot="36;" authUrg="7;" desc="APSC_DV.003215 The application development team must follow a set of coding standards." name="APSC_DV.003215" rules="37" total="36"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000460 The application must enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies." name="APSC_DV.000460" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002520 The application must protect from canonical representation vulnerabilities." name="APSC_DV.002520" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.003235 The application must not be subject to error handling vulnerabilities." name="APSC_DV.003235" rules="36" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001750 The application must transmit only cryptographically-protected passwords." name="APSC_DV.001750" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002000 The application must terminate all network connections associated with a communications session at the end of the session." name="APSC_DV.002000" rules="7" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002220 The application must set the secure flag on session cookies." name="APSC_DV.002220" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002440 The application must protect the confidentiality and integrity of transmitted information." name="APSC_DV.002440" rules="37" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002540 The application must not be vulnerable to SQL Injection." name="APSC_DV.002540" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000160 The application must implement DoD-approved encryption to protect the confidentiality of remote access sessions." name="APSC_DV.000160" rules="53" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002460 The application must maintain the confidentiality and integrity of information during preparation for transmission." name="APSC_DV.002460" rules="48" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002560 The application must not be subject to input handling vulnerabilities." name="APSC_DV.002560" rules="45" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.003110 The application must not contain embedded authentication data." name="APSC_DV.003110" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002480 The application must not disclose unnecessary information to users." name="APSC_DV.002480" rules="48" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000480 The application must enforce approved authorizations for controlling the flow of information within the system based on organization-defined information flow control policies." name="APSC_DV.000480" rules="24" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002490 The application must protect from Cross-Site Scripting (XSS) vulnerabilities." name="APSC_DV.002490" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000070 The application must automatically terminate the non-privileged user session and log off non-privileged users after a 15 minute idle time period has elapsed." name="APSC_DV.000070" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002290 The application must use the Federal Information Processing Standard (FIPS) 140-2-validated cryptographic modules and random number generator if the application implements encryption, key exchange, digital signature, and hash functionality." name="APSC_DV.002290" rules="30" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Flow Analysis" name="BD" rules="75" total="0">
               <Category authTot="0;" authUrg="0;" desc="API" name="BD.API" rules="3" total="0"/>
               <Category authTot="1;" authUrg="1;" desc="Possible Bugs" name="BD.PB" rules="23" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="Resources" name="BD.RES" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Optimization" name="BD.OPT" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Threads &amp; Synchronization" name="BD.TRS" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Collections" name="BD.CO" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Security" name="BD.SECURITY" rules="36" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Exceptions" name="BD.EXCEPT" rules="1" total="0"/>
            </Category>
            <Category authTot="8;" authUrg="0;" desc="JavaBeans" name="BEAN" rules="5" total="8"/>
            <Category authTot="1;" authUrg="1;" desc="Code Duplication Detection" name="CDD" rules="6" total="1"/>
            <Category authTot="0;" authUrg="0;" desc="SEI CERT Oracle Coding Standard for Java" name="CERT" rules="206" total="0">
               <Category authTot="0;" authUrg="0;" desc="IDS00-J: Prevent SQL Injection" name="CERT.IDS00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM00-J: Detect or prevent integer overflow" name="CERT.NUM00" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM01-J: Do not perform bitwise and arithmetic operations on the same data" name="CERT.NUM01" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="IDS03-J: Do not log unsanitized user input" name="CERT.IDS03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="IDS06-J: Exclude unsanitized uer input from format strings" name="CERT.IDS06" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="IDS07-J: Sanitize untrusted data passed to Runtime.exec() method" name="CERT.IDS07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM08-J: Check floating-point inputs for exceptional values" name="CERT.NUM08" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM09-J: Do not use floating-point variables as loop counters" name="CERT.NUM09" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="TSM02-J: Do not use background threads during class initialization" name="CERT.TSM02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM07-J: Do not attempt comparisons with NaN" name="CERT.NUM07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET12-J: Do not use finalizers" name="CERT.MET12" rules="9" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM04-J: Do not use floating-point numbers if precise computation is required" name="CERT.NUM04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET11-J: Ensure that keys used in comparison operations are immutable" name="CERT.MET11" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM02-J: Ensure that division and remainder operations do not result in divide by zero errors" name="CERT.NUM02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK10-J: Use a correct form of the double-checked locking idiom" name="CERT.LCK10" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET04-J: Do not increase the accessibility of overridden or hidden methods" name="CERT.MET04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET07-J: Never declare a class method that hides a method declared in a superclass or superinterfaces" name="CERT.MET07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET06-J: Do not invoke overridable methods in clone()" name="CERT.MET06" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET09-J: Classes that define equals() method must also define hashCode() method" name="CERT.MET09" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="TSM00-J: Do not override thread-safe methods with methods that are not thread-safe" name="CERT.TSM00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET08-J: Preserve the equality contract when overriding the equals() method" name="CERT.MET08" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="TSM01-J: Do not let the this reference escape during object construction" name="CERT.TSM01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="VNA03-J: Do not assume that a group of calls to independently atomic methods is atomic" name="CERT.VNA03" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="VNA00-J: Ensure visibility when accessing shared primitive variables" name="CERT.VNA00" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="VNA02-J: Ensure that compound operations on shared variables are atomic" name="CERT.VNA02" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM12-J: Ensure conversions of numeric types to narrower types do not result in lost or misinterpreted data" name="CERT.NUM12" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER04-J: Do not allow serialization and deserialization to bypass the security manager" name="CERT.SER04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER07-J: Do not use the default serialized form for classes with implementation-defined invariants" name="CERT.SER07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM10-J: Do not construct BigDecimal objects from floating-point literals" name="CERT.NUM10" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER01-J: Do not deviate from the proper signatures of serialization methods" name="CERT.SER01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER00-J: Enable serialization compatibility during class evolution" name="CERT.SER00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER03-J: Do not serialize unencrypted, sensitive data" name="CERT.SER03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ENV02-J: Do not trust the values of environment variables" name="CERT.ENV02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER09-J: Do not invoke overridable methods from readObject() method" name="CERT.SER09" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="NUM13-J: Avoid loss of precision when converting primitive integers to floating-point" name="CERT.NUM13" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MET02-J: Do not use deprecated or obsolete classes or methods" name="CERT.MET02" rules="2" total="0"/>
               <Category authTot="3;" authUrg="2;" desc="OBJ05-J: Defensively copy private mutable class members before returning their references" name="CERT.OBJ05" rules="4" total="3"/>
               <Category authTot="3;" authUrg="3;" desc="OBJ06-J: Defensively copy mutable inputs and mutable internal components" name="CERT.OBJ06" rules="4" total="3"/>
               <Category authTot="10;" authUrg="3;" desc="OBJ07-J: Sensitive classes must not let themselves be copied" name="CERT.OBJ07" rules="1" total="10"/>
               <Category authTot="0;" authUrg="0;" desc="OBJ08-J: Do not expose private members of an outer class from within a nested class" name="CERT.OBJ08" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK02-J: Do not synchronize on the class object returned by getClass()" name="CERT.LCK02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK00-J: Use private final lock objects to synchronize classes that may interact with untrusted code" name="CERT.LCK00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="OBJ03-J: Prevent heap pollution" name="CERT.OBJ03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK01-J: Do not synchronize on objects that may be reused" name="CERT.LCK01" rules="1" total="0"/>
               <Category authTot="3;" authUrg="2;" desc="OBJ04-J: Provide mutable classes with copy functionality to safely allow passing instances to untrusted code" name="CERT.OBJ04" rules="5" total="3"/>
               <Category authTot="0;" authUrg="0;" desc="LCK06-J: Do not use an instance lock to protect shared static data" name="CERT.LCK06" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK07-J: Avoid deadlock by requesting and releasing locks in the same order" name="CERT.LCK07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK04-J: Do not synchronize on a collection view if the backing collection is accessible" name="CERT.LCK04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK05-J: Synchronize access to static fields that can be modified by untrusted code" name="CERT.LCK05" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK08-J: Ensure acrively held locks are released on exceptional conditions" name="CERT.LCK08" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="LCK09-J: Do not perform operations that can block while holding a lock" name="CERT.LCK09" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SER11-J: Prevent overwriting of externalizable objects" name="CERT.SER11" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC02-J: Generate strong random numbers" name="CERT.MSC02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC01-J: Do not use an empty infinite loop" name="CERT.MSC01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC00-J: Use SSLSocket rather than Socket for secure data exchange" name="CERT.MSC00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="TPS00-J: Use thread pools to enable graceful degradation of service during traffic bursts" name="CERT.TPS00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="DCL00-J: Prevent class initialization cycles" name="CERT.DCL00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="DCL02-J: Do not modify the collector's elements during an enhanced for statement" name="CERT.DCL02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO04-J: Release resources when they are no longer needed" name="CERT.FIO04" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO05-J: Do not expose buffers created using the wrap() or duplicate() methods to untrusted code" name="CERT.FIO05" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO06-J: Do not create multiple buffered wrappers on a single byte of character strream" name="CERT.FIO06" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO07.JDo not let external process block on IO buffers" name="CERT.FIO07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO08-J: Distinguish between characters or bytes read from a stream and -1" name="CERT.FIO08" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO09-J: Do not rely on the write() method to output integers outside the range 0 - 255" name="CERT.FIO09" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO03-J: Remove temporary files before termination" name="CERT.FIO03" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR01-J: Do not allow exceptions to expose sensitive data" name="CERT.ERR01" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO16-J: Canonicalize path names before validating them." name="CERT.FIO16" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR00-J: Do not suppress or ignore checked exceptions" name="CERT.ERR00" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR09-J: Do not allow untrusted code to terminate the JVM" name="CERT.ERR09" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR07-J: Do not throw RuntimeExceptions, Exceptions or Throwable" name="CERT.ERR07" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR08-J: Do not catch NullPointerExceptions or any of its ancestors" name="CERT.ERR08" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR05-J: Do not let checked exceptions escape from a finally block" name="CERT.ERR05" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="JNI01-J: Safely invoke standard APIs that perform tasks using the immediate caller's class loader instance (LoadLibrary)" name="CERT.JNI01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR03-J: Restore prior object state on method failure" name="CERT.ERR03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="JNI00-J: Define wrappers around native methods" name="CERT.JNI00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="ERR04-J: Do not complete abruptly from finally block" name="CERT.ERR04" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC07-J: Prevent multiple instantiations of singleton objects" name="CERT.MSC07" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC06-J: Do not modify the underlying collection when an iteration is in progress" name="CERT.MSC06" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC04-J: Do not leak memory" name="CERT.MSC04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="MSC03-J: Never hard code sensitive information" name="CERT.MSC03" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO12-J: Provide methods to read a write little-endian data" name="CERT.FIO12" rules="1" total="0"/>
               <Category authTot="4;" authUrg="0;" desc="STR00-J: Don't form strings containing partial characters from variable-width encodings" name="CERT.STR00" rules="1" total="4"/>
               <Category authTot="0;" authUrg="0;" desc="FIO13-J: Do not log sensitive information outside a trusted boundary" name="CERT.FIO13" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="STR01-J: Do not assume that a Java char fully represents a Unicode code point" name="CERT.STR01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="FIO14-J: Perform proper cleanup at program termination" name="CERT.FIO14" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="STR02-J: Specify an appropriate locale when comparing locale-dependent data" name="CERT.STR02" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="OBJ09-J: Compare classes and not class names" name="CERT.OBJ09" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SEC04-J: Protect sensitive operations with security manager checks" name="CERT.SEC04" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SEC03-J: Do not load trusted classes after allowing untrusted code to load in arbitrary classes" name="CERT.SEC03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SEC05-J: Do not use reflection to increase accessibility of classes, methods or fields" name="CERT.SEC05" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="EXP00-J: Do not ignore values returned by methods" name="CERT.EXP00" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="EXP02-J: Do not use the Object.equals() method to compare two arrays" name="CERT.EXP02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SEC02-J: Do not base security checks on untrusted sources" name="CERT.SEC02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="EXP01-J: Do not use a null in a case where an object is required" name="CERT.EXP01" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="SEC01-J: Do not allow tainted variables in privileged blocks" name="CERT.SEC01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="OBJ10-J: Do not use public static nonfinal variables" name="CERT.OBJ10" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="OBJ11-J: Be wary of letting constructors throw exceptions" name="CERT.OBJ11" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="IDS11-J: Perform any string modifications before validation" name="CERT.IDS11" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="THI00-J: Do not invoke Thread::run()" name="CERT.THI00" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="THI02-J: Notify all waiting threads rather than a single thread" name="CERT.THI02" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="THI01-J: Do not invode ThreadGroup methods" name="CERT.THI01" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="IDS16-J: Prevent XML injection" name="CERT.IDS16" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="EXP03-J: Do not use the equality operators when comparing boxed values" name="CERT.EXP03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="EXP05-J: Do not follow a write by a subsequent write or read of the same object within an expression" name="CERT.EXP05" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="THI03-J: Always invoke wait() and await() methods inside a loop" name="CERT.THI03" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="THI05-J: Do not use Thread::stop() to terminate threads." name="CERT.THI05" rules="1" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Coding Conventions" name="CODSTA" rules="112" total="0">
               <Category authTot="8;" authUrg="0;" desc="Poor Object Oriented Design" name="CODSTA.POD" rules="11" total="8"/>
               <Category authTot="11;" authUrg="0;" desc="Bad Practice" name="CODSTA.BP" rules="24" total="11"/>
               <Category authTot="4;" authUrg="0;" desc="Organization" name="CODSTA.ORG" rules="15" total="4"/>
               <Category authTot="0;" authUrg="0;" desc="Error-Prone Coding" name="CODSTA.EPC" rules="15" total="0"/>
               <Category authTot="10;" authUrg="0;" desc="Readability" name="CODSTA.READ" rules="39" total="10"/>
               <Category authTot="0;" authUrg="0;" desc="Overriding and Implementing Methods" name="CODSTA.OIM" rules="8" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Common Weakness Enumeration 4.14" name="CWE" rules="450" total="0">
               <Category authTot="0;" authUrg="0;" desc="CWE-787: Out-of-bounds Write" name="CWE.787" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-543: Use of Singleton Pattern Without Synchronization in a Multithreaded Context" name="CWE.543" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-662: Improper Synchronization" name="CWE.662" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-306: Missing Authentication for Critical Function" name="CWE.306" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-427: Uncontrolled Search Path Element" name="CWE.427" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-307: Improper Restriction of Excessive Authentication Attempts" name="CWE.307" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-546: Suspicious Comment" name="CWE.546" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-667: Improper Locking" name="CWE.667" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-15: External Control of System or Configuration Setting" name="CWE.15" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-426: Untrusted Search Path" name="CWE.426" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-789: Memory Allocation with Excessive Size Value" name="CWE.789" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-413: Improper Resource Locking" name="CWE.413" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-652: Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')" name="CWE.652" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-532: Insertion of Sensitive Information into Log File" name="CWE.532" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-771: Missing Reference to Active Allocated Resource" name="CWE.771" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-772: Missing Release of Resource after Effective Lifetime" name="CWE.772" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-770: Allocation of Resources Without Limits or Throttling" name="CWE.770" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-20: Improper Input Validation" name="CWE.20" rules="27" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')" name="CWE.22" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-416: Use After Free" name="CWE.416" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-778: Insufficient Logging" name="CWE.778" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-522: Insufficiently Protected Credentials" name="CWE.522" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-643: Improper Neutralization of Data within XPath Expressions ('XPath Injection')" name="CWE.643" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-764: Multiple Locks of a Critical Resource" name="CWE.764" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-523: Unprotected Transport of Credentials" name="CWE.523" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-644: Improper Neutralization of HTTP Headers for Scripting Syntax" name="CWE.644" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-400: Uncontrolled Resource Consumption" name="CWE.400" rules="5" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-521: Weak Password Requirements" name="CWE.521" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-404: Improper Resource Shutdown or Release" name="CWE.404" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-511: Logic/Time Bomb" name="CWE.511" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-198: Use of Incorrect Byte Ordering" name="CWE.198" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-193: Off-by-one Error" name="CWE.193" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-191: Integer Underflow (Wrap or Wraparound)" name="CWE.191" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-190: Integer Overflow or Wraparound" name="CWE.190" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-759: Use of a One-Way Hash without a Salt" name="CWE.759" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-755: Improper Handling of Exceptional Conditions" name="CWE.755" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-500: Public Static Field Not Marked Final" name="CWE.500" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-863: Incorrect Authorization" name="CWE.863" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-501: Trust Boundary Violation" name="CWE.501" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-862: Missing Authorization" name="CWE.862" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-185: Incorrect Regular Expression" name="CWE.185" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-506: Embedded Malicious Code" name="CWE.506" rules="1" total="0"/>
               <Category authTot="3;" authUrg="0;" desc="CWE-749: Exposed Dangerous Method or Function" name="CWE.749" rules="3" total="3"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-502: Deserialization of Untrusted Data" name="CWE.502" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-611: Improper Restriction of XML External Entity Reference" name="CWE.611" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-732: Incorrect Permission Assignment for Critical Resource" name="CWE.732" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-297: Improper Validation of Certificate with Host Mismatch" name="CWE.297" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-295: Improper Certificate Validation" name="CWE.295" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-290: Authentication Bypass by Spoofing" name="CWE.290" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-617: Reachable Assertion" name="CWE.617" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute" name="CWE.614" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-613: Insufficient Session Expiration" name="CWE.613" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-841: Improper Enforcement of Behavioral Workflow" name="CWE.841" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-600: Uncaught Exception in Servlet" name="CWE.600" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-287: Improper Authentication" name="CWE.287" rules="21" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-609: Double-Checked Locking" name="CWE.609" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-607: Public Static Final Field References Mutable Object" name="CWE.607" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-605: Multiple Binds to the Same Port" name="CWE.605" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-601: URL Redirection to Untrusted Site ('Open Redirect')" name="CWE.601" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-843: Access of Resource Using Incompatible Type ('Type Confusion')" name="CWE.843" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-279: Incorrect Execution-Assigned Permissions" name="CWE.279" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-397: Declaration of Throws for Generic Exception" name="CWE.397" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-395: Use of NullPointerException Catch to Detect NULL Pointer Dereference" name="CWE.395" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-396: Declaration of Catch for Generic Exception" name="CWE.396" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-391: Unchecked Error Condition" name="CWE.391" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag" name="CWE.1004" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-390: Detection of Error Condition Without Action" name="CWE.390" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-838: Inappropriate Encoding for Output Context" name="CWE.838" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-836: Use of Password Hash Instead of Password for Authentication" name="CWE.836" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-835: Loop with Unreachable Exit Condition ('Infinite Loop')" name="CWE.835" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-832: Unlock of a Resource that is not Locked" name="CWE.832" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-833: Deadlock" name="CWE.833" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-269: Improper Privilege Management" name="CWE.269" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-384: Session Fixation" name="CWE.384" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-261: Weak Encoding for Password" name="CWE.261" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-382: J2EE Bad Practices: Use of System.exit()" name="CWE.382" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-383: J2EE Bad Practices: Direct Use of Threads" name="CWE.383" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-260: Password in Configuration File" name="CWE.260" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-99: Improper Control of Resource Identifiers ('Resource Injection')" name="CWE.99" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-829: Inclusion of Functionality from Untrusted Control Sphere" name="CWE.829" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-94: Improper Control of Generation of Code ('Code Injection')" name="CWE.94" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')" name="CWE.95" rules="1" total="0"/>
               <Category authTot="1;" authUrg="0;" desc="CWE-704: Incorrect Type Conversion or Cast" name="CWE.704" rules="2" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-258: Empty Password in Configuration File" name="CWE.258" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-256: Plaintext Storage of a Password" name="CWE.256" rules="10" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-377: Insecure Temporary File" name="CWE.377" rules="1" total="0"/>
               <Category authTot="7;" authUrg="0;" desc="CWE-499: Serializable Class Containing Sensitive Data" name="CWE.499" rules="2" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-375: Returning a Mutable Object to an Untrusted Caller" name="CWE.375" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-496: Public Data Assigned to Private Array-Typed Field" name="CWE.496" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-134: Use of Externally-Controlled Format String" name="CWE.134" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere" name="CWE.497" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-131: Incorrect Calculation of Buffer Size" name="CWE.131" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-252: Unchecked Return Value" name="CWE.252" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-495: Private Data Structure Returned From A Public Method" name="CWE.495" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-250: Execution with Unnecessary Privileges" name="CWE.250" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-492: Use of Inner Class Containing Sensitive Data" name="CWE.492" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-491: Public cloneable() Method Without Final ('Object Hijack')" name="CWE.491" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-369: Divide By Zero" name="CWE.369" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-245: J2EE Bad Practices: Direct Management of Connections" name="CWE.245" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-487: Reliance on Package-level Scope" name="CWE.487" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-125: Out-of-bounds Read" name="CWE.125" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-246: J2EE Bad Practices: Direct Use of Sockets" name="CWE.246" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition" name="CWE.367" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-486: Comparison of Classes by Name" name="CWE.486" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')" name="CWE.362" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-483: Incorrect Block Delimitation" name="CWE.483" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-484: Omitted Break Statement in Switch" name="CWE.484" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-481: Assigning instead of Comparing" name="CWE.481" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-807: Reliance on Untrusted Inputs in a Security Decision" name="CWE.807" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-806: Buffer Access Using Size of Source Buffer" name="CWE.806" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-129: Improper Validation of Array Index" name="CWE.129" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-478: Missing Default Case in Multiple Condition Expression" name="CWE.478" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')" name="CWE.113" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-476: NULL Pointer Dereference" name="CWE.476" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-114: Process Control" name="CWE.114" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-477: Use of Obsolete Function" name="CWE.477" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-111: Direct Use of Unsafe JNI" name="CWE.111" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-595: Comparison of Object References Instead of Object Contents" name="CWE.595" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-352: Cross-Site Request Forgery (CSRF)" name="CWE.352" rules="8" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-594: J2EE Framework: Saving Unserializable Objects to Disk" name="CWE.594" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')" name="CWE.470" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-350: Reliance on Reverse DNS Resolution for a Security-Critical Action" name="CWE.350" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-918: Server-Side Request Forgery (SSRF)" name="CWE.918" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer" name="CWE.119" rules="5" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-117: Improper Output Neutralization for Logs" name="CWE.117" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-359: Exposure of Private Personal Information to an Unauthorized Actor" name="CWE.359" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-104: Struts: Form Bean Does Not Extend Validation Class" name="CWE.104" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-346: Origin Validation Error" name="CWE.346" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-347: Improper Verification of Cryptographic Signature" name="CWE.347" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-102: Struts: Duplicate Validation Forms" name="CWE.102" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-586: Explicit Call to Finalize()" name="CWE.586" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-103: Struts: Incomplete validate() Method Definition" name="CWE.103" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-584: Return Inside Finally Block" name="CWE.584" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-585: Empty Synchronized Block" name="CWE.585" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-582: Array Declared Public, Final, and Static" name="CWE.582" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-583: finalize() Method Declared Public" name="CWE.583" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-580: clone() Method Without super.clone()" name="CWE.580" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-581: Object Model Violation: Just One of Equals and Hashcode Defined" name="CWE.581" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-109: Struts: Validator Turned Off" name="CWE.109" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-106: Struts: Plug-in Framework not in Use" name="CWE.106" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-59: Improper Link Resolution Before File Access ('Link Following')" name="CWE.59" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-456: Missing Initialization of a Variable" name="CWE.456" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-577: EJB Bad Practices: Use of Sockets" name="CWE.577" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-215: Insertion of Sensitive Information Into Debugging Code" name="CWE.215" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-336: Same Seed in Pseudo-Random Number Generator (PRNG)" name="CWE.336" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-457: Use of Uninitialized Variable" name="CWE.457" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-578: EJB Bad Practices: Use of Class Loader" name="CWE.578" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer" name="CWE.212" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-213: Exposure of Sensitive Information Due to Incompatible Policies" name="CWE.213" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-576: EJB Bad Practices: Use of Java I/O" name="CWE.576" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-571: Expression is Always True" name="CWE.571" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-572: Call to Thread run() instead of start()" name="CWE.572" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-570: Expression is Always False" name="CWE.570" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-691: Insufficient Control Flow Management" name="CWE.691" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-64: Windows Shortcut Following (.LNK)" name="CWE.64" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-61: UNIX Symbolic Link (Symlink) Following" name="CWE.61" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-337: Predictable Seed in Pseudo-Random Number Generator (PRNG)" name="CWE.337" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-579: J2EE Bad Practices: Non-serializable Object Stored in Session" name="CWE.579" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)" name="CWE.338" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-459: Incomplete Cleanup" name="CWE.459" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-325: Missing Cryptographic Step" name="CWE.325" rules="2" total="0"/>
               <Category authTot="7;" authUrg="2;" desc="CWE-200: Exposure of Sensitive Information to an Unauthorized Actor" name="CWE.200" rules="7" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-321: Use of Hard-coded Cryptographic Key" name="CWE.321" rules="1" total="0"/>
               <Category authTot="2;" authUrg="1;" desc="CWE-563: Assignment to Variable without Use" name="CWE.563" rules="5" total="2"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-681: Incorrect Conversion between Numeric Types" name="CWE.681" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-561: Dead Code" name="CWE.561" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-680: Integer Overflow to Buffer Overflow" name="CWE.680" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)" name="CWE.80" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')" name="CWE.77" rules="1" total="0"/>
               <Category authTot="7;" authUrg="2;" desc="CWE-209: Generation of Error Message Containing Sensitive Information" name="CWE.209" rules="4" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-328: Use of Weak Hash" name="CWE.328" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')" name="CWE.78" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-329: Generation of Predictable IV with CBC Mode" name="CWE.329" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" name="CWE.79" rules="7" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-568: finalize() Method Without super.finalize()" name="CWE.568" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" name="CWE.327" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-313: Cleartext Storage in a File or on Disk" name="CWE.313" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-434: Unrestricted Upload of File with Dangerous Type" name="CWE.434" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-555: J2EE Misconfiguration: Plaintext Password in Configuration File" name="CWE.555" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-676: Use of Potentially Dangerous Function" name="CWE.676" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-798: Use of Hard-coded Credentials" name="CWE.798" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-311: Missing Encryption of Sensitive Data" name="CWE.311" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-6: J2EE Misconfiguration: Insufficient Session-ID Length" name="CWE.6" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-674: Uncontrolled Recursion" name="CWE.674" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-312: Cleartext Storage of Sensitive Information" name="CWE.312" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')" name="CWE.90" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-91: XML Injection (aka Blind XPath Injection)" name="CWE.91" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-81: Improper Neutralization of Script in an Error Message Web Page" name="CWE.81" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-83: Improper Neutralization of Script in Attributes in a Web Page" name="CWE.83" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-319: Cleartext Transmission of Sensitive Information" name="CWE.319" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-8: J2EE Misconfiguration: Entity Bean Declared Remote" name="CWE.8" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')" name="CWE.89" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-7: J2EE Misconfiguration: Missing Custom Error Page" name="CWE.7" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-315: Cleartext Storage of Sensitive Information in a Cookie" name="CWE.315" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="CWE-9: J2EE Misconfiguration: Weak Access Permissions for EJB Methods" name="CWE.9" rules="1" total="0"/>
            </Category>
            <Category authTot="2;" authUrg="0;" desc="Design by Contract" name="DBC" rules="18" total="2"/>
            <Category authTot="0;" authUrg="0;" desc="Eclipse Development" name="ECLIPSE" rules="3" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Enterprise JavaBeans" name="EJB" rules="62" total="0">
               <Category authTot="0;" authUrg="0;" desc="Enterprise JavaBeans 3" name="EJB.EJB3" rules="19" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Exceptions" name="EXCEPT" rules="19" total="0"/>
            <Category authTot="36;" authUrg="7;" desc="Formatting" name="FORMAT" rules="37" total="36"/>
            <Category authTot="0;" authUrg="0;" desc="Garbage Collection" name="GC" rules="12" total="0"/>
            <Category authTot="26;" authUrg="0;" desc="Global Static Analysis" name="GLOBAL" rules="23" total="26"/>
            <Category authTot="0;" authUrg="0;" desc="Hibernate Framework" name="HIBERNATE" rules="13" total="0"/>
            <Category authTot="1;" authUrg="0;" desc="Initialization" name="INIT" rules="14" total="1"/>
            <Category authTot="14;" authUrg="0;" desc="Internationalization" name="INTER" rules="17" total="14"/>
            <Category authTot="40;" authUrg="3;" desc="Javadoc Comments" name="JAVADOC" rules="25" total="40"/>
            <Category authTot="0;" authUrg="0;" desc="Java Database Connectivity" name="JDBC" rules="10" total="0"/>
            <Category authTot="14;" authUrg="0;" desc="JUnit Test Case" name="JUNIT" rules="31" total="14"/>
            <Category authTot="18;" authUrg="0;" desc="Metric" name="METRIC" rules="50" total="18"/>
            <Category authTot="13;" authUrg="0;" desc="Embedded Devices" name="MOBILE" rules="17" total="13">
               <Category authTot="0;" authUrg="0;" desc="Java 2 Micro Edition" name="MOBILE.J2ME" rules="7" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Google Android" name="MOBILE.ANDROID" rules="2" total="0"/>
            </Category>
            <Category authTot="15;" authUrg="1;" desc="Naming Conventions" name="NAMING" rules="38" total="15"/>
            <Category authTot="11;" authUrg="2;" desc="Object Oriented Programming" name="OOP" rules="35" total="11"/>
            <Category authTot="3;" authUrg="0;" desc="Optimization" name="OPT" rules="56" total="3"/>
            <Category authTot="0;" authUrg="0;" desc="OWASP Top 10 Most Critical Web Application Security Risks (2017)" name="OWASP2017" rules="75" total="0">
               <Category authTot="0;" authUrg="0;" desc="A2-Broken Authentication" name="OWASP2017.A2" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A1-Injection" name="OWASP2017.A1" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A10-Insufficient Logging&amp;Monitoring" name="OWASP2017.A10" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A8-Insecure Deserialization" name="OWASP2017.A8" rules="9" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A7-Cross-Site Scripting (XSS)" name="OWASP2017.A7" rules="3" total="0"/>
               <Category authTot="7;" authUrg="2;" desc="A6-Security Misconfiguration" name="OWASP2017.A6" rules="18" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="A5-Broken Access Control" name="OWASP2017.A5" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A4-XML External Entities (XXE)" name="OWASP2017.A4" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A3-Sensitive Data Exposure" name="OWASP2017.A3" rules="22" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="OWASP API Security Top 10 (2019)" name="OWASP2019" rules="167" total="0">
               <Category authTot="0;" authUrg="0;" desc="API3-Excessive Data Exposure" name="OWASP2019.API3" rules="33" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="API2-Broken User Authentication" name="OWASP2019.API2" rules="23" total="0"/>
               <Category authTot="7;" authUrg="2;" desc="API10-Insufficient Logging &amp; Monitoring" name="OWASP2019.API10" rules="11" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="API5-Broken Function Level Authorization" name="OWASP2019.API5" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="API4-Lack of Resources &amp; Rate Limiting" name="OWASP2019.API4" rules="9" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="API7-Security Misconfiguration" name="OWASP2019.API7" rules="46" total="0"/>
               <Category authTot="1;" authUrg="0;" desc="API9-Improper Assets Management" name="OWASP2019.API9" rules="11" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="API8-Injection" name="OWASP2019.API8" rules="33" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="OWASP Top 10 Most Critical Web Application Security Risks (2021)" name="OWASP2021" rules="93" total="0">
               <Category authTot="0;" authUrg="0;" desc="A10-Server-Side Request Forgery" name="OWASP2021.A10" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A7-Identification and Authentication Failures" name="OWASP2021.A7" rules="6" total="0"/>
               <Category authTot="7;" authUrg="2;" desc="A5-Security Misconfiguration" name="OWASP2021.A5" rules="18" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="A4-Insecure Design" name="OWASP2021.A4" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A9-Security Logging and Monitoring Failures" name="OWASP2021.A9" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A8-Software and Data Integrity Failures" name="OWASP2021.A8" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A3-Injection" name="OWASP2021.A3" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A2-Cryptographic Failures" name="OWASP2021.A2" rules="20" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="A1-Broken Access Control" name="OWASP2021.A1" rules="2" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Possible Bugs" name="PB" rules="142" total="0">
               <Category authTot="0;" authUrg="0;" desc="Typographical Errors" name="PB.TYPO" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Useless Code" name="PB.USC" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Numerical Errors" name="PB.NUM" rules="17" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="API Usage and Implementation" name="PB.API" rules="25" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Logical Errors" name="PB.LOGIC" rules="18" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Confusing or Unintended Behavior" name="PB.CUB" rules="33" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Runtime Exceptions" name="PB.RE" rules="17" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Payment Card Industry Data Security Standard 3.2" name="PCIDSS32" rules="72" total="0">
               <Category authTot="0;" authUrg="0;" desc="6.5.10 Broken authentication and session management" name="PCIDSS32.6510" rules="14" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.8 Improper access control" name="PCIDSS32.658" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.9 Cross-site request forgery (CSRF)" name="PCIDSS32.659" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.7 Cross-site scripting (XSS)" name="PCIDSS32.657" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.4 Insecure communications" name="PCIDSS32.654" rules="6" total="0"/>
               <Category authTot="7;" authUrg="2;" desc="6.5.5 Improper error handling" name="PCIDSS32.655" rules="11" total="7"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.3 Insecure cryptographic storage" name="PCIDSS32.653" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="6.5.1 Injection flaws" name="PCIDSS32.651" rules="14" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Portability" name="PORT" rules="9" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Property Files" name="PROPS" rules="17" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Security" name="SECURITY" rules="175" total="0">
               <Category authTot="0;" authUrg="0;" desc="Unsafe Environment Configuration" name="SECURITY.UEC" rules="38" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Unsafe Error Handling and Logging" name="SECURITY.UEHL" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Input-Based Attacks" name="SECURITY.IBA" rules="14" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Deadlocks and Race Conditions" name="SECURITY.DRC" rules="1" total="0"/>
               <Category authTot="47;" authUrg="3;" desc="Weak Security Controls" name="SECURITY.WSC" rules="81" total="47"/>
               <Category authTot="0;" authUrg="0;" desc="Backdoor Vulnerabilities" name="SECURITY.BV" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="Erratic Application Behavior" name="SECURITY.EAB" rules="14" total="0"/>
               <Category authTot="7;" authUrg="1;" desc="Exposing Sensitive Data" name="SECURITY.ESD" rules="14" total="7"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Serialization" name="SERIAL" rules="18" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Servlets" name="SERVLET" rules="17" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Spring Framework" name="SPRING" rules="14" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Struts Framework" name="STRUTS" rules="30" total="0">
               <Category authTot="0;" authUrg="0;" desc="Struts 2" name="STRUTS.STRUTS2" rules="4" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Threads &amp; Synchronization" name="TRS" rules="52" total="0"/>
            <Category authTot="1;" authUrg="0;" desc="Unused Code" name="UC" rules="28" total="1"/>
            <Category authTot="0;" authUrg="0;" desc="XML Development" name="XML" rules="3" total="0"/>
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000070" desc="Ensure proper session expiration" id="APSC_DV.000070.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000080" desc="Ensure proper session expiration" id="APSC_DV.000080.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.000160.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000160.ADS" origId="SECURITY.UEC.ADS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000160.AELQ" origId="SECURITY.UEC.AELQ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.000160.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.000160.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.000160.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.000160.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000160.DSL" origId="SECURITY.UEC.DSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.000160.DSR" origId="SECURITY.UEC.DSR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000160.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.000160.FMCD" origId="SECURITY.UEC.FMCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.000160.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.000160.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.000160.ISOS" origId="SECURITY.UEC.ISOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000160.LCA" origId="SECURITY.UEC.LCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use hash functions with a salt" id="APSC_DV.000160.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.000160.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.000160.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000160.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000160.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.000160.RAJ" origId="SECURITY.UEC.RAJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.000160.REST" origId="SECURITY.UEC.REST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000160.SDAR" origId="SECURITY.UEC.SDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Always specify error pages in web.xml" id="APSC_DV.000160.SEP" origId="SECURITY.UEC.SEP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.000160.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using the SOAP Monitor module" id="APSC_DV.000160.SMM" origId="SECURITY.UEC.SMM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000160.SRCD" origId="SECURITY.UEC.SRCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.000160.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.000160.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000160.TDAR" origId="SECURITY.UEC.TDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.000160.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.000160.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.000160.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMI" origId="SECURITY.UEC.WCMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCUTS" origId="SECURITY.UEC.WCUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.000160.WELC" origId="SECURITY.UEC.WELC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.000160.WSS" origId="SECURITY.UEC.WSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WUTS" origId="SECURITY.UEC.WUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.000170.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000170.ADS" origId="SECURITY.UEC.ADS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000170.AELQ" origId="SECURITY.UEC.AELQ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.000170.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.000170.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.000170.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.000170.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000170.DSL" origId="SECURITY.UEC.DSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.000170.DSR" origId="SECURITY.UEC.DSR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000170.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.000170.FMCD" origId="SECURITY.UEC.FMCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.000170.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.000170.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.000170.ISOS" origId="SECURITY.UEC.ISOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000170.LCA" origId="SECURITY.UEC.LCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use hash functions with a salt" id="APSC_DV.000170.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.000170.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.000170.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000170.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000170.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.000170.RAJ" origId="SECURITY.UEC.RAJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.000170.REST" origId="SECURITY.UEC.REST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000170.SDAR" origId="SECURITY.UEC.SDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Always specify error pages in web.xml" id="APSC_DV.000170.SEP" origId="SECURITY.UEC.SEP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.000170.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using the SOAP Monitor module" id="APSC_DV.000170.SMM" origId="SECURITY.UEC.SMM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000170.SRCD" origId="SECURITY.UEC.SRCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.000170.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.000170.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000170.TDAR" origId="SECURITY.UEC.TDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.000170.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.000170.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.000170.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMI" origId="SECURITY.UEC.WCMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCUTS" origId="SECURITY.UEC.WCUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.000170.WELC" origId="SECURITY.UEC.WELC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.000170.WSS" origId="SECURITY.UEC.WSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WUTS" origId="SECURITY.UEC.WUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.000460.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000460.LCA" origId="SECURITY.UEC.LCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Avoid EJB 3 methods without security annotations" id="APSC_DV.000460.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000460.SRCD" origId="SECURITY.UEC.SRCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Keep all authentication methods centralized to enforce consistency" id="APSC_DV.000480.CAM" origId="SECURITY.WSC.CAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.000480.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure that an appropriate security manager is set" id="APSC_DV.000480.SSM" origId="SECURITY.WSC.SSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Protect against SQL injection" id="APSC_DV.000480.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid using anonymous &quot;privileged&quot; classes when invoking &quot;AccessController.doPrivileged()&quot;" id="APSC_DV.000500.ACDP" origId="SECURITY.WSC.ACDP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' &quot;final&quot;" id="APSC_DV.000500.PAF" origId="SECURITY.WSC.PAF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Wrap &quot;privileged&quot; method invocations in &quot;final&quot; methods" id="APSC_DV.000500.PCFM" origId="SECURITY.BV.PCFM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="APSC_DV.000500.PCL" origId="SECURITY.EAB.PCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Wrap &quot;privileged&quot; method invocations in &quot;private&quot; methods" id="APSC_DV.000500.PCPM" origId="SECURITY.BV.PCPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid using dynamically loaded classes in &quot;privileged&quot; code blocks" id="APSC_DV.000500.PDLC" origId="SECURITY.BV.PDLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package" id="APSC_DV.000500.PPKG" origId="SECURITY.WSC.PPKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid operating on tainted data in privileged blocks" id="APSC_DV.000500.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations &quot;final&quot;" id="APSC_DV.000500.PRMF" origId="SECURITY.WSC.PRMF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid using anonymous &quot;privileged&quot; classes when invoking &quot;AccessController.doPrivileged()&quot;" id="APSC_DV.000510.ACDP" origId="SECURITY.WSC.ACDP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' &quot;final&quot;" id="APSC_DV.000510.PAF" origId="SECURITY.WSC.PAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Wrap &quot;privileged&quot; method invocations in &quot;final&quot; methods" id="APSC_DV.000510.PCFM" origId="SECURITY.BV.PCFM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="APSC_DV.000510.PCL" origId="SECURITY.EAB.PCL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Wrap &quot;privileged&quot; method invocations in &quot;private&quot; methods" id="APSC_DV.000510.PCPM" origId="SECURITY.BV.PCPM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid using dynamically loaded classes in &quot;privileged&quot; code blocks" id="APSC_DV.000510.PDLC" origId="SECURITY.BV.PDLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package" id="APSC_DV.000510.PPKG" origId="SECURITY.WSC.PPKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid operating on tainted data in privileged blocks" id="APSC_DV.000510.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations &quot;final&quot;" id="APSC_DV.000510.PRMF" origId="SECURITY.WSC.PRMF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Do not log confidential or sensitive information" id="APSC_DV.000650.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Ensure all sensitive method invocations are logged" id="APSC_DV.000650.ENFL" origId="SECURITY.BV.ENFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="APSC_DV.000650.LHII" origId="HIBERNATE.LHII" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Prevent exposure of sensitive data" id="APSC_DV.000650.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Avoid passing sensitive data to functions that write to log files" id="APSC_DV.000650.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Avoid untrusted input when logging messages with Seam Logging API" id="APSC_DV.001290.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Avoid passing unvalidated binary data to log methods" id="APSC_DV.001290.LOG" origId="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against log forging" id="APSC_DV.001290.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against SQL injection" id="APSC_DV.001290.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Avoid untrusted input when logging messages with Seam Logging API" id="APSC_DV.001300.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Avoid passing unvalidated binary data to log methods" id="APSC_DV.001300.LOG" origId="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against log forging" id="APSC_DV.001300.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="APSC_DV.001460.ACPST" origId="SECURITY.WSC.ACPST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="APSC_DV.001460.AECB" origId="PB.TYPO.AECB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.001460.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.001460.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.001460.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid parsing untrusted data with XMLDecoder" id="APSC_DV.001460.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Canonicalize data before validation" id="APSC_DV.001460.CDBV" origId="SECURITY.IBA.CDBV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not log confidential or sensitive information" id="APSC_DV.001460.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not disable CSRF protection" id="APSC_DV.001460.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not disable CSRF protection" id="APSC_DV.001460.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid duplicated forms in the 'validation.xml'" id="APSC_DV.001460.DFV" origId="STRUTS.DFV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using the DriverManagerDataSource class in production code" id="APSC_DV.001460.DMDS" origId="SECURITY.WSC.DMDS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid DNS lookups for decision making" id="APSC_DV.001460.DNSL" origId="SECURITY.WSC.DNSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="APSC_DV.001460.DPANY" origId="EJB.DPANY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="APSC_DV.001460.DUID" origId="SERIAL.DUID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Disable XML external entity injection" id="APSC_DV.001460.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure all sensitive method invocations are logged" id="APSC_DV.001460.ENFL" origId="SECURITY.BV.ENFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.001460.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure validators are enabled in the 'struts-config.xml'" id="APSC_DV.001460.EV" origId="STRUTS.EV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid debug information from Spring Security framework to logs" id="APSC_DV.001460.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.001460.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not hard-code IP addresses and port numbers" id="APSC_DV.001460.HCNA" origId="PORT.HCNA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.001460.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="APSC_DV.001460.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.001460.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.001460.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.001460.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="APSC_DV.001460.ISL" origId="SECURITY.WSC.ISL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="APSC_DV.001460.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Restrict cross-origin resource sharing to secure origins" id="APSC_DV.001460.JXCORS" origId="SECURITY.WSC.JXCORS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="APSC_DV.001460.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes" id="APSC_DV.001460.MASP" origId="PB.API.MASP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.001460.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use hash functions with a salt" id="APSC_DV.001460.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not catch exception types which are too general or are unchecked exceptions" id="APSC_DV.001460.NCE" origId="CODSTA.EPC.NCE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not catch 'NullPointerException'" id="APSC_DV.001460.NCNPE" origId="EXCEPT.NCNPE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not throw exception types which are too general or are unchecked exceptions" id="APSC_DV.001460.NTERR" origId="EXCEPT.NTERR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid declaring methods to throw general or unchecked Exception types" id="APSC_DV.001460.NTX" origId="CODSTA.BP.NTX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure method arguments are serializable" id="APSC_DV.001460.ONS" origId="PB.API.ONS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes" id="APSC_DV.001460.OROM" origId="SECURITY.EAB.OROM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure sufficient protection against multiple failed authentication attempts" id="APSC_DV.001460.PBFA" origId="SECURITY.WSC.PBFA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always specify absolute paths to execute commands" id="APSC_DV.001460.PBRTE" origId="SECURITY.WSC.PBRTE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001460.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="APSC_DV.001460.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Password information should not be included in properties file in plaintext" id="APSC_DV.001460.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.001460.PLC" origId="SECURITY.ESD.PLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure Plugins are added in the 'struts-config.xml'" id="APSC_DV.001460.PLUGIN" origId="STRUTS.PLUGIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001460.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001460.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001460.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not declare entity beans as remote" id="APSC_DV.001460.RR" origId="EJB.RR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="APSC_DV.001460.RRSC" origId="SERIAL.RRSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure proper session expiration" id="APSC_DV.001460.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="APSC_DV.001460.RWAF" origId="SERIAL.RWAF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Disable LDAP deserialization" id="APSC_DV.001460.SC" origId="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents" id="APSC_DV.001460.SCBNP" origId="SERIAL.SCBNP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Prevent exposure of sensitive data" id="APSC_DV.001460.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always specify error pages in web.xml" id="APSC_DV.001460.SEP" origId="SECURITY.UEC.SEP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Initialize KeyGenerator instances" id="APSC_DV.001460.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="1;" cat="APSC_DV.001460" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="APSC_DV.001460.SIO" origId="SECURITY.ESD.SIO" sev="2" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.001460.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not store non-serializable objects as HttpSession attributes" id="APSC_DV.001460.SNSO" origId="SERIAL.SNSO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.001460.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not declare the 'readObject()' method as &quot;synchronized&quot;" id="APSC_DV.001460.SROS" origId="SERIAL.SROS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Safely serialize sensitive data" id="APSC_DV.001460.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.001460.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Command injection" id="APSC_DV.001460.TDCMD" origId="BD.SECURITY.TDCMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Jakarta Digester injection" id="APSC_DV.001460.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Environment injection" id="APSC_DV.001460.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against File contents injection" id="APSC_DV.001460.TDFILES" origId="BD.SECURITY.TDFILES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against File names injection" id="APSC_DV.001460.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Exclude unsanitized user input from format strings" id="APSC_DV.001460.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against JXPath injection" id="APSC_DV.001460.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against LDAP injection" id="APSC_DV.001460.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Library injection" id="APSC_DV.001460.TDLIB" origId="BD.SECURITY.TDLIB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against log forging" id="APSC_DV.001460.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against network resource injection" id="APSC_DV.001460.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against using unprotected credentials" id="APSC_DV.001460.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against HTTP response splitting" id="APSC_DV.001460.TDRESP" origId="BD.SECURITY.TDRESP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Reflection injection" id="APSC_DV.001460.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not store untrusted data in HTTP session" id="APSC_DV.001460.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against SQL injection" id="APSC_DV.001460.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against XPath injection" id="APSC_DV.001460.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against XSS vulnerabilities" id="APSC_DV.001460.TDXSS" origId="BD.SECURITY.TDXSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="APSC_DV.001460.UOSC" origId="SECURITY.WSC.UOSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="APSC_DV.001460.UPS" origId="SECURITY.IBA.UPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.001460.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.001460.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always verify JarFile signatures" id="APSC_DV.001460.VJFS" origId="SECURITY.WSC.VJFS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Validate objects before deserialization" id="APSC_DV.001460.VOBD" origId="SERIAL.VOBD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Properly validate server identity" id="APSC_DV.001460.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001460.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001460.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001660.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001660.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001660.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001680" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="APSC_DV.001680.MLVP" origId="STRUTS.MLVP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001740.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001740.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001740.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.001740.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001740.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001750.ADS" origId="SECURITY.UEC.ADS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001750.AELQ" origId="SECURITY.UEC.AELQ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001750.DSL" origId="SECURITY.UEC.DSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.001750.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001750.EDAR" origId="SECURITY.UEC.EDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.001750.FMCD" origId="SECURITY.UEC.FMCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.001750.HTTPS" origId="SECURITY.UEC.HTTPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.001750.ISOS" origId="SECURITY.UEC.ISOS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.001750.LCA" origId="SECURITY.UEC.LCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001750.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001750.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001750.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001750.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.001750.RAJ" origId="SECURITY.UEC.RAJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.001750.REST" origId="SECURITY.UEC.REST" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001750.SDAR" origId="SECURITY.UEC.SDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Always specify error pages in web.xml" id="APSC_DV.001750.SEP" origId="SECURITY.UEC.SEP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.001750.SLID" origId="SECURITY.UEC.SLID" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid using the SOAP Monitor module" id="APSC_DV.001750.SMM" origId="SECURITY.UEC.SMM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.001750.SRCD" origId="SECURITY.UEC.SRCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.001750.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001750.TDAR" origId="SECURITY.UEC.TDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.001750.UDC" origId="SECURITY.UEC.UDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.001750.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMC" origId="SECURITY.UEC.WCMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMI" origId="SECURITY.UEC.WCMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMT" origId="SECURITY.UEC.WCMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCUTS" origId="SECURITY.UEC.WCUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.001750.WELC" origId="SECURITY.UEC.WELC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMC" origId="SECURITY.UEC.WMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMI" origId="SECURITY.UEC.WMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMT" origId="SECURITY.UEC.WMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.001750.WSS" origId="SECURITY.UEC.WSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WUTS" origId="SECURITY.UEC.WUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001850.ADS" origId="SECURITY.UEC.ADS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001850.AELQ" origId="SECURITY.UEC.AELQ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001850.DSL" origId="SECURITY.UEC.DSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.001850.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001850.EDAR" origId="SECURITY.UEC.EDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.001850.FMCD" origId="SECURITY.UEC.FMCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.001850.HTTPS" origId="SECURITY.UEC.HTTPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.001850.ISOS" origId="SECURITY.UEC.ISOS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.001850.LCA" origId="SECURITY.UEC.LCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001850.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001850.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001850.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001850.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.001850.RAJ" origId="SECURITY.UEC.RAJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.001850.REST" origId="SECURITY.UEC.REST" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001850.SDAR" origId="SECURITY.UEC.SDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Always specify error pages in web.xml" id="APSC_DV.001850.SEP" origId="SECURITY.UEC.SEP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.001850.SLID" origId="SECURITY.UEC.SLID" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid using the SOAP Monitor module" id="APSC_DV.001850.SMM" origId="SECURITY.UEC.SMM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.001850.SRCD" origId="SECURITY.UEC.SRCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.001850.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001850.TDAR" origId="SECURITY.UEC.TDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.001850.UDC" origId="SECURITY.UEC.UDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.001850.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMC" origId="SECURITY.UEC.WCMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMI" origId="SECURITY.UEC.WCMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMT" origId="SECURITY.UEC.WCMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCUTS" origId="SECURITY.UEC.WCUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.001850.WELC" origId="SECURITY.UEC.WELC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMC" origId="SECURITY.UEC.WMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMI" origId="SECURITY.UEC.WMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMT" origId="SECURITY.UEC.WMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.001850.WSS" origId="SECURITY.UEC.WSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WUTS" origId="SECURITY.UEC.WUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.001860.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.001860.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.001860.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.001860.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.001860.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Use hash functions with a salt" id="APSC_DV.001860.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.001860.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="APSC_DV.001995.DCL" origId="TRS.DCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid Time-of-check Time-of-use (TOCTOU) Race Condition" id="APSC_DV.001995.TOCTOU" origId="PB.CUB.TOCTOU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002000" desc="Ensure resources are deallocated" id="APSC_DV.002000.LEAKS" origId="BD.RES.LEAKS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002010.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002010.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002010.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002010.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002010.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002210" desc="Mark cookies as HttpOnly" id="APSC_DV.002210.SCHTTP" origId="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002220" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="APSC_DV.002220.UOSC" origId="SECURITY.WSC.UOSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002290.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Use hash functions with a salt" id="APSC_DV.002290.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.002290.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002350.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Do not use initialization circularities for fields" id="APSC_DV.002350.IC" origId="INIT.IC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002400" desc="Protect against network resource injection" id="APSC_DV.002400.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Do not log confidential or sensitive information" id="APSC_DV.002440.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Do not hard-code IP addresses and port numbers" id="APSC_DV.002440.HCNA" origId="PORT.HCNA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Password information should not be included in properties file in plaintext" id="APSC_DV.002440.PLAIN" origId="PROPS.PLAIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.002440.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Prevent exposure of sensitive data" id="APSC_DV.002440.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Prevent exposure of sensitive data" id="APSC_DV.002460.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Prevent exposure of sensitive data" id="APSC_DV.002470.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Prevent exposure of sensitive data" id="APSC_DV.002480.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002490" desc="Protect against XSS vulnerabilities" id="APSC_DV.002490.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002500" desc="Do not disable CSRF protection" id="APSC_DV.002500.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002500" desc="Do not disable CSRF protection" id="APSC_DV.002500.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002500" desc="Validate all dangerous data" id="APSC_DV.002500.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against Command injection" id="APSC_DV.002510.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against Environment injection" id="APSC_DV.002520.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against File names injection" id="APSC_DV.002520.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against LDAP injection" id="APSC_DV.002520.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against network resource injection" id="APSC_DV.002520.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against SQL injection" id="APSC_DV.002520.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Command injection" id="APSC_DV.002530.TDCMD" origId="BD.SECURITY.TDCMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Jakarta Digester injection" id="APSC_DV.002530.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Environment injection" id="APSC_DV.002530.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against File contents injection" id="APSC_DV.002530.TDFILES" origId="BD.SECURITY.TDFILES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against File names injection" id="APSC_DV.002530.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against JXPath injection" id="APSC_DV.002530.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against LDAP injection" id="APSC_DV.002530.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Library injection" id="APSC_DV.002530.TDLIB" origId="BD.SECURITY.TDLIB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against network resource injection" id="APSC_DV.002530.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Reflection injection" id="APSC_DV.002530.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against SQL injection" id="APSC_DV.002530.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against XML data injection" id="APSC_DV.002530.TDXML" origId="BD.SECURITY.TDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against XPath injection" id="APSC_DV.002530.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002540" desc="Protect against SQL injection" id="APSC_DV.002540.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Protect against XML data injection" id="APSC_DV.002550.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Command injection" id="APSC_DV.002560.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Jakarta Digester injection" id="APSC_DV.002560.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Environment injection" id="APSC_DV.002560.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against File contents injection" id="APSC_DV.002560.TDFILES" origId="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against File names injection" id="APSC_DV.002560.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against JXPath injection" id="APSC_DV.002560.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against LDAP injection" id="APSC_DV.002560.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Library injection" id="APSC_DV.002560.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against network resource injection" id="APSC_DV.002560.TDNET" origId="BD.SECURITY.TDNET" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Reflection injection" id="APSC_DV.002560.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against SQL injection" id="APSC_DV.002560.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against XML data injection" id="APSC_DV.002560.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against XPath injection" id="APSC_DV.002560.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Do not log confidential or sensitive information" id="APSC_DV.002570.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Do not cast primitive data types to lower precision" id="APSC_DV.002590.CLP" origId="PB.NUM.CLP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Avoid calculations which result in overflow or NaN" id="APSC_DV.002590.ICO" origId="PB.NUM.ICO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Use unsigned right shift instead of division when overflow is possible" id="APSC_DV.002590.IOF" origId="PB.NUM.IOF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="APSC_DV.003110.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Use '()' to separate complex expressions" id="APSC_DV.003215.APAREN" origId="FORMAT.APAREN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Ensure proper spacing in array references" id="APSC_DV.003215.ASPACE" origId="FORMAT.ASPACE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Do not place empty whitespace at the end of a line" id="APSC_DV.003215.ATS" origId="FORMAT.ATS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Put a blank line before each C-style comment" id="APSC_DV.003215.BLBC" origId="FORMAT.BLBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="12;" authUrg="2;" cat="APSC_DV.003215" desc="Enforce number of blank line(s) before type declarations" id="APSC_DV.003215.BLCD" origId="FORMAT.BLCD" sev="3" total="12"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of blank line(s) to separate &quot;imports&quot; from different packages" id="APSC_DV.003215.BLSIM" origId="FORMAT.BLSIM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place a closing brace on its own line" id="APSC_DV.003215.CBRACE" origId="FORMAT.CBRACE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place a single space character or no space character after type casting" id="APSC_DV.003215.CMS" origId="FORMAT.CMS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Do not leave spaces between qualified names and method invocations" id="APSC_DV.003215.DOT" origId="FORMAT.DOT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Use spaces instead of tabs (or tabs instead of spaces)" id="APSC_DV.003215.DUT" origId="FORMAT.DUT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce the position of '{' brace" id="APSC_DV.003215.FCB" origId="FORMAT.FCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place the type that has the same name as the file as the first type" id="APSC_DV.003215.FCN" origId="FORMAT.FCN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Declare arrays with '[]' brackets after the array type and before the variable name(s)" id="APSC_DV.003215.IAD" origId="FORMAT.IAD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="1;" cat="APSC_DV.003215" desc="Enforce number of space(s) for indentation" id="APSC_DV.003215.IND" origId="FORMAT.IND" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Limit the maximum length of a line" id="APSC_DV.003215.LL" origId="FORMAT.LL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="APSC_DV.003215" desc="Include a meaningful file header comment in every source file" id="APSC_DV.003215.MCH" origId="FORMAT.MCH" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce the order of annotations and modifiers" id="APSC_DV.003215.MO" origId="FORMAT.MO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place a single space character or no space character between a method name and the opening &quot;(&quot; parenthesis" id="APSC_DV.003215.MSP" origId="FORMAT.MSP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Do not place statements on the same line as the '{' opening brace" id="APSC_DV.003215.NSAB" origId="FORMAT.NSAB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Write one statement per line" id="APSC_DV.003215.OSPL" origId="FORMAT.OSPL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) after every comma" id="APSC_DV.003215.SAC" origId="FORMAT.SAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of an assignment operator" id="APSC_DV.003215.SAOP" origId="FORMAT.SAOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) after the opening parenthesis &quot;(&quot; of a conditional statement" id="APSC_DV.003215.SAP" origId="FORMAT.SAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) after every semicolon" id="APSC_DV.003215.SAS" origId="FORMAT.SAS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) between a prefixed unary operator and its operand" id="APSC_DV.003215.SAUOP" origId="FORMAT.SAUOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of a bitwise operator" id="APSC_DV.003215.SBOP" origId="FORMAT.SBOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) between a postfixed unary operator and its operand" id="APSC_DV.003215.SBUOP" origId="FORMAT.SBUOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) between a conditional statement and the opening &quot;(&quot; parenthesis" id="APSC_DV.003215.SC" origId="FORMAT.SC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) before and after the &quot;?&quot; conditional operator" id="APSC_DV.003215.SCOP" origId="FORMAT.SCOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of a logical operator" id="APSC_DV.003215.SLOP" origId="FORMAT.SLOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of a relational operator" id="APSC_DV.003215.SROP" origId="FORMAT.SROP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Avoid using trailing comments" id="APSC_DV.003215.TC" origId="FORMAT.TC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Avoid or enforce the use of trailing commas in array initializers" id="APSC_DV.003215.TCOMMA" origId="FORMAT.TCOMMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Use the preferred formatting for conditional expressions" id="APSC_DV.003215.TE" origId="FORMAT.TE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Make sure all files are terminated with a newline character" id="APSC_DV.003215.TNL" origId="FORMAT.TNL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="15;" authUrg="2;" cat="APSC_DV.003215" desc="Enforce number of blank line(s) between major sections" id="APSC_DV.003215.U2BL" origId="FORMAT.U2BL" sev="3" total="15"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Avoid unnecessary parentheses" id="APSC_DV.003215.UP" origId="FORMAT.UP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Check the return value of methods which read or skip input" id="APSC_DV.003235.CRRV" origId="PB.LOGIC.CRRV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.API" desc="Make sure implementation of Object.equals(Object) properly handles null values" id="BD.API.EQNULL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.API" desc="Make sure implementation of Object.equals(Object) is reflexive" id="BD.API.EQREFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.API" desc="Do not rely on the write() method to output integers outside the range 0 to 255" id="BD.API.ARGWRITE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.CO" desc="Do not modify collection while iterating over it" id="BD.CO.ITMOD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.EXCEPT" desc="Avoid NullPointerException" id="BD.EXCEPT.NP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.OPT" desc="Avoid inefficient removal of Collection elements" id="BD.OPT.INEFCOL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.OPT" desc="Avoid inefficient iteration over Map entries" id="BD.OPT.INEFMAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.OPT" desc="Avoid inefficient removal of Map entries" id="BD.OPT.INEFMAPRM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid use before explicit initialization" id="BD.PB.NOTEXPLINIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid use of fields before initialization in constructors and static initializers" id="BD.PB.NOTINITCTOR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Do not append null value to strings" id="BD.PB.STRNULL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid division by zero" id="BD.PB.ZERO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid accessing arrays out of bounds" id="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid incorrect shift operations" id="BD.PB.BADSHIFT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid conditions that always evaluate to the same value" id="BD.PB.CC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Consistently check the returned value of non-void methods" id="BD.PB.CHECKRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Always catch exceptions" id="BD.PB.EXCEPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Method getPermission() is supposed to be invoked when user-defined class loaders are applied" id="BD.PB.GETPERM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid infinite recursion" id="BD.PB.INFREC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Do not create multiple buffered wrappers on a single byte or character stream" id="BD.PB.MULBUF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Do not invoke overridable methods from the readObject() method" id="BD.PB.VREADOBJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Prevent external processes from blocking on input and output streams" id="BD.PB.PBIOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Ensure proper usage of StringBuilder/StringBuffer objects" id="BD.PB.SBONE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid switch with unreachable branches" id="BD.PB.SWITCH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;" authUrg="1;" cat="BD.PB" desc="Avoid unused values" id="BD.PB.VOVR" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Methods shall not call themselves, either directly or indirectly" id="BD.PB.RECFUN" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Restore prior object state on method failure" id="BD.PB.REVOBJ" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.RES" desc="Do not use resources that have been freed" id="BD.RES.FREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.RES" desc="Ensure resources are deallocated" id="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Avoid unvalidated input in array indexes" id="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Prevent exposure of sensitive data" id="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against Command injection" id="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Validate potentially tainted data before it is used in methods that generate code" id="BD.SECURITY.TDCODE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against Jakarta Digester injection" id="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against Environment injection" id="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against File contents injection" id="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against File names injection" id="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Exclude unsanitized user input from format strings" id="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against JXPath injection" id="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against LDAP injection" id="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against Library injection" id="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against HTTP response splitting" id="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against Reflection injection" id="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Do not store untrusted data in HTTP session" id="BD.SECURITY.TDSESSION" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against SQL injection" id="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against XML data injection" id="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against XPath injection" id="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against XSS vulnerabilities" id="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Path should be standardized before validation" id="BD.SECURITY.CANPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Encapsulate arguments of dangerous methods with a validation method" id="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Check floating-point inputs for exceptional values" id="BD.SECURITY.FPEXC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Avoid passing unvalidated binary data to log methods" id="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Avoid operating on tainted data in privileged blocks" id="BD.SECURITY.PRIVIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Remove temporary files before termination" id="BD.SECURITY.REMTMP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Avoid passing sensitive data to functions that write to log files" id="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Do not rely on the default automatic signature verification provided by URLClassLoader and java.util.jar" id="BD.SECURITY.SIGCLASS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against log forging" id="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against network resource injection" id="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against using unprotected credentials" id="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Validate all dangerous data" id="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Validate untrusted XML using schema or DTD before reading" id="BD.SECURITY.XMLVAL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Do not expose data wrapped by a buffer to untrusted code" id="BD.SECURITY.BUFEXP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Prevent security vulnerability (custom rule)" id="BD.SECURITY.CUSTOM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Safely serialize sensitive data" id="BD.SECURITY.SSSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Avoid double locking" id="BD.TRS.DLOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Do not abandon unreleased locks" id="BD.TRS.LOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Do not acquire locks in different order" id="BD.TRS.ORDER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Do not use blocking methods while holding a lock" id="BD.TRS.TSHL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Variable should be used in context of single critical section" id="BD.TRS.DIFCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Do not use an instance lock to protect shared static data" id="BD.TRS.INSTLOCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="BEAN" desc="Use appropriate signatures for listener method names in JavaBean classes" id="BEAN.BLNC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="BEAN" desc="Override 'Object.equals()' in JavaBean classes" id="BEAN.EQUALS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="BEAN" desc="Do not use JDBC code in JavaBean classes" id="BEAN.JDBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="BEAN" desc="Ensure that JavaBean classes implement 'java.io.Serializable'" id="BEAN.SERIALIZABLE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="8;" authUrg="0;" cat="BEAN" desc="Define get and set methods for each instance field" id="BEAN.NFM" sev="4" total="8"/>
            <Rule analyzer="com.parasoft.jtest.standards.dupcode" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid method duplication" id="CDD.DUPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.dupcode" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid class duplication" id="CDD.DUPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.dupcode" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid code duplication" id="CDD.DUPC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid duplicate import statements" id="CDD.DUPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.dupcode" authTot="1;" authUrg="1;" cat="CDD" desc="Avoid string literal duplication" id="CDD.DUPS" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid duplicated field initialization in constructors" id="CDD.DFI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.DCL00" desc="Ensure that files do not contain cyclical dependencies" id="CERT.DCL00.ACD" origId="GLOBAL.ACD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.DCL02" desc="Do not modify collection while iterating over it" id="CERT.DCL02.ITMOD" origId="BD.CO.ITMOD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ENV02" desc="Do not use the non-portable 'System.getenv()' method" id="CERT.ENV02.ENV" origId="PORT.ENV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR00" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="CERT.ERR00.LGE" origId="SECURITY.UEHL.LGE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR00" desc="Use a caught exception in the &quot;catch&quot; block" id="CERT.ERR00.UCATCH" origId="UC.UCATCH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR01" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="CERT.ERR01.ACPST" origId="SECURITY.WSC.ACPST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR01" desc="Avoid writing to Consoles" id="CERT.ERR01.ACW" origId="SECURITY.ESD.ACW" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR01" desc="Catch all exceptions which may be thrown within Servlet methods" id="CERT.ERR01.CETS" origId="SERVLET.CETS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.ERR03" desc="Restore prior object state on method failure" id="CERT.ERR03.REVOBJ" origId="BD.PB.REVOBJ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR04" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="CERT.ERR04.ARCF" origId="PB.CUB.ARCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR04" desc="Do not exit &quot;finally&quot; blocks abruptly" id="CERT.ERR04.ATSF" origId="PB.CUB.ATSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR05" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="CERT.ERR05.ARCF" origId="PB.CUB.ARCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR05" desc="Do not exit &quot;finally&quot; blocks abruptly" id="CERT.ERR05.ATSF" origId="PB.CUB.ATSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR07" desc="Do not throw exception types which are too general or are unchecked exceptions" id="CERT.ERR07.NTERR" origId="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR07" desc="Avoid declaring methods to throw general or unchecked Exception types" id="CERT.ERR07.NTX" origId="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR08" desc="Do not catch 'NullPointerException'" id="CERT.ERR08.NCNPE" origId="EXCEPT.NCNPE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR09" desc="Do not call methods which terminates Java Virtual Machine" id="CERT.ERR09.EXIT" origId="CODSTA.BP.EXIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.ERR09" desc="Do not stop the JVM in a web component" id="CERT.ERR09.JVM" origId="SECURITY.EAB.JVM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP00" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="CERT.EXP00.AECB" origId="PB.TYPO.AECB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP00" desc="Ensure method and constructor return values are used" id="CERT.EXP00.NASSIG" origId="PB.USC.NASSIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP01" desc="Ensure that dereferenced variables match variables which were previously checked for &quot;null&quot;" id="CERT.EXP01.NCMD" origId="PB.RE.NCMD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.EXP01" desc="Avoid NullPointerException" id="CERT.EXP01.NP" origId="BD.EXCEPT.NP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP02" desc="Do not use '==' or '!=' to compare objects" id="CERT.EXP02.UEIC" origId="PB.CUB.UEIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP03" desc="Do not use '==' or '!=' to compare objects" id="CERT.EXP03.UEIC" origId="PB.CUB.UEIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.EXP05" desc="Avoid using increment or decrement operators in nested expressions" id="CERT.EXP05.CID" origId="CODSTA.READ.CID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO03" desc="Avoid temporary files" id="CERT.FIO03.ATF" origId="SECURITY.IBA.ATF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO03" desc="Remove temporary files before termination" id="CERT.FIO03.REMTMP" origId="BD.SECURITY.REMTMP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO04" desc="Close all &quot;java.io.Closeable&quot; resources in a &quot;finally&quot; block" id="CERT.FIO04.CCR" origId="OPT.CCR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO04" desc="Close input and output resources in &quot;finally&quot; blocks" id="CERT.FIO04.CIO" origId="OPT.CIO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO04" desc="Ensure resources are deallocated" id="CERT.FIO04.LEAKS" origId="BD.RES.LEAKS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO05" desc="Do not expose data wrapped by a buffer to untrusted code" id="CERT.FIO05.BUFEXP" origId="BD.SECURITY.BUFEXP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO06" desc="Do not create multiple buffered wrappers on a single byte or character stream" id="CERT.FIO06.MULBUF" origId="BD.PB.MULBUF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO07" desc="Do not use &quot;Runtime.exec()&quot;" id="CERT.FIO07.EXEC" origId="PORT.EXEC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO08" desc="Check the return value of methods which read or skip input" id="CERT.FIO08.CRRV" origId="PB.LOGIC.CRRV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO09" desc="Do not rely on the write() method to output integers outside the range 0 to 255" id="CERT.FIO09.ARGWRITE" origId="BD.API.ARGWRITE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO12" desc="Provide methods to read and write little-endian data" id="CERT.FIO12.PMRWLED" origId="PB.NUM.PMRWLED" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO13" desc="Do not log confidential or sensitive information" id="CERT.FIO13.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CERT.FIO13" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="CERT.FIO13.LHII" origId="HIBERNATE.LHII" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO13" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="CERT.FIO13.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.FIO13" desc="Prevent exposure of sensitive data" id="CERT.FIO13.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO14" desc="Close all &quot;java.io.Closeable&quot; resources in a &quot;finally&quot; block" id="CERT.FIO14.CCR" origId="OPT.CCR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO14" desc="Close input and output resources in &quot;finally&quot; blocks" id="CERT.FIO14.CIO" origId="OPT.CIO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO14" desc="Close resources as early as possible" id="CERT.FIO14.CRWD" origId="OPT.CRWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.FIO16" desc="Canonicalize data before validation" id="CERT.FIO16.CDBV" origId="SECURITY.IBA.CDBV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.IDS00" desc="Protect against SQL injection" id="CERT.IDS00.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.IDS03" desc="Protect against log forging" id="CERT.IDS03.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.IDS06" desc="Ensure the correct number of arguments for varargs methods with format strings" id="CERT.IDS06.VAFS" origId="PB.API.VAFS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.IDS07" desc="Do not use &quot;Runtime.exec()&quot;" id="CERT.IDS07.EXEC" origId="PORT.EXEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.IDS11" desc="Validate all dangerous data" id="CERT.IDS11.VPPD" origId="BD.SECURITY.VPPD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.IDS16" desc="Protect against XML data injection" id="CERT.IDS16.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.JNI00" desc="Use wrapper methods to secure native methods" id="CERT.JNI00.NATIW" origId="SECURITY.IBA.NATIW" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.JNI01" desc="Protect against Library injection" id="CERT.JNI01.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK00" desc="Do not synchronize on &quot;public&quot; fields since doing so may cause deadlocks" id="CERT.LCK00.SOPF" origId="TRS.SOPF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK01" desc="Do not synchronize on constant Strings" id="CERT.LCK01.SCS" origId="TRS.SCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK02" desc="Do not synchronize on the class object returned by the 'getClass' method" id="CERT.LCK02.SGC" origId="TRS.SGC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK04" desc="Do not synchronize on a collection view if the backing collection is accessible" id="CERT.LCK04.SOBC" origId="TRS.SOBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK05" desc="Inspect accesses to &quot;static&quot; fields which may require synchronization" id="CERT.LCK05.IASF" origId="TRS.IASF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.LCK06" desc="Do not use an instance lock to protect shared static data" id="CERT.LCK06.INSTLOCK" origId="BD.TRS.INSTLOCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK07" desc="Ensure that nested locks are ordered correctly" id="CERT.LCK07.LORD" origId="TRS.LORD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.LCK08" desc="Do not abandon unreleased locks" id="CERT.LCK08.LOCK" origId="BD.TRS.LOCK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK08" desc="Release Locks in a &quot;finally&quot; block" id="CERT.LCK08.RLF" origId="TRS.RLF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.LCK09" desc="Do not use blocking methods while holding a lock" id="CERT.LCK09.TSHL" origId="BD.TRS.TSHL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK09" desc="Do not call 'Thread.sleep()' while holding a lock since doing so can cause poor performance and deadlocks" id="CERT.LCK09.TSHL2" origId="TRS.TSHL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.LCK10" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="CERT.LCK10.DCL" origId="TRS.DCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET02" desc="Do not use deprecated APIs" id="CERT.MET02.DPRAPI" origId="PB.API.DPRAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET02" desc="Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'" id="CERT.MET02.THRD" origId="TRS.THRD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET04" desc="Do not override an instance &quot;private&quot; method" id="CERT.MET04.OPM" origId="OOP.OPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET06" desc="Make your 'clone()' method &quot;final&quot; for security" id="CERT.MET06.CLONE" origId="SECURITY.WSC.CLONE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET07" desc="Do not hide inherited &quot;static&quot; member methods" id="CERT.MET07.AHSM" origId="OOP.AHSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.MET08" desc="Make sure implementation of Object.equals(Object) is reflexive" id="CERT.MET08.EQREFL" origId="BD.API.EQREFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET09" desc="Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa" id="CERT.MET09.OVERRIDE" origId="CODSTA.OIM.OVERRIDE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET11" desc="Ensure that keys used in comparison operations are immutable" id="CERT.MET11.IKICO" origId="PB.IKICO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Avoid empty &quot;finalize()&quot; methods" id="CERT.MET12.EF" origId="UC.EF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Call 'super.finalize()' from 'finalize()'" id="CERT.MET12.FCF" origId="GC.FCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Avoid redundant 'finalize()' methods which only call the superclass' 'finalize()' method" id="CERT.MET12.FCSF" origId="UC.FCSF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Do not use 'finalize()' methods to unregister listeners" id="CERT.MET12.FM" origId="GC.FM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Call 'super.finalize()' in the &quot;finally&quot; block of 'finalize()' methods" id="CERT.MET12.IFF" origId="GC.IFF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Give &quot;finalize()&quot; methods &quot;protected&quot; access" id="CERT.MET12.MFP" origId="OOP.MFP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Do not define 'finalize()' method in bean classes" id="CERT.MET12.MNDF" origId="EJB.MNDF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Do not call 'finalize()' explicitly" id="CERT.MET12.NCF" origId="GC.NCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MET12" desc="Do not overload the 'finalize()' method" id="CERT.MET12.OF" origId="PB.API.OF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC00" desc="Use the SSL-enabled version of classes when possible" id="CERT.MSC00.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC01" desc="Avoid control statements with empty bodies" id="CERT.MSC01.EB" origId="PB.TYPO.EB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC02" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="CERT.MSC02.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC03" desc="Avoid hard-coding the arguments to certain methods" id="CERT.MSC03.AHCA" origId="SECURITY.WSC.AHCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC03" desc="Avoid using hard-coded cryptographic keys" id="CERT.MSC03.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC03" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="CERT.MSC03.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.MSC04" desc="Ensure resources are deallocated" id="CERT.MSC04.LEAKS" origId="BD.RES.LEAKS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.MSC06" desc="Do not modify collection while iterating over it" id="CERT.MSC06.ITMOD" origId="BD.CO.ITMOD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.MSC07" desc="Make lazy initializations thread-safe" id="CERT.MSC07.ILI" origId="TRS.ILI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM00" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CERT.NUM00.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM00" desc="Avoid using compound assignment operators in cases which may cause overflow" id="CERT.NUM00.CACO" origId="PB.NUM.CACO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM00" desc="Avoid calculations which result in overflow or NaN" id="CERT.NUM00.ICO" origId="PB.NUM.ICO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.NUM01" desc="Avoid incorrect shift operations" id="CERT.NUM01.BADSHIFT" origId="BD.PB.BADSHIFT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM01" desc="Do not perform bitwise and arithmetic operations on the same data" id="CERT.NUM01.NCBAV" origId="CODSTA.EPC.NCBAV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.NUM02" desc="Avoid division by zero" id="CERT.NUM02.ZERO" origId="BD.PB.ZERO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM04" desc="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" id="CERT.NUM04.UBD" origId="PB.NUM.UBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM07" desc="Avoid comparisons to Double.NaN or Float.NaN" id="CERT.NUM07.NAN" origId="PB.NUM.NAN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.NUM08" desc="Check floating-point inputs for exceptional values" id="CERT.NUM08.FPEXC" origId="BD.SECURITY.FPEXC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM09" desc="Do not use floating point variables as loop indices" id="CERT.NUM09.FPLI" origId="PB.NUM.FPLI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM10" desc="Do not pass floating point values to the 'BigDecimal' constructor" id="CERT.NUM10.BBDCC" origId="PB.NUM.BBDCC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM12" desc="Do not cast primitive data types to lower precision" id="CERT.NUM12.CLP" origId="PB.NUM.CLP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.NUM13" desc="Avoid implicit casts from integer data types to floating point data types" id="CERT.NUM13.AIC" origId="PB.NUM.AIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ03" desc="Avoid conversions from parameterized types to raw types" id="CERT.OBJ03.AGBPT" origId="CODSTA.EPC.AGBPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ04" desc="Make your 'clone()' method &quot;final&quot; for security" id="CERT.OBJ04.CLONE" origId="SECURITY.WSC.CLONE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ04" desc="Enforce returning a defensive copy in 'clone()' methods" id="CERT.OBJ04.CPCL" origId="SECURITY.EAB.CPCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ04" desc="Do not pass user-given mutable objects directly to certain types" id="CERT.OBJ04.MPT" origId="SECURITY.EAB.MPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="2;" cat="CERT.OBJ04" desc="Provide mutable classes with copy functionality" id="CERT.OBJ04.MUCOP" origId="OOP.MUCOP" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ04" desc="Do not store user-given mutable objects directly into variables" id="CERT.OBJ04.SMO" origId="SECURITY.EAB.SMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ05" desc="Enforce returning a defensive copy in 'clone()' methods" id="CERT.OBJ05.CPCL" origId="SECURITY.EAB.CPCL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ05" desc="Do not pass user-given mutable objects directly to certain types" id="CERT.OBJ05.MPT" origId="SECURITY.EAB.MPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="2;" cat="CERT.OBJ05" desc="Provide mutable classes with copy functionality" id="CERT.OBJ05.MUCOP" origId="OOP.MUCOP" sev="1" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ05" desc="Do not store user-given mutable objects directly into variables" id="CERT.OBJ05.SMO" origId="SECURITY.EAB.SMO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ06" desc="Enforce returning a defensive copy in 'clone()' methods" id="CERT.OBJ06.CPCL" origId="SECURITY.EAB.CPCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ06" desc="Do not pass user-given mutable objects directly to certain types" id="CERT.OBJ06.MPT" origId="SECURITY.EAB.MPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="3;" cat="CERT.OBJ06" desc="Provide mutable classes with copy functionality" id="CERT.OBJ06.MUCOP" origId="OOP.MUCOP" sev="2" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ06" desc="Do not store user-given mutable objects directly into variables" id="CERT.OBJ06.SMO" origId="SECURITY.EAB.SMO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;" authUrg="3;" cat="CERT.OBJ07" desc="Make your classes noncloneable" id="CERT.OBJ07.MCNC" origId="SECURITY.WSC.MCNC" sev="2" total="10"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ08" desc="Make all member classes &quot;private&quot;" id="CERT.OBJ08.INNER" origId="SECURITY.WSC.INNER" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ09" desc="Do not compare Class objects by name" id="CERT.OBJ09.CMP" origId="SECURITY.EAB.CMP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ10" desc="Avoid referencing mutable fields" id="CERT.OBJ10.RMO" origId="PB.CUB.RMO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ10" desc="Inspect 'static' fields which may have intended to be declared 'static final'" id="CERT.OBJ10.SPFF" origId="SECURITY.EAB.SPFF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.OBJ11" desc="Do not throw exceptions from constructors of &quot;public&quot; non-&quot;final&quot; classes" id="CERT.OBJ11.EPNFC" origId="EXCEPT.EPNFC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.SEC01" desc="Avoid operating on tainted data in privileged blocks" id="CERT.SEC01.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.SEC02" desc="Protect against Reflection injection" id="CERT.SEC02.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SEC03" desc="Do not access the class loader in a web component" id="CERT.SEC03.ACL" origId="SECURITY.BV.ACL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SEC04" desc="Enforce 'SecurityManager' checks before setting or getting fields" id="CERT.SEC04.SCF" origId="SECURITY.WSC.SCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SEC05" desc="Avoid using reflection methods" id="CERT.SEC05.ARM" origId="CODSTA.BP.ARM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER00" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="CERT.SER00.DUID" origId="SERIAL.DUID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER01" desc="Ensure that the 'readObject()' and 'writeObject()' methods have the correct signature" id="CERT.SER01.ROWO" origId="SERIAL.ROWO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER03" desc="Inspect instance fields of serializable objects to make sure they will not expose sensitive information" id="CERT.SER03.SIF" origId="SECURITY.ESD.SIF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER04" desc="Enforce 'SecurityManager' checks in methods of 'Serializable' classes" id="CERT.SER04.SCSER" origId="SECURITY.WSC.SCSER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER07" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="CERT.SER07.RRSC" origId="SERIAL.RRSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CERT.SER09" desc="Do not invoke overridable methods from the readObject() method" id="CERT.SER09.VREADOBJ" origId="BD.PB.VREADOBJ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.SER11" desc="Avoid re-initializing fields in the 'readExternal()' method of 'Externalizable' classes" id="CERT.SER11.IRX" origId="SERIAL.IRX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="4;" authUrg="0;" cat="CERT.STR00" desc="Do not use String concatenation in an Internationalized environment" id="CERT.STR00.COS" origId="INTER.COS" sev="3" total="4"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.STR01" desc="Do not assume that a Java char fully represents a Unicode code point" id="CERT.STR01.NCUCP" origId="PB.CUB.NCUCP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.STR02" desc="Use the optional java.util.Locale parameter" id="CERT.STR02.CCL" origId="INTER.CCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.STR02" desc="Do not call 'Character.toLowerCase(char)' or 'Character.toUpperCase(char)' in an internationalized environment" id="CERT.STR02.CTLC" origId="INTER.CTLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.THI00" desc="Do not call the 'run()' method directly on classes extending 'java.lang.Thread' or implementing 'java.lang.Runnable'" id="CERT.THI00.IRUN" origId="TRS.IRUN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.THI01" desc="Do not use variables of the unsafe type 'java.lang.ThreadGroup'" id="CERT.THI01.AUTG" origId="TRS.AUTG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.THI02" desc="Do not use 'notify()'; use 'notifyAll()' instead so that all waiting threads will be notified" id="CERT.THI02.ANF" origId="TRS.ANF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.THI03" desc="Call 'wait()' and 'await()' only inside a loop that tests the liveness condition" id="CERT.THI03.UWIL" origId="TRS.UWIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.THI05" desc="Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'" id="CERT.THI05.THRD" origId="TRS.THRD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.TPS00" desc="Do not call the 'start()' method directly on Thread class instances" id="CERT.TPS00.ISTART" origId="TRS.ISTART" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.TSM00" desc="Avoid overriding synchronized methods with non-synchronized methods" id="CERT.TSM00.OSNS" origId="TRS.OSNS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.TSM01" desc="Do not let &quot;this&quot; reference escape during construction" id="CERT.TSM01.CTRE" origId="TRS.CTRE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.TSM02" desc="Do not call the &quot;start&quot; method of threads from inside a constructor" id="CERT.TSM02.CSTART" origId="TRS.CSTART" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA00" desc="Ensure that nested locks are ordered correctly" id="CERT.VNA00.LORD" origId="TRS.LORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA00" desc="Access related Atomic variables in a synchronized block" id="CERT.VNA00.MRAV" origId="TRS.MRAV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA02" desc="Access related Atomic variables in a synchronized block" id="CERT.VNA02.MRAV" origId="TRS.MRAV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA02" desc="Make the get method for a field synchronized if the set method is synchronized" id="CERT.VNA02.SSUG" origId="TRS.SSUG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA03" desc="Access related Atomic variables in a synchronized block" id="CERT.VNA03.MRAV" origId="TRS.MRAV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CERT.VNA03" desc="Make the get method for a field synchronized if the set method is synchronized" id="CERT.VNA03.SSUG" origId="TRS.SSUG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid returning &quot;null&quot; for arrays and certain types" id="CODSTA.BP.ARN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid passing non-reifiable types to varargs methods" id="CODSTA.BP.NRVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid label statements" id="CODSTA.BP.AULS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using multiple loggers, use logging levels instead" id="CODSTA.BP.AUML" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Provide a '{}' block for conditional statements" id="CODSTA.BP.BLK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid unnecessary nested blocks" id="CODSTA.BP.BLOCK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Declare fields with uppercase character names as &quot;final&quot;" id="CODSTA.BP.CFNF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="CODSTA.BP" desc="Avoid 'public' or 'protected' constructors for immutable classes" id="CODSTA.BP.CMUTA" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Place constants on the appropriate side of comparisons" id="CODSTA.BP.CS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Declare loggers as &quot;static final&quot; fields" id="CODSTA.BP.DLSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Do not call methods which terminates Java Virtual Machine" id="CODSTA.BP.EXIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="8;" authUrg="0;" cat="CODSTA.BP" desc="Declare all formal parameters as &quot;final&quot;" id="CODSTA.BP.FPF" sev="3" total="8"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using 'Hashtable' and 'Vector'" id="CODSTA.BP.HTV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid or enforce usage of '*' form of import statements" id="CODSTA.BP.IMPTD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid declaring methods to throw general or unchecked Exception types" id="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Ensure that a class which has only &quot;private&quot; constructors is declared as &quot;final&quot;" id="CODSTA.BP.PCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid &quot;break&quot; and/or &quot;continue&quot; with labels" id="CODSTA.BP.ABCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid declaring methods that return 'Object'" id="CODSTA.BP.AMRO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using reflection methods" id="CODSTA.BP.ARM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using wildcards in method return types" id="CODSTA.BP.AWRT" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Reference interface constants with their declaring interface names" id="CODSTA.BP.FQNIC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Do not use &quot;break&quot; and/or &quot;continue&quot; statements" id="CODSTA.BP.CONTINUE" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Ensure overloaded constructors and methods share the same accessibility" id="CODSTA.BP.OCMA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Do not define &quot;public&quot; or &quot;protected&quot; members in anonymous classes" id="CODSTA.BP.PPAC" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Call 'super.clone()' in all 'clone()' methods" id="CODSTA.EPC.SCLONE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not use constructors in the 'clone()' method" id="CODSTA.EPC.CLNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not call methods that might cause unexpected NullPointerExceptions during constructor execution" id="CODSTA.EPC.NCNFC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Avoid conversions from parameterized types to raw types" id="CODSTA.EPC.AGBPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Avoid using the conditional operator with mismatched numeric types" id="CODSTA.EPC.COMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not perform bitwise and arithmetic operations on the same data" id="CODSTA.EPC.NCBAV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not catch exception types which are too general or are unchecked exceptions" id="CODSTA.EPC.NCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Avoid using the same generic type variable for multiple method arguments" id="CODSTA.EPC.STA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Use 'StringTokenizer' instead of 'indexOf()' and 'substring()' for String parsing" id="CODSTA.EPC.UST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not call an &quot;abstract&quot; method from a constructor in an &quot;abstract&quot; class" id="CODSTA.EPC.NCAC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Use overloading judiciously" id="CODSTA.EPC.OVERLOAD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not make assignments to method parameters" id="CODSTA.EPC.AFP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Use &quot;int&quot; instead of &quot;byte&quot; or &quot;short&quot; and &quot;double&quot; instead of &quot;float&quot; for variable declarations" id="CODSTA.EPC.IBS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not use too many non-&quot;final&quot; &quot;static&quot; fields" id="CODSTA.EPC.MSF" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not write to static fields from non-static methods" id="CODSTA.EPC.WSIM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa" id="CODSTA.OIM.OVERRIDE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Do not override non &quot;abstract&quot; methods of a parent class with &quot;abstract&quot; methods" id="CODSTA.OIM.AMMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Declare 'clone() throws CloneNotSupportedException' for Cloneable class" id="CODSTA.OIM.CLONE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Use the 'clone()' method only to implement 'Cloneable' interface" id="CODSTA.OIM.CLONE2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Ensure 'clone()' method of non-final Cloneable class declared to throw 'CloneNotSupportedException'" id="CODSTA.OIM.CLONET" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Define a &quot;static&quot; 'valueOf()' method for &quot;enum&quot; types which override 'toString()'" id="CODSTA.OIM.DVOM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Do not override 'toString()' in enum types" id="CODSTA.OIM.OVOTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Override 'toString()'" id="CODSTA.OIM.OTOSM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Do not use assertions in production code" id="CODSTA.ORG.ASSERT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Do not make method calls to internal classes from non-internal classes" id="CODSTA.ORG.DINT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="CODSTA.ORG" desc="Order class elements appropriately" id="CODSTA.ORG.FO" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Avoid importing specific classes or packages" id="CODSTA.ORG.IMP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Organize methods by name" id="CODSTA.ORG.OGM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Order compilation unit elements appropriately" id="CODSTA.ORG.ORCU" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure all types have a non default package name" id="CODSTA.ORG.UNDPN" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Do not have more than one type in each file" id="CODSTA.ORG.AMOC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Define constants in an &quot;interface&quot;" id="CODSTA.ORG.DCI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure that comments do not contain task tags" id="CODSTA.ORG.TODOJAVA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure that comments do not contain task tags" id="CODSTA.ORG.TODOPROP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure that comments do not contain task tags" id="CODSTA.ORG.TODOXML" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Place 'finalize()' methods between &quot;public&quot; and &quot;protected&quot; methods" id="CODSTA.ORG.ORFIM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Present &quot;import&quot; statements in alphabetical order" id="CODSTA.ORG.ORIMP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Place the 'main()' method last" id="CODSTA.ORG.PML" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid constant interface anti-pattern" id="CODSTA.POD.ACIAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid &quot;static&quot; methods when the declaring class is a parameter type" id="CODSTA.POD.ASM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Use less specific types to accomplish loose coupling" id="CODSTA.POD.AUVT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CODSTA.POD" desc="Use chain constructors in classes with multiple constructors" id="CODSTA.POD.CHAIN" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid chains of &quot;instanceof&quot; comparisons" id="CODSTA.POD.CIOC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Do not access static members indirectly" id="CODSTA.POD.IASM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid &quot;switch&quot; statements with too many or too few &quot;case&quot; statements" id="CODSTA.POD.SMC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Use &quot;enum&quot; types instead of a series of &quot;static final&quot; constants" id="CODSTA.POD.UET" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="CODSTA.POD" desc="Enforce or avoid the use of parameterized types" id="CODSTA.POD.UPT" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Do not define constants in interfaces" id="CODSTA.POD.ISACF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="5;" authUrg="0;" cat="CODSTA.POD" desc="Define a no argument constructor whenever possible" id="CODSTA.POD.DCTOR" sev="5" total="5"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid literal constants" id="CODSTA.READ.USN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not use complicated conditional expressions in control structures" id="CODSTA.READ.ACCS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Access and set fields directly in the declaring type instead of using getter and setter methods" id="CODSTA.READ.AFD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid anonymous inner classes" id="CODSTA.READ.AIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="CODSTA.READ" desc="Avoid static import statements" id="CODSTA.READ.ASIS" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid unnecessary calls to 'toString()'" id="CODSTA.READ.AUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Comment the ends of control structures" id="CODSTA.READ.CCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Comment empty blocks" id="CODSTA.READ.CEB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using increment or decrement operators in nested expressions" id="CODSTA.READ.CID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Enforce or avoid usage of conditional operators" id="CODSTA.READ.CX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Explicitly call one of the superclass' constructors from all constructors" id="CODSTA.READ.ECSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CODSTA.READ" desc="Declare &quot;private&quot; constant fields &quot;final&quot;" id="CODSTA.READ.FF" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CODSTA.READ" desc="Declare constant local variables &quot;final&quot;" id="CODSTA.READ.FLV" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using Hexadecimal binary exponents" id="CODSTA.READ.HBE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid having a lower-case &quot;l&quot; or the number &quot;1&quot; at the end of a &quot;long&quot; integer constant" id="CODSTA.READ.LONG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not declare multiple variables in one statement" id="CODSTA.READ.MVOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid nested assignments or assignments embedded in other expressions" id="CODSTA.READ.NEA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid non-static initializers" id="CODSTA.READ.NSI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Declare &quot;for&quot; loops with an initializer, conditional, and updater statements" id="CODSTA.READ.PCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not declare &quot;public&quot; constructors in non-public classes" id="CODSTA.READ.PCTOR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Use 'isEmpty()' for Collections and Maps instead of comparing 'size()' to 0" id="CODSTA.READ.SIE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="4;" authUrg="0;" cat="CODSTA.READ" desc="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" id="CODSTA.READ.UATS" sev="3" total="4"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Use underscore characters (_) in numerical literal" id="CODSTA.READ.ULIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not declare multiple variables of different types in one statement" id="CODSTA.READ.VDT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Limit the number of initialization and update statements in &quot;for&quot; loops" id="CODSTA.READ.VIFS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not rely on automatic boxing and unboxing of primitive types" id="CODSTA.READ.ABUB" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not use fully qualified type names" id="CODSTA.READ.AFQN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using negative logic in if-else statement" id="CODSTA.READ.ANL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not use too many negation operators '!' in a single method" id="CODSTA.READ.DUN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Declare variables as close as possible to where they are used" id="CODSTA.READ.DVCU" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Minimize &quot;try&quot; block size" id="CODSTA.READ.MTBS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Declare never-modified collections as &quot;unmodifiable&quot; for clarity" id="CODSTA.READ.NMUC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Put declarations only at the beginning of blocks" id="CODSTA.READ.PDBB" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid create integer values from binary notation using Integer.parseInt() methods" id="CODSTA.READ.UBL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid or enforce usage of enhanced &quot;for&quot; loops" id="CODSTA.READ.AEFS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="CODSTA.READ" desc="Comment local variables" id="CODSTA.READ.CLV" sev="5" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Always call 'Collection.toArray()' with an empty constant array argument" id="CODSTA.READ.CTA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using &quot;do-while&quot; statements" id="CODSTA.READ.DOWHILE" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Enforce use of &quot;for&quot; or &quot;while&quot; loops" id="CODSTA.READ.PFL" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.1004" desc="Mark cookies as HttpOnly" id="CWE.1004.SCHTTP" origId="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.102" desc="Avoid duplicated forms in the 'validation.xml'" id="CWE.102.DFV" origId="STRUTS.DFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.103" desc="Always call 'super.validate()' from validation methods in 'ActionForm' classes" id="CWE.103.CSVFV" origId="SECURITY.IBA.CSVFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.104" desc="Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'" id="CWE.104.AEAF" origId="SECURITY.IBA.AEAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.106" desc="Ensure Plugins are added in the 'struts-config.xml'" id="CWE.106.PLUGIN" origId="STRUTS.PLUGIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.109" desc="Ensure validators are enabled in the 'struts-config.xml'" id="CWE.109.EV" origId="STRUTS.EV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.111" desc="Use wrapper methods to secure native methods" id="CWE.111.NATIW" origId="SECURITY.IBA.NATIW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.111" desc="Do not use user-defined &quot;native&quot; methods" id="CWE.111.NATV" origId="PORT.NATV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.113" desc="Protect against HTTP response splitting" id="CWE.113.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.114" desc="Protect against Library injection" id="CWE.114.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.114" desc="Inspect usage of standard API calls that bypass security" id="CWE.114.APIBS" origId="SECURITY.WSC.APIBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.117" desc="Protect against log forging" id="CWE.117.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.119" desc="Avoid unvalidated input in array indexes" id="CWE.119.ARRAYSEC" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.119" desc="Do not use resources that have been freed" id="CWE.119.FREE" origId="BD.RES.FREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.119" desc="Avoid accessing arrays out of bounds" id="CWE.119.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.119" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CWE.119.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.119" desc="Prevent external processes from blocking on output or error streams" id="CWE.119.BUSSB" origId="SECURITY.WSC.BUSSB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.125" desc="Avoid unvalidated input in array indexes" id="CWE.125.ARRAYSEC" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.125" desc="Avoid accessing arrays out of bounds" id="CWE.125.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.129" desc="Avoid unvalidated input in array indexes" id="CWE.129.ARRAYSEC" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.129" desc="Avoid accessing arrays out of bounds" id="CWE.129.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.129" desc="Always check parameters before use in array access" id="CWE.129.CAI" origId="PB.RE.CAI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.131" desc="Avoid accessing arrays out of bounds" id="CWE.131.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.134" desc="Exclude unsanitized user input from format strings" id="CWE.134.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.15" desc="Do not access or set System properties" id="CWE.15.SYSP" origId="SECURITY.BV.SYSP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.15" desc="Use a Context Object to manage HTTP request parameters" id="CWE.15.UCO" origId="SERVLET.UCO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.185" desc="Avoid using &quot;.&quot; as a regular expression in 'String.replaceAll()' and 'String.replaceFirst()'" id="CWE.185.REP" origId="PB.API.REP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.190" desc="Avoid calculations which result in overflow or NaN" id="CWE.190.ICO" origId="PB.NUM.ICO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.190" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CWE.190.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.190" desc="Do not cast primitive data types to lower precision" id="CWE.190.CLP" origId="PB.NUM.CLP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.190" desc="Avoid using compound assignment operators in cases which may cause overflow" id="CWE.190.CACO" origId="PB.NUM.CACO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.190" desc="Use unsigned right shift instead of division when overflow is possible" id="CWE.190.IOF" origId="PB.NUM.IOF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.191" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CWE.191.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.193" desc="Avoid off-by-one errors in loop conditions" id="CWE.193.AOBO" origId="PB.LOGIC.AOBO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.198" desc="Provide methods to read and write little-endian data" id="CWE.198.PMRWLED" origId="PB.NUM.PMRWLED" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'" id="CWE.20.AEAF" origId="SECURITY.IBA.AEAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid unvalidated input in array indexes" id="CWE.20.ARRAYSEC" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Always call 'super.validate()' from validation methods in 'ActionForm' classes" id="CWE.20.CSVFV" origId="SECURITY.IBA.CSVFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid duplicated forms in the 'validation.xml'" id="CWE.20.DFV" origId="STRUTS.DFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not use resources that have been freed" id="CWE.20.FREE" origId="BD.RES.FREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid calculations which result in overflow or NaN" id="CWE.20.ICO" origId="PB.NUM.ICO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.20" desc="Ensure Plugins are added in the 'struts-config.xml'" id="CWE.20.PLUGIN" origId="STRUTS.PLUGIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Exclude unsanitized user input from format strings" id="CWE.20.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Protect against Library injection" id="CWE.20.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Protect against HTTP response splitting" id="CWE.20.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Protect against Reflection injection" id="CWE.20.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid accessing arrays out of bounds" id="CWE.20.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CWE.20.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not cast primitive data types to lower precision" id="CWE.20.CLP" origId="PB.NUM.CLP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not access or set System properties" id="CWE.20.SYSP" origId="SECURITY.BV.SYSP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="CWE.20.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.20" desc="Protect against log forging" id="CWE.20.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Use a Context Object to manage HTTP request parameters" id="CWE.20.UCO" origId="SERVLET.UCO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Inspect usage of standard API calls that bypass security" id="CWE.20.APIBS" origId="SECURITY.WSC.APIBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Prevent external processes from blocking on output or error streams" id="CWE.20.BUSSB" origId="SECURITY.WSC.BUSSB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Avoid using compound assignment operators in cases which may cause overflow" id="CWE.20.CACO" origId="PB.NUM.CACO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Always check parameters before use in array access" id="CWE.20.CAI" origId="PB.RE.CAI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.20" desc="Ensure validators are enabled in the 'struts-config.xml'" id="CWE.20.EV" origId="STRUTS.EV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Use unsigned right shift instead of division when overflow is possible" id="CWE.20.IOF" origId="PB.NUM.IOF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Use wrapper methods to secure native methods" id="CWE.20.NATIW" origId="SECURITY.IBA.NATIW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.20" desc="Do not use user-defined &quot;native&quot; methods" id="CWE.20.NATV" origId="PORT.NATV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.200" desc="Do not log confidential or sensitive information" id="CWE.200.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.200" desc="Avoid debug information from Spring Security framework to logs" id="CWE.200.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.200" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="CWE.200.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.200" desc="Prevent exposure of sensitive data" id="CWE.200.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.200" desc="Avoid passing sensitive data to functions that write to log files" id="CWE.200.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.200" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="CWE.200.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="CWE.200" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="CWE.200.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.209" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="CWE.209.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.209" desc="Prevent exposure of sensitive data" id="CWE.209.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.209" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="CWE.209.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="CWE.209" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="CWE.209.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.212" desc="Avoid declaring &quot;transient&quot; fields in non-serializable classes" id="CWE.212.FT" origId="SERIAL.FT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.213" desc="Do not log confidential or sensitive information" id="CWE.213.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.215" desc="Avoid debug information from Spring Security framework to logs" id="CWE.215.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.22" desc="Protect against File names injection" id="CWE.22.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.245" desc="Avoid using native JDBC" id="CWE.245.JDBCTEMPLATE" origId="SPRING.JDBCTEMPLATE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.246" desc="Do not use sockets in EJBs" id="CWE.246.AUS" origId="EJB.AUS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.246" desc="Do not call 'Socket.setSocketImplFactory()' or 'URL.setURLStreamHandlerFactory()' in a web component" id="CWE.246.NSF" origId="SECURITY.BV.NSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.246" desc="Do not use sockets in web components" id="CWE.246.SS" origId="SECURITY.WSC.SS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.250" desc="Limit the number of &quot;AccessController.doPrivileged&quot; calls per class" id="CWE.250.LDP" origId="SECURITY.EAB.LDP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.250" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="CWE.250.PCL" origId="SECURITY.EAB.PCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.252" desc="Consistently check the returned value of non-void methods" id="CWE.252.CHECKRET" origId="BD.PB.CHECKRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.252" desc="Check the return value of methods which read or skip input" id="CWE.252.CRRV" origId="PB.LOGIC.CRRV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="CWE.256.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.256" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.256.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.256.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="CWE.256.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="CWE.256.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="CWE.256.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.256" desc="Password information should not be included in properties file in plaintext" id="CWE.256.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.256" desc="Protect against using unprotected credentials" id="CWE.256.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="CWE.256.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.256" desc="Avoid using plain text passwords in Axis2 configuration files" id="CWE.256.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.258" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.258.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.260" desc="Avoid using plain text passwords in Axis2 configuration files" id="CWE.260.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.261" desc="Avoid using cryptographic keys which are too short" id="CWE.261.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.269" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="CWE.269.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.269" desc="Limit the number of &quot;AccessController.doPrivileged&quot; calls per class" id="CWE.269.LDP" origId="SECURITY.EAB.LDP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.269" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="CWE.269.PCL" origId="SECURITY.EAB.PCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.279" desc="Avoid setting the write or execute file permissions to unintended users" id="CWE.279.IDP" origId="SECURITY.WSC.IDP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid DNS lookups for decision making" id="CWE.287.DNSL" origId="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid using hard-coded cryptographic keys" id="CWE.287.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="CWE.287.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="CWE.287.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="CWE.287.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.287" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.287.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.287.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Ensure that an appropriate security manager is set" id="CWE.287.SSM" origId="SECURITY.WSC.SSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="CWE.287.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="CWE.287.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="CWE.287.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid using cryptographic keys which are too short" id="CWE.287.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="CWE.287.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.287" desc="Password information should not be included in properties file in plaintext" id="CWE.287.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.287" desc="Protect against using unprotected credentials" id="CWE.287.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Properly validate server identity" id="CWE.287.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="CWE.287.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="CWE.287.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Use the SSL-enabled version of classes when possible" id="CWE.287.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.287" desc="Avoid using plain text passwords in Axis2 configuration files" id="CWE.287.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.287" desc="Ensure sufficient protection against multiple failed authentication attempts" id="CWE.287.PBFA" origId="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.290" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="CWE.290.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.295" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="CWE.295.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.295" desc="Properly validate server identity" id="CWE.295.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.297" desc="Properly validate server identity" id="CWE.297.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.306" desc="Ensure that an appropriate security manager is set" id="CWE.306.SSM" origId="SECURITY.WSC.SSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.307" desc="Ensure sufficient protection against multiple failed authentication attempts" id="CWE.307.PBFA" origId="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.311" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.311.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.311" desc="Prevent exposure of sensitive data" id="CWE.311.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.312" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.312.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.313" desc="Password information should not be included in properties file in plaintext" id="CWE.313.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.315" desc="Avoid storing sensitive data in plaintext in a cookie" id="CWE.315.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.319" desc="Use the SSL-enabled version of classes when possible" id="CWE.319.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.319" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="CWE.319.HTTPS" origId="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.321" desc="Avoid using hard-coded cryptographic keys" id="CWE.321.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.325" desc="MessageDigest objects must process the data with the 'update' method" id="CWE.325.MCMDU" origId="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.325" desc="Initialize KeyGenerator instances" id="CWE.325.SIKG" origId="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.327" desc="Avoid using custom MessageDigest implementations" id="CWE.327.ACMD" origId="SECURITY.WSC.ACMD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.328" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="CWE.328.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.328" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="CWE.328.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.328" desc="Avoid using insecure algorithms for cryptography" id="CWE.328.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.328" desc="Use hash functions with a salt" id="CWE.328.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.328" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="CWE.328.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.328" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="CWE.328.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.329" desc="Ensure arguments passed to certain methods come from predefined methods list" id="CWE.329.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.329" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="CWE.329.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.336" desc="Ensure arguments passed to certain methods come from predefined methods list" id="CWE.336.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.337" desc="Ensure arguments passed to certain methods come from predefined methods list" id="CWE.337.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.338" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="CWE.338.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.346" desc="Restrict cross-origin resource sharing to secure origins" id="CWE.346.JXCORS" origId="SECURITY.WSC.JXCORS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.347" desc="Always verify JarFile signatures" id="CWE.347.VJFS" origId="SECURITY.WSC.VJFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.350" desc="Avoid DNS lookups for decision making" id="CWE.350.DNSL" origId="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.352" desc="Protect against HTTP response splitting" id="CWE.352.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.352" desc="Protect against XSS vulnerabilities" id="CWE.352.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.352" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="CWE.352.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.352" desc="Do not disable CSRF protection" id="CWE.352.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.352" desc="Do not disable CSRF protection" id="CWE.352.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.352" desc="Encapsulate arguments of dangerous methods with a validation method" id="CWE.352.EACM" origId="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.352" desc="Ensure that methods annotated with @RequestMapping specify the HTTP request method they call" id="CWE.352.REQMAP" origId="SPRING.REQMAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.352" desc="Validate all dangerous data" id="CWE.352.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.359" desc="Do not log confidential or sensitive information" id="CWE.359.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.362" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="CWE.362.DCL" origId="TRS.DCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.362" desc="Avoid Time-of-check Time-of-use (TOCTOU) Race Condition" id="CWE.362.TOCTOU" origId="PB.CUB.TOCTOU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.367" desc="Avoid Time-of-check Time-of-use (TOCTOU) Race Condition" id="CWE.367.TOCTOU" origId="PB.CUB.TOCTOU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.369" desc="Avoid division by zero" id="CWE.369.ZERO" origId="BD.PB.ZERO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.375" desc="Avoid methods that might expose internal representations by returning arrays or other mutable fields" id="CWE.375.RA" origId="SECURITY.ESD.RA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.377" desc="Avoid temporary files" id="CWE.377.ATF" origId="SECURITY.IBA.ATF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.382" desc="Do not stop the JVM in a web component" id="CWE.382.JVM" origId="SECURITY.EAB.JVM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.382" desc="Do not call methods which terminates Java Virtual Machine" id="CWE.382.EXIT" origId="CODSTA.BP.EXIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.383" desc="Do not use threads in web components" id="CWE.383.THR" origId="SECURITY.DRC.THR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.384" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="CWE.384.ISL" origId="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.390" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="CWE.390.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.391" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="CWE.391.AECB" origId="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.395" desc="Do not catch 'NullPointerException'" id="CWE.395.NCNPE" origId="EXCEPT.NCNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.396" desc="Do not catch exception types which are too general or are unchecked exceptions" id="CWE.396.NCE" origId="CODSTA.EPC.NCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.397" desc="Do not throw exception types which are too general or are unchecked exceptions" id="CWE.397.NTERR" origId="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.397" desc="Avoid declaring methods to throw general or unchecked Exception types" id="CWE.397.NTX" origId="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.400" desc="Avoid using the DriverManagerDataSource class in production code" id="CWE.400.DMDS" origId="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.400" desc="Ensure resources are deallocated" id="CWE.400.LEAKS" origId="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.400" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="CWE.400.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.400" desc="Do not call the 'start()' method directly on Thread class instances" id="CWE.400.ISTART" origId="TRS.ISTART" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.404" desc="Close JDBC objects in the correct order" id="CWE.404.COCO" origId="JDBC.COCO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.404" desc="Close resources as early as possible" id="CWE.404.CRWD" origId="OPT.CRWD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.404" desc="Do not open or close JDBC connections in loops" id="CWE.404.ODBIL" origId="JDBC.ODBIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.413" desc="Ensure that nested locks are ordered correctly" id="CWE.413.LORD" origId="TRS.LORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.416" desc="Do not use resources that have been freed" id="CWE.416.FREE" origId="BD.RES.FREE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.426" desc="Always specify absolute paths to execute commands" id="CWE.426.PBRTE" origId="SECURITY.WSC.PBRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.427" desc="Always specify absolute paths to execute commands" id="CWE.427.PBRTE" origId="SECURITY.WSC.PBRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.434" desc="Protect against File names injection" id="CWE.434.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.456" desc="Initialize all local variables explicitly at the declaration statement" id="CWE.456.LV" origId="INIT.LV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.457" desc="Avoid use before explicit initialization" id="CWE.457.NOTEXPLINIT" origId="BD.PB.NOTEXPLINIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.457" desc="Avoid use of fields before initialization in constructors and static initializers" id="CWE.457.NOTINITCTOR" origId="BD.PB.NOTINITCTOR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.457" desc="Avoid NullPointerException" id="CWE.457.NP" origId="BD.EXCEPT.NP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.457" desc="Avoid uninitialized reads of fields before or during constructor execution" id="CWE.457.UIRC" origId="INIT.UIRC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.459" desc="Ensure resources are deallocated" id="CWE.459.LEAKS" origId="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.470" desc="Protect against Reflection injection" id="CWE.470.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.470" desc="Inspect usage of standard API calls that bypass security" id="CWE.470.APIBS" origId="SECURITY.WSC.APIBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.476" desc="Avoid NullPointerException" id="CWE.476.NP" origId="BD.EXCEPT.NP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.477" desc="Do not use deprecated APIs" id="CWE.477.DPRAPI" origId="PB.API.DPRAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.478" desc="Provide &quot;default:&quot; for each &quot;switch&quot; statement" id="CWE.478.PDS" origId="PB.PDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.481" desc="Avoid assignment within a condition" id="CWE.481.ASI" origId="PB.TYPO.ASI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.483" desc="Avoid erroneously placing statements outside blocks" id="CWE.483.EBI" origId="PB.CUB.EBI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.483" desc="Provide a '{}' block for conditional statements" id="CWE.483.BLK" origId="CODSTA.BP.BLK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.483" desc="Avoid control statements with empty bodies" id="CWE.483.EB" origId="PB.TYPO.EB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.484" desc="Avoid assigning same variable in the fall-through switch case" id="CWE.484.DAV" origId="PB.TYPO.DAV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.484" desc="Do not use a &quot;switch&quot; statement with a bad &quot;case&quot;" id="CWE.484.SBC" origId="PB.CUB.SBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.486" desc="Do not compare Class objects by name" id="CWE.486.CMP" origId="SECURITY.EAB.CMP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.486" desc="Inspect usage of 'getName()' from 'java.lang.Class' object" id="CWE.486.AUG" origId="SECURITY.BV.AUG" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.487" desc="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" id="CWE.487.AF" origId="OOP.AF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.491" desc="Make your 'clone()' method &quot;final&quot; for security" id="CWE.491.CLONE" origId="SECURITY.WSC.CLONE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.492" desc="Make all member classes &quot;private&quot;" id="CWE.492.INNER" origId="SECURITY.WSC.INNER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.495" desc="Avoid methods that might expose internal representations by returning arrays or other mutable fields" id="CWE.495.RA" origId="SECURITY.ESD.RA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.496" desc="Always clone array parameters which are stored to fields" id="CWE.496.CAP" origId="SECURITY.WSC.CAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.497" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="CWE.497.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.497" desc="Prevent exposure of sensitive data" id="CWE.497.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.499" desc="Inspect instance fields of serializable objects to make sure they will not expose sensitive information" id="CWE.499.SIF" origId="SECURITY.ESD.SIF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="0;" cat="CWE.499" desc="Make your classes nonserializeable" id="CWE.499.SER" origId="SECURITY.WSC.SER" sev="5" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.500" desc="Inspect 'static' fields which may have intended to be declared 'static final'" id="CWE.500.SPFF" origId="SECURITY.EAB.SPFF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.501" desc="Do not store untrusted data in HTTP session" id="CWE.501.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.502" desc="Avoid parsing untrusted data with XMLDecoder" id="CWE.502.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.502" desc="Disable LDAP deserialization" id="CWE.502.SC" origId="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.502" desc="Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes" id="CWE.502.MASP" origId="PB.API.MASP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.502" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="CWE.502.RWAF" origId="SERIAL.RWAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.502" desc="Safely serialize sensitive data" id="CWE.502.SSSD" origId="BD.SECURITY.SSSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.502" desc="Validate objects before deserialization" id="CWE.502.VOBD" origId="SERIAL.VOBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.506" desc="Avoid using hard-coded cryptographic keys" id="CWE.506.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.511" desc="Inspect 'Random' objects or 'Math.random()' methods that could indicate areas where malicious code has been placed" id="CWE.511.RDM" origId="SECURITY.WSC.RDM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.521" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="CWE.521.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="CWE.522.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.522" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.522.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.522.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="CWE.522.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="CWE.522.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="CWE.522.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.522" desc="Password information should not be included in properties file in plaintext" id="CWE.522.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.522" desc="Protect against using unprotected credentials" id="CWE.522.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="CWE.522.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.522" desc="Use the SSL-enabled version of classes when possible" id="CWE.522.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.522" desc="Avoid using plain text passwords in Axis2 configuration files" id="CWE.522.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.523" desc="Use the SSL-enabled version of classes when possible" id="CWE.523.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.532" desc="Do not log confidential or sensitive information" id="CWE.532.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.532" desc="Avoid passing sensitive data to functions that write to log files" id="CWE.532.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.543" desc="Inspect accesses to &quot;static&quot; fields which may require synchronization" id="CWE.543.IASF" origId="TRS.IASF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.543" desc="Make lazy initializations thread-safe" id="CWE.543.ILI" origId="TRS.ILI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.546" desc="Ensure that comments do not contain task tags" id="CWE.546.TODOJAVA" origId="CODSTA.ORG.TODOJAVA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.546" desc="Ensure that comments do not contain task tags" id="CWE.546.TODOPROP" origId="CODSTA.ORG.TODOPROP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.546" desc="Ensure that comments do not contain task tags" id="CWE.546.TODOXML" origId="CODSTA.ORG.TODOXML" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.555" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="CWE.555.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.561" desc="Avoid conditions that always evaluate to the same value" id="CWE.561.CC" origId="BD.PB.CC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.561" desc="Avoid unused &quot;private&quot; methods" id="CWE.561.PM" origId="UC.PM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.561" desc="Avoid switch with unreachable branches" id="CWE.561.SWITCH" origId="BD.PB.SWITCH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CWE.563" desc="Avoid local variables that are never read" id="CWE.563.AURV" origId="UC.AURV" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.563" desc="Avoid unused &quot;private&quot; fields" id="CWE.563.PF" origId="UC.PF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.563" desc="Avoid unused parameters" id="CWE.563.UP" origId="UC.UP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;" authUrg="1;" cat="CWE.563" desc="Avoid unused values" id="CWE.563.VOVR" origId="BD.PB.VOVR" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.563" desc="Avoid globally unused &quot;public/protected&quot; fields" id="CWE.563.UPPF" origId="GLOBAL.UPPF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.568" desc="Call 'super.finalize()' from 'finalize()'" id="CWE.568.FCF" origId="GC.FCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.570" desc="Avoid conditions that always evaluate to the same value" id="CWE.570.CC" origId="BD.PB.CC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.570" desc="Avoid unnecessary 'if' statements" id="CWE.570.UCIF" origId="UC.UCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.571" desc="Avoid conditions that always evaluate to the same value" id="CWE.571.CC" origId="BD.PB.CC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.571" desc="Avoid unnecessary 'if' statements" id="CWE.571.UCIF" origId="UC.UCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.572" desc="Do not call the 'run()' method directly on classes extending 'java.lang.Thread' or implementing 'java.lang.Runnable'" id="CWE.572.IRUN" origId="TRS.IRUN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.576" desc="Do not use types from the &quot;java.io&quot; package within bean classes" id="CWE.576.JIO" origId="EJB.JIO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.577" desc="Do not use sockets in EJBs" id="CWE.577.AUS" origId="EJB.AUS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.578" desc="Do not access, use, or create a class loader within a bean class" id="CWE.578.ACL" origId="EJB.ACL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.579" desc="Ensure method arguments are serializable" id="CWE.579.ONS" origId="PB.API.ONS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.579" desc="Do not store non-serializable objects as HttpSession attributes" id="CWE.579.SNSO" origId="SERIAL.SNSO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.580" desc="Call 'super.clone()' in all 'clone()' methods" id="CWE.580.SCLONE" origId="CODSTA.EPC.SCLONE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.581" desc="Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa" id="CWE.581.OVERRIDE" origId="CODSTA.OIM.OVERRIDE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.582" desc="Ensure &quot;static&quot; &quot;final&quot; fields are immutable" id="CWE.582.IMM" origId="PB.CUB.IMM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.582" desc="Avoid using &quot;public static final&quot; array fields" id="CWE.582.PSFA" origId="PB.CUB.PSFA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.583" desc="Give &quot;finalize()&quot; methods &quot;protected&quot; access" id="CWE.583.MFP" origId="OOP.MFP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.584" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="CWE.584.ARCF" origId="PB.CUB.ARCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.585" desc="Avoid empty &quot;synchronized&quot; statements" id="CWE.585.SNE" origId="UC.SNE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.586" desc="Do not call 'finalize()' explicitly" id="CWE.586.NCF" origId="GC.NCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.59" desc="Validate shortcut target paths before use" id="CWE.59.LNK" origId="SECURITY.WSC.LNK" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.59" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="CWE.59.FOLLOW" origId="SECURITY.WSC.FOLLOW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.594" desc="Ensure instance variables of @Stateful beans are Serializable" id="CWE.594.SIVS" origId="EJB.EJB3.SIVS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.595" desc="Do not use '==' or '!=' to compare objects" id="CWE.595.UEIC" origId="PB.CUB.UEIC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.6" desc="Ensure Session-ID Length is sufficient" id="CWE.6.SLID" origId="SECURITY.UEC.SLID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.600" desc="Catch all exceptions which may be thrown within Servlet methods" id="CWE.600.CETS" origId="SERVLET.CETS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.601" desc="Protect against HTTP response splitting" id="CWE.601.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.601" desc="Protect against network resource injection" id="CWE.601.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.601" desc="Use a Context Object to manage HTTP request parameters" id="CWE.601.UCO" origId="SERVLET.UCO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.601" desc="Encapsulate all redirect and forward URLs with a validation function" id="CWE.601.VRD" origId="SECURITY.IBA.VRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.605" desc="Do not hard-code IP addresses and port numbers" id="CWE.605.HCNA" origId="PORT.HCNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.607" desc="Ensure &quot;static&quot; &quot;final&quot; fields are immutable" id="CWE.607.IMM" origId="PB.CUB.IMM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.607" desc="Avoid referencing mutable fields" id="CWE.607.RMO" origId="PB.CUB.RMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.609" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="CWE.609.DCL" origId="TRS.DCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.61" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="CWE.61.FOLLOW" origId="SECURITY.WSC.FOLLOW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.611" desc="Disable XML external entity injection" id="CWE.611.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.611" desc="Validate untrusted XML using schema or DTD before reading" id="CWE.611.XMLVAL" origId="BD.SECURITY.XMLVAL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.613" desc="Ensure proper session expiration" id="CWE.613.RUIM" origId="SECURITY.IBA.RUIM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.613" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="CWE.613.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.614" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="CWE.614.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.617" desc="Do not use assertions in production code" id="CWE.617.ASSERT" origId="CODSTA.ORG.ASSERT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.64" desc="Validate shortcut target paths before use" id="CWE.64.LNK" origId="SECURITY.WSC.LNK" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.643" desc="Protect against JXPath injection" id="CWE.643.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.643" desc="Protect against XPath injection" id="CWE.643.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.644" desc="Protect against HTTP response splitting" id="CWE.644.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.652" desc="Protect against XPath injection" id="CWE.652.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.652" desc="Avoid XPath injection when evaluating XPath queries" id="CWE.652.XPIJ" origId="SECURITY.IBA.XPIJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.662" desc="Variable should be used in context of single critical section" id="CWE.662.DIFCS" origId="BD.TRS.DIFCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.667" desc="Unrestricted lock resource" id="CWE.667.CLOSE" origId="PB.CLOSE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.667" desc="Do not abandon unreleased locks" id="CWE.667.LOCK" origId="BD.TRS.LOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.674" desc="Avoid infinite recursive method calls" id="CWE.674.FLRC" origId="PB.LOGIC.FLRC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.676" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="CWE.676.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.680" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="CWE.680.BSA" origId="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.681" desc="Do not assign the result of an integer division to a floating point variable" id="CWE.681.IDCD" origId="PB.NUM.IDCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.681" desc="Do not cast primitive data types to lower precision" id="CWE.681.CLP" origId="PB.NUM.CLP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.691" desc="Avoid using negative logic in if-else statement" id="CWE.691.ANL" origId="CODSTA.READ.ANL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.7" desc="Always specify error pages in web.xml" id="CWE.7.SEP" origId="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.704" desc="Avoid conversions from parameterized types to raw types" id="CWE.704.AGBPT" origId="CODSTA.EPC.AGBPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="CWE.704" desc="Do not convert a value to a String by concatenating the empty String" id="CWE.704.CPTS" origId="OPT.CPTS" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.732" desc="Mark cookies as HttpOnly" id="CWE.732.SCHTTP" origId="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.732" desc="Avoid setting the write or execute file permissions to unintended users" id="CWE.732.IDP" origId="SECURITY.WSC.IDP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.749" desc="Declare package-private methods as inaccessible as possible" id="CWE.749.DPAM" origId="GLOBAL.DPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.749" desc="Declare a package-private method &quot;final&quot; if it is not overridden" id="CWE.749.SPAM" origId="GLOBAL.SPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="CWE.749" desc="Declare &quot;public/protected&quot; methods as inaccessible as possible" id="CWE.749.DPPM" origId="GLOBAL.DPPM" sev="4" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.755" desc="Do not catch InterruptedException except in classes extending Thread" id="CWE.755.CIET" origId="TRS.CIET" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.759" desc="Use hash functions with a salt" id="CWE.759.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.764" desc="Avoid double locking" id="CWE.764.DLOCK" origId="BD.TRS.DLOCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.77" desc="Protect against Command injection" id="CWE.77.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.770" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="CWE.770.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.770" desc="Do not call the 'start()' method directly on Thread class instances" id="CWE.770.ISTART" origId="TRS.ISTART" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.771" desc="Ensure resources are deallocated" id="CWE.771.LEAKS" origId="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.772" desc="Unrestricted lock resource" id="CWE.772.CLOSE" origId="PB.CLOSE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.772" desc="Ensure resources are deallocated" id="CWE.772.LEAKS" origId="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.778" desc="Ensure all sensitive method invocations are logged" id="CWE.778.ENFL" origId="SECURITY.BV.ENFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.78" desc="Protect against Command injection" id="CWE.78.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.787" desc="Avoid unvalidated input in array indexes" id="CWE.787.ARRAYSEC" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.787" desc="Avoid accessing arrays out of bounds" id="CWE.787.ARRAY" origId="BD.PB.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.789" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="CWE.789.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.79" desc="Process XML and HTML with a library instead of raw text" id="CWE.79.ARXML" origId="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Protect against Jakarta Digester injection" id="CWE.79.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Protect against HTTP response splitting" id="CWE.79.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Protect against XML data injection" id="CWE.79.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Protect against XSS vulnerabilities" id="CWE.79.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Encapsulate arguments of dangerous methods with a validation method" id="CWE.79.EACM" origId="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.79" desc="Validate all dangerous data" id="CWE.79.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.798" desc="Avoid using hard-coded cryptographic keys" id="CWE.798.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.798" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="CWE.798.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.8" desc="Do not declare entity beans as remote" id="CWE.8.RR" origId="EJB.RR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.80" desc="Process XML and HTML with a library instead of raw text" id="CWE.80.ARXML" origId="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.80" desc="Protect against Jakarta Digester injection" id="CWE.80.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.80" desc="Protect against XML data injection" id="CWE.80.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.806" desc="Prevent external processes from blocking on output or error streams" id="CWE.806.BUSSB" origId="SECURITY.WSC.BUSSB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.807" desc="Avoid storing sensitive data in plaintext in a cookie" id="CWE.807.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.807" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="CWE.807.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.807" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="CWE.807.HGRSI" origId="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.81" desc="Process XML and HTML with a library instead of raw text" id="CWE.81.ARXML" origId="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.829" desc="Protect against File contents injection" id="CWE.829.TDFILES" origId="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.829" desc="Protect against File names injection" id="CWE.829.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.829" desc="Protect against Library injection" id="CWE.829.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.829" desc="Protect against XPath injection" id="CWE.829.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.83" desc="Process XML and HTML with a library instead of raw text" id="CWE.83.ARXML" origId="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.832" desc="Ensure that nested locks are ordered correctly" id="CWE.832.LORD" origId="TRS.LORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.833" desc="Do not cause deadlocks by calling a &quot;synchronized&quot; method from a &quot;synchronized&quot; method" id="CWE.833.CSFS" origId="TRS.CSFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.833" desc="Do not acquire locks in different order" id="CWE.833.ORDER" origId="BD.TRS.ORDER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.833" desc="Release Locks in a &quot;finally&quot; block" id="CWE.833.RLF" origId="TRS.RLF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.833" desc="Do not use blocking methods while holding a lock" id="CWE.833.TSHL" origId="BD.TRS.TSHL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.833" desc="Do not perform synchronization nor call semaphore methods on an Object's 'this' reference" id="CWE.833.STR" origId="TRS.STR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.833" desc="Use 'wait()' and 'notifyAll()' instead of polling loops" id="CWE.833.UWNA" origId="TRS.UWNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.835" desc="Avoid infinite loops" id="CWE.835.AIL" origId="PB.LOGIC.AIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.835" desc="Declare &quot;for&quot; loops with an initializer, conditional, and updater statements" id="CWE.835.PCIF" origId="CODSTA.READ.PCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CWE.836" desc="Password information should not be included in properties file in plaintext" id="CWE.836.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.838" desc="Avoid calling methods and constructors which do not allow you to specify a character encoding option" id="CWE.838.SEO" origId="INTER.SEO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.841" desc="Avoid EJB 3 methods without security annotations" id="CWE.841.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.843" desc="Do not call 'equals()' methods that always return false" id="CWE.843.EQUS" origId="PB.LOGIC.EQUS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.862" desc="Avoid EJB 3 methods without security annotations" id="CWE.862.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.862" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="CWE.862.LCA" origId="SECURITY.UEC.LCA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.863" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="CWE.863.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.863" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="CWE.863.SRCD" origId="SECURITY.UEC.SRCD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.89" desc="Protect against SQL injection" id="CWE.89.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.89" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="CWE.89.UPS" origId="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CWE.9" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="CWE.9.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.90" desc="Protect against LDAP injection" id="CWE.90.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.91" desc="Protect against XML data injection" id="CWE.91.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.918" desc="Protect against network resource injection" id="CWE.918.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.94" desc="Avoid untrusted input when logging messages with Seam Logging API" id="CWE.94.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.94" desc="Validate potentially tainted data before it is used in methods that generate code" id="CWE.94.TDCODE" origId="BD.SECURITY.TDCODE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CWE.94" desc="Prevent the scripting API from executing untrusted code" id="CWE.94.ASAPI" origId="SECURITY.WSC.ASAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.95" desc="Validate potentially tainted data before it is used in methods that generate code" id="CWE.95.TDCODE" origId="BD.SECURITY.TDCODE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="CWE.99" desc="Protect against network resource injection" id="CWE.99.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="DBC" desc="Do not include a postcondition saying that &quot;$result!=null&quot; in methods which can return null" id="DBC.CPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="DBC" desc="Provide an '@invariant' contract for all getter methods" id="DBC.IGM" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="DBC" desc="Do not invoke a method on a reference that is not guaranteed to be non-null" id="DBC.IMNR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="DBC" desc="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" id="DBC.IPAN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide an '@invariant' contract for all package-private classes" id="DBC.PKGC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@post' contract for all package-private methods" id="DBC.PKGMPOST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@pre' contract for all package-private methods" id="DBC.PKGMPRE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide an '@invariant' contract for all &quot;protected&quot; classes" id="DBC.PROC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@post' contract for all &quot;protected&quot; methods" id="DBC.PROMPOST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@pre' contract for all &quot;protected&quot; methods" id="DBC.PROMPRE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide an '@invariant' contract for all &quot;public&quot; classes" id="DBC.PUBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@post' contract for all &quot;public&quot; methods" id="DBC.PUBMPOST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@pre' contract for all &quot;public&quot; methods" id="DBC.PUBMPRE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="DBC" desc="Avoid rechecking @pre and @post conditions" id="DBC.RCC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="DBC" desc="Use correct syntax in the DbC contracts" id="DBC.SYNTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide an '@invariant' contract for all &quot;private&quot; classes" id="DBC.PRIC" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@post' contract for all &quot;private&quot; methods" id="DBC.PRIMPOST" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="DBC" desc="Provide a '@pre' contract for all &quot;private&quot; methods" id="DBC.PRIMPRE" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="ECLIPSE" desc="Ensure &quot;Export-Package&quot; and &quot;Provide-Package&quot; match in MANIFEST.MF for Eclipse 3.0 compatibility" id="ECLIPSE.PCMF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="ECLIPSE" desc="Avoid exporting &quot;internal&quot; packages in MANIFEST.MF" id="ECLIPSE.IPMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="ECLIPSE" desc="Avoid missing &quot;Eclipse-AutoStart&quot; entry in MANIFEST.MF" id="ECLIPSE.SMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Declare bean classes &quot;public&quot;" id="EJB.CDP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not declare bean classes as &quot;abstract&quot;" id="EJB.CNDA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not declare bean classes as &quot;final&quot;" id="EJB.CNDF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Declare 'ejbCreate()' methods  &quot;public&quot;, but neither &quot;static&quot; nor &quot;final&quot;" id="EJB.CRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Implement a no-argument 'ejbCreate()' method for all Message-driven bean classes" id="EJB.MDBC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not define 'finalize()' method in bean classes" id="EJB.MNDF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Declare a &quot;public&quot; constructor that takes no parameters in bean classes" id="EJB.NFDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Declare 'ejbPostCreate()' &quot;public&quot; and neither &quot;static&quot; nor &quot;final&quot;" id="EJB.PCRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Make the return type &quot;void&quot; for SessionBeans or MessageDrivenBeans' 'ejbCreate()' methods" id="EJB.RTC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Make the return type &quot;void&quot; for the 'ejbPostCreate()' method" id="EJB.RTP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid passing the &quot;this&quot; reference as an argument" id="EJB.THISARG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not return &quot;this&quot;" id="EJB.THISRET" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not access, use, or create a class loader within a bean class" id="EJB.ACL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use EJB code in java swing or servlet classes" id="EJB.ADCB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not access or modify security configuration objects" id="EJB.AMSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use types from the &quot;java.io&quot; package within bean classes" id="EJB.JIO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Declare all &quot;static&quot; fields in EJB bean classes &quot;final&quot;" id="EJB.NFS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="The return type of EJB finder methods should be the primary key or a collection of primary keys" id="EJB.RT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not set or create a new SecurityManager in EJBs" id="EJB.SMSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Ensure EJB beans include necessary methods and EJB bean and interface classes follow the name format" id="EJB.STD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid starting, stopping, or managing threads in any way in bean classes" id="EJB.THREAD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use Servlet code in EJB classes" id="EJB.ABCS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use Entity Beans as fine-grained objects" id="EJB.ABFG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid excessive inter-entity bean communication" id="EJB.AIEBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use JDBC code inside of EJB classes" id="EJB.AJDBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not use sockets in EJBs" id="EJB.AUS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not call finder methods in the 'ejbLoad()'" id="EJB.EJBLOAD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare finder methods &quot;public&quot; and neither &quot;final&quot; nor &quot;static&quot;" id="EJB.FNDM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Implement one or more 'ejbCreate()' methods in bean classes" id="EJB.IECM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Implement one or more 'ejbPostCreate()' methods in EntityBean classes" id="EJB.IEPM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid loading native libraries in a Bean class" id="EJB.LNL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Define a matching 'ejbPostCreate()' method for each 'ejbCreate' method in entity bean classes" id="EJB.MEC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Throw 'java.rmi.RemoteException' in the methods of remote interface and remote home interface" id="EJB.MRE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not throw 'java.rmi.RemoteException' in a bean's local interface and local home interface" id="EJB.RILH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="EJB" desc="Do not declare entity beans as remote" id="EJB.RR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Throw 'javax.ejb.CreateException' in create methods of remote home or local home interfaces" id="EJB.TCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Throw 'javax.ejb.FinderException' in finder methods of remote home or local home interfaces" id="EJB.TFE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Cache reusable JNDI resources to minimize the use of expensive operations" id="EJB.UCIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Use a Session Facade to manage access to entity beans" id="EJB.USF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid one-to-one mapping between session beans and entity beans" id="EJB.AOTO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Reuse EJB homes" id="EJB.RUH" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Use Value Objects to reduce the granularity of calls to the server" id="EJB.UVO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not expose @AroundInvoke method in business interface" id="EJB.EJB3.EAII" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Avoid EJB 3 methods without security annotations" id="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Call 'InvocationContext.proceed()' from @AroundInvoke methods" id="EJB.EJB3.CPIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Avoid improper use of @Id annotation" id="EJB.EJB3.IDA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not inject @Stateful beans into @Stateless beans" id="EJB.EJB3.ISB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Ensure instance variables of @Stateful beans are Serializable" id="EJB.EJB3.SIVS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Avoid IllegalStateException when using transactions" id="EJB.EJB3.AISE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not start business method names with &quot;ejb&quot;" id="EJB.EJB3.BMN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Improper signature of the annotated method in EJB bean" id="EJB.EJB3.CMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Ensure @IdClass is Serializable and defines &quot;equals()&quot; and &quot;hashCode()&quot; methods" id="EJB.EJB3.IDCS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not extend other @MessageDriven beans from a @MessageDriven bean" id="EJB.EJB3.MDBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Ensure @MessageDriven beans specify a MessageListener" id="EJB.EJB3.MDML" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not declare multiple &quot;@Timeout&quot; methods" id="EJB.EJB3.MTM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Specify a @Remove method for @Stateful beans" id="EJB.EJB3.RMSB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Ensure parameters and return type of remote business methods are Serializable" id="EJB.EJB3.SRBM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Avoid ignored or invalid annotations" id="EJB.EJB3.AIA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Do not declare an interface both @Local and @Remote" id="EJB.EJB3.RLI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Always specify &quot;unitName&quot; with @PersistenceContext" id="EJB.EJB3.PCUN" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Access beans through a local interface" id="EJB.EJB3.ULI" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not throw exceptions from the constructors of exception classes" id="EXCEPT.TEFEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Catch all &quot;Throwable&quot; objects which may be thrown in the body of certain methods" id="EXCEPT.CATO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not abuse exceptions as flow control statements" id="EXCEPT.AEFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not use instanceof in a catch block to check the exception type" id="EXCEPT.AIOC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Avoid catch clauses with the same content" id="EXCEPT.CDUPL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Avoid using finally block for closing resource only" id="EXCEPT.CLFIN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Always chain thrown exceptions" id="EXCEPT.CTE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not throw exceptions from constructors of &quot;public&quot; non-&quot;final&quot; classes" id="EXCEPT.EPNFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not hide 'catch' blocks" id="EXCEPT.HCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Declare all fields of user-defined 'Exception' as &quot;final&quot;" id="EXCEPT.IMMEX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not declare any thrown exceptions in the 'main()' method" id="EXCEPT.MTE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not catch the 'java.lang.Error' object" id="EXCEPT.NCERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not catch 'NullPointerException'" id="EXCEPT.NCNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Ensure that the 'parse' methods of the numeric classes do not throw unhandled &quot;NumberFormatExceptions&quot;" id="EXCEPT.NFE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not throw exception types which are too general or are unchecked exceptions" id="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not throw 'NullPointerException'" id="EXCEPT.NTNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Rethrow certain exceptions if they are caught" id="EXCEPT.RTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Place &quot;try/catch/finally&quot; blocks outside of loops" id="EXCEPT.TRY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Exception messages must meet minimum character requirement" id="EXCEPT.TSCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="FORMAT" desc="Include a meaningful file header comment in every source file" id="FORMAT.MCH" sev="2" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Use '()' to separate complex expressions" id="FORMAT.APAREN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Ensure proper spacing in array references" id="FORMAT.ASPACE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Do not place empty whitespace at the end of a line" id="FORMAT.ATS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Put a blank line before each C-style comment" id="FORMAT.BLBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="12;" authUrg="2;" cat="FORMAT" desc="Enforce number of blank line(s) before type declarations" id="FORMAT.BLCD" sev="3" total="12"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of blank line(s) to separate &quot;imports&quot; from different packages" id="FORMAT.BLSIM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Place a closing brace on its own line" id="FORMAT.CBRACE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Place a single space character or no space character after type casting" id="FORMAT.CMS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Do not leave spaces between qualified names and method invocations" id="FORMAT.DOT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Use spaces instead of tabs (or tabs instead of spaces)" id="FORMAT.DUT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce the position of '{' brace" id="FORMAT.FCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Place the type that has the same name as the file as the first type" id="FORMAT.FCN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Declare arrays with '[]' brackets after the array type and before the variable name(s)" id="FORMAT.IAD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="1;" cat="FORMAT" desc="Enforce number of space(s) for indentation" id="FORMAT.IND" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Limit the maximum length of a line" id="FORMAT.LL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce the order of annotations and modifiers" id="FORMAT.MO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Place a single space character or no space character between a method name and the opening &quot;(&quot; parenthesis" id="FORMAT.MSP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Do not place statements on the same line as the '{' opening brace" id="FORMAT.NSAB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Write one statement per line" id="FORMAT.OSPL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) after every comma" id="FORMAT.SAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) on each side of an assignment operator" id="FORMAT.SAOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) after the opening parenthesis &quot;(&quot; of a conditional statement" id="FORMAT.SAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) after every semicolon" id="FORMAT.SAS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) between a prefixed unary operator and its operand" id="FORMAT.SAUOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) on each side of a bitwise operator" id="FORMAT.SBOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) between a postfixed unary operator and its operand" id="FORMAT.SBUOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) between a conditional statement and the opening &quot;(&quot; parenthesis" id="FORMAT.SC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) before and after the &quot;?&quot; conditional operator" id="FORMAT.SCOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) on each side of a logical operator" id="FORMAT.SLOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Enforce number of space character(s) on each side of a relational operator" id="FORMAT.SROP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Avoid using trailing comments" id="FORMAT.TC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Avoid or enforce the use of trailing commas in array initializers" id="FORMAT.TCOMMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Use the preferred formatting for conditional expressions" id="FORMAT.TE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Make sure all files are terminated with a newline character" id="FORMAT.TNL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="15;" authUrg="2;" cat="FORMAT" desc="Enforce number of blank line(s) between major sections" id="FORMAT.U2BL" sev="3" total="15"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="FORMAT" desc="Avoid unnecessary parentheses" id="FORMAT.UP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Do not use 'finalize()' methods to unregister listeners" id="GC.FM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Do not call 'finalize()' explicitly" id="GC.NCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Be cautious when calling methods which may cause memory leaks" id="GC.MML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Prevent potential memory leaks in ObjectOutputStreams by calling 'reset()'" id="GC.OSTM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Do not use unnecessary temporaries when converting primitive types to String" id="GC.AUTP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Avoid using 'Date[]', use 'long[]' instead" id="GC.DUD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Call 'super.finalize()' from 'finalize()'" id="GC.FCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Do not explicitly call 'System.gc()' or 'Runtime.gc()'" id="GC.GC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Reuse calls to 'getClipBounds()'" id="GC.GCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Call 'super.finalize()' in the &quot;finally&quot; block of 'finalize()' methods" id="GC.IFF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Reuse immutable constant objects to conserve memory" id="GC.RCO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Avoid &quot;static&quot; collections or maps; they can grow without bounds" id="GC.STV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid unused &quot;throws&quot; clauses" id="GLOBAL.AUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="GLOBAL" desc="Declare package-private fields as inaccessible as possible" id="GLOBAL.DPAF" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare package-private methods as inaccessible as possible" id="GLOBAL.DPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare a package-private &quot;class&quot; &quot;final&quot; if it is not subclassed" id="GLOBAL.SPAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare a package-private method &quot;final&quot; if it is not overridden" id="GLOBAL.SPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Ensure correct constructor declarations in utility classes" id="GLOBAL.UCC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused package-private types" id="GLOBAL.UPAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused package-private fields" id="GLOBAL.UPAF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused package-private methods" id="GLOBAL.UPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Make methods &quot;static&quot; if they do not use instance class members" id="GLOBAL.ASI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare non-private fields &quot;final&quot; if they are read-only" id="GLOBAL.SF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Ensure that files do not contain cyclical dependencies" id="GLOBAL.ACD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare &quot;package-private&quot; types as inaccessible as possible" id="GLOBAL.DPAC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="5;" authUrg="0;" cat="GLOBAL" desc="Declare &quot;public/protected&quot; types as inaccessible as possible" id="GLOBAL.DPPC" sev="4" total="5"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare &quot;public/protected&quot; fields as inaccessible as possible" id="GLOBAL.DPPF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="GLOBAL" desc="Declare &quot;public/protected&quot; methods as inaccessible as possible" id="GLOBAL.DPPM" sev="4" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid interfaces which are never implemented and &quot;abstract&quot; classes which are never extended" id="GLOBAL.NIE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused enum constants" id="GLOBAL.UEC" sev="4" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="5;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused &quot;public/protected&quot; types" id="GLOBAL.UPPC" sev="4" total="5"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused &quot;public/protected&quot; fields" id="GLOBAL.UPPF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused &quot;public/protected&quot; methods" id="GLOBAL.UPPM" sev="4" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="GLOBAL" desc="Declare a &quot;public/protected&quot; &quot;class&quot; &quot;final&quot; if it is not subclassed" id="GLOBAL.SPPC" sev="5" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="GLOBAL" desc="Declare a &quot;public/protected&quot; method &quot;final&quot; if it is not overridden" id="GLOBAL.SPPM" sev="5" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="HIBERNATE.LHII" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Call 'setLockMode()' before executing a Hibernate Query" id="HIBERNATE.SLM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Roll back any active transactions in 'catch' blocks" id="HIBERNATE.RBT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Call 'addClass()' instead of 'addResource()' to add a mapping to a 'Configuration'" id="HIBERNATE.CAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Close Hibernate Sessions in &quot;finally&quot; blocks" id="HIBERNATE.CHS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Close all 'SessionFactory' objects" id="HIBERNATE.CSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Include getter and setter methods and an id field for any object mapped to a column in a database table" id="HIBERNATE.GSIM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Declare a no-argument constructor for Hibernate persistent classes" id="HIBERNATE.IDC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Override the 'equals' and 'hashCode' methods for mapped Hibernate objects" id="HIBERNATE.OHCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Declare the setter method for the Hibernate identifier 'private'" id="HIBERNATE.PIDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Use mapped, named HQL queries instead of writing queries in Java code" id="HIBERNATE.UGNQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Use named parameters in HQL queries" id="HIBERNATE.UNP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Avoid uninitialized reads of fields before or during constructor execution" id="INIT.UIRC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use a &quot;static&quot; initializer that creates an instance of the current class before all &quot;static final&quot; fields are assigned" id="INIT.SICUI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Avoid explicitly initializing fields which have already been initialized by a superclass' constructor" id="INIT.ADI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Ensure that the &quot;if&quot; check for lazy initialization uses the correct operator" id="INIT.AULI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Use diamond to invoke the constructor of a generic class" id="INIT.DIA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use initialization circularities for fields" id="INIT.IC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Initialize all local variables explicitly at the declaration statement" id="INIT.LV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use non-final &quot;static&quot; fields during the initialization" id="INIT.NFS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Use explicit initializations/Do not initialize &quot;static&quot; fields to default values" id="INIT.SF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not initialize &quot;static&quot; &quot;final&quot; variables with non &quot;final&quot; &quot;static&quot; variables" id="INIT.SFA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use array initializers" id="INIT.AAI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not put code other than initialization code in lazy initialization blocks" id="INIT.CLIB" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="INIT" desc="Explicitly initialize all fields" id="INIT.CSI" sev="4" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Avoid double initialization of fields" id="INIT.DI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Use the optional java.util.Locale parameter" id="INTER.CCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Do not use single characters with logic operators in an Internationalized environment" id="INTER.CLO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'Character.toLowerCase(char)' or 'Character.toUpperCase(char)' in an internationalized environment" id="INTER.CTLC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="0;" cat="INTER" desc="Isolate translatable text in resource bundles in an Internationalized environment" id="INTER.ITT" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Provide a 'Locale' argument when instantiating 'SimpleDateFormat' objects" id="INTER.SDFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Avoid calling methods and constructors which do not allow you to specify a character encoding option" id="INTER.SEO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Avoid unnecessary &quot;$NON-NLS&quot; and &quot;NOI18N&quot; comments" id="INTER.UNLS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'toString()' or 'String.valueOf()' on Date objects in an Internationalized environment" id="INTER.DTS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Use &quot;static final&quot; constants for single character literals in an Internationalized environment" id="INTER.NCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="INTER" desc="Do not call 'toString()' or 'String.valueOf()' on numeric values in an Internationalized environment" id="INTER.NTS" sev="4" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call the 'parse' methods of the 'Number' types in an Internationalized environment" id="INTER.PN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'toString()' or 'String.valueOf()' on Time objects in an Internationalized environment" id="INTER.TTS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="4;" authUrg="0;" cat="INTER" desc="Do not use String concatenation in an Internationalized environment" id="INTER.COS" sev="5" total="4"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'String.compareTo()' in an Internationalized environment" id="INTER.SCT" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'String.equals()' in an Internationalized environment" id="INTER.SE" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INTER" desc="Do not call 'String.indexOf()' or 'String.lastIndexOf()' in an Internationalized environment" id="INTER.SIO" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INTER" desc="Do not use 'StringTokenizer' in an Internationalized environment" id="INTER.ST" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="9;" authUrg="1;" cat="JAVADOC" desc="Always include a description of whether or not a method can return null in the Javadoc" id="JAVADOC.CRN" sev="3" total="9"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Avoid unused Javadoc tags" id="JAVADOC.DPMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Enforce custom Javadoc tags for methods/annotation member types" id="JAVADOC.ECTM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Enforce custom Javadoc tags for types" id="JAVADOC.ECTT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Do not insert non-Javadoc comments between Javadoc comments and declarations" id="JAVADOC.JNJD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Include a meaningful description in Javadoc tags" id="JAVADOC.MDJT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Avoid misformatted Javadoc tags" id="JAVADOC.MISFORMAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@return' Javadoc tag in method Javadoc comments" id="JAVADOC.MRDC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@version' tag in type Javadoc comments" id="JAVADOC.MVJDT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Order Javadoc tags appropriately" id="JAVADOC.ORDER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@param' Javadoc tag for each parameter of methods" id="JAVADOC.PARAM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="12;" authUrg="1;" cat="JAVADOC" desc="Provide Javadoc comments and descriptions for types" id="JAVADOC.PJDC" sev="3" total="12"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Provide Javadoc comments and descriptions for fields" id="JAVADOC.PJDF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="16;" authUrg="1;" cat="JAVADOC" desc="Provide Javadoc comments and descriptions for methods" id="JAVADOC.PJDM" sev="3" total="16"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Enforce restraint on number of lines used for Javadoc comments" id="JAVADOC.SINGLE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@concurrency' Javadoc tag on &quot;synchronized&quot; methods and blocks" id="JAVADOC.SMJT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="JAVADOC" desc="Avoid misspelling words in Javadoc comments and string literals" id="JAVADOC.SPELL" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Specify 'RUNTIME' as the retention policy when using the '@Documented' annotation" id="JAVADOC.SRRP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@throws' or '@exception' Javadoc tag in methods" id="JAVADOC.THROW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="JAVADOC" desc="Provide a Javadoc comment for 'toString()' methods" id="JAVADOC.TSMJT" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Ensure that certain Javadoc tags only span one line" id="JAVADOC.TSOL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Avoid using the '@return' Javadoc tag on &quot;void&quot; methods" id="JAVADOC.VMCR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Avoid unsupported '@' tags and other tags that should not be used in Javadoc comments" id="JAVADOC.BT" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Enforce custom Javadoc tags for fields" id="JAVADOC.ECTF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JAVADOC" desc="Use the '@author' Javadoc tag in declaration Javadoc comments" id="JAVADOC.MAJDT" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Ensure index is valid in JDBC method invocation" id="JDBC.BRSA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Close JDBC connections in &quot;finally&quot; blocks" id="JDBC.CDBC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Close JDBC resources in &quot;finally&quot; blocks" id="JDBC.RRWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Use &quot;PreparedStatements&quot; correctly" id="JDBC.UPSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Close JDBC objects in the correct order" id="JDBC.COCO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Reuse data sources for JDBC connections" id="JDBC.DSLV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Do not open or close JDBC connections in loops" id="JDBC.ODBIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Do not store database connection objects in &quot;static&quot; fields" id="JDBC.SCSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Use javax.sql.DataSource to get the database connection" id="JDBC.UDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Use instance of RowSetFactory to create a RowSet object" id="JDBC.URSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not include assertion statements in threads other than the main thread" id="JUNIT.AST" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Avoid extending 'TestCase' in test classes which contain the '@Test' annotation" id="JUNIT.ETCTA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure that JUnit 5 test classes that use @Ignore are annotated with @ExtendWith(IgnoreCondition.class) or @EnableJUnit4MigrationSupport" id="JUNIT.IGNORE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure JUnit test cases include assertion methods" id="JUNIT.SIA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Make 'suite()' methods &quot;public&quot; and &quot;static&quot;" id="JUNIT.SUITE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not use the TemporaryFolder Rule in JUnit 5 tests" id="JUNIT.TDIR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="14;" authUrg="0;" cat="JUNIT" desc="Make sure all methods have at least one JUnit test method" id="JUNIT.TEST" sev="2" total="14"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Prefer assertEquals and assertNotEquals over assertTrue and assertFalse" id="JUNIT.AEAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not hard code the location to data used by a unit test" id="JUNIT.AHLOD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Prefer assertNull and assertNotNull over assertTrue and assertFalse" id="JUNIT.ANAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Avoid negating boolean parameters to assertTrue() or assertFalse()" id="JUNIT.ANBA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Prefer assertSame and assertNotSame over assertTrue and assertFalse" id="JUNIT.ASAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Include a message string in JUnit assertions" id="JUNIT.ASSERT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Avoid using loops in JUnit tests" id="JUNIT.AUL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Avoid calling 'assert' methods in catch blocks" id="JUNIT.CBA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Call the superclass' 'setUp' and 'tearDown' methods in the 'setUp' and 'tearDown' methods of JUnit test classes" id="JUNIT.CSUPER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure that 'setUp()' and 'tearDown()' methods are implemented correctly" id="JUNIT.CSUTD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Use the fail() method instead of forcing a failed condition using the assertTrue(false) or assertFalse(true) method" id="JUNIT.FAIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not invoke the 'fail()' method in a 'catch' block in a JUnit test method" id="JUNIT.FICB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not implement the 'suite()' method in JUnit test classes" id="JUNIT.ISMTC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not use the constructor to set up test cases" id="JUNIT.OSIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure that a setup method is defined in the test class" id="JUNIT.OSUM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure that a cleanup method is defined in the test class" id="JUNIT.OTDM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Do not use JUnit 4 annotations when migrating tests to JUnit 5" id="JUNIT.RPL5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Set all fields which are initialized in the 'setUp()' method to &quot;null&quot; in the 'tearDown()' method" id="JUNIT.SIFN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Use '@Test' annotation instead of extending 'TestCase'" id="JUNIT.TATC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Include at least one test method in each 'TestCase' class" id="JUNIT.TCWNT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Include an appropriate Javadoc tag in the Javadoc for JUnit test methods" id="JUNIT.UPJT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Use the correct signature for the 'suite()' method in JUnit test classes" id="JUNIT.UPSS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="JUNIT" desc="Ensure that JUnit classes have a main() allowing them to be executed in isolation" id="JUNIT.MAIN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JUNIT" desc="Place each test class in the same location as the class that it tests" id="JUNIT.DIR" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.metrics.analyzer" authTot="18;" authUrg="0;" cat="METRIC" desc="McCabe Cyclomatic Complexity" id="METRIC.CC" sev="3" total="18"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="5;" authUrg="0;" cat="MOBILE" desc="Avoid accessing same fields and methods multiple times" id="MOBILE.ACFM" sev="3" total="5"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE" desc="Avoid using 'getter' and 'setter' methods" id="MOBILE.AMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE" desc="Avoid using array of primtive wrapper objects" id="MOBILE.APTA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE" desc="Avoid using enhanced &quot;for&quot; loop to walk through a &quot;java.lang.Iterable&quot; object" id="MOBILE.AUEF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="6;" authUrg="0;" cat="MOBILE" desc="Avoid declaring &quot;interface&quot; types" id="MOBILE.AUI" sev="3" total="6"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE" desc="Avoid multiple dimension arrays" id="MOBILE.DARRAY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="2;" authUrg="0;" cat="MOBILE" desc="Avoid using enums" id="MOBILE.ENUM" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="MOBILE" desc="Avoid using floats" id="MOBILE.FLOATER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.ANDROID" desc="Always override 'onSaveInstanceState()'" id="MOBILE.ANDROID.AOSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="MOBILE.ANDROID" desc="Make sure that widgets aren't updated too often" id="MOBILE.ANDROID.WUP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Do not use anonymous classes as interface implementors" id="MOBILE.J2ME.ACII" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Do not use an array length in a loop condition expression" id="MOBILE.J2ME.ARLL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Avoid constant initializations of primitive arrays that exceed a certain size" id="MOBILE.J2ME.CIPA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Avoid classes that are subclassed only once and are not publicly used" id="MOBILE.J2ME.CSOO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Do not access a field excessively" id="MOBILE.J2ME.EAOF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Ensure methods use return parameters instead of returning new objects" id="MOBILE.J2ME.EURP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="MOBILE.J2ME" desc="Catch 'OutOfMemoryError' for large array allocations" id="MOBILE.J2ME.OOME" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not declare types with the same name as types in the Java platform" id="NAMING.DJLO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="NAMING" desc="Avoid using potential Java keywords as identifiers" id="NAMING.ID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not use a package name that is reserved by Sun" id="NAMING.RPKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow class name conventions defined for annotations" id="NAMING.ANNS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Avoid using dollar signs in names" id="NAMING.DSN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Ensure class names reflect classes which they extend" id="NAMING.ECN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow class name conventions defined for base classes" id="NAMING.EXTENDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow a naming convention for getter methods" id="NAMING.GETA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow a naming convention for &quot;boolean&quot; getter methods" id="NAMING.GETB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use all uppercase letters for the names of fields in an &quot;interface&quot;" id="NAMING.IFV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow class name conventions defined for implemented interfaces" id="NAMING.IMPLS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use 'is...'  only for naming methods that return a &quot;boolean&quot;" id="NAMING.IRB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for annotations" id="NAMING.NA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for array and collection variables" id="NAMING.NAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for &quot;abstract&quot; classes" id="NAMING.NACL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for classes" id="NAMING.NCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for exceptions" id="NAMING.NE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for enum type declarations" id="NAMING.NENUM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for &quot;final&quot; local variables" id="NAMING.NFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for non-&quot;static&quot; fields" id="NAMING.NIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for interfaces" id="NAMING.NITF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for local variables" id="NAMING.NLV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for non-&quot;static&quot; methods" id="NAMING.NM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for method parameters" id="NAMING.NMP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for type parameters" id="NAMING.NPH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for non-&quot;final&quot; &quot;static&quot; fields" id="NAMING.NSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for &quot;static&quot; methods" id="NAMING.NSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for JUnit test classes" id="NAMING.NTEST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="NAMING" desc="Use a naming convention for &quot;package&quot; names" id="NAMING.PKG" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Follow a naming convention for setter methods" id="NAMING.SETA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for singleton classes" id="NAMING.SINGLETON" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for tag handlers and associated classes" id="NAMING.THAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not use lowercase letters in &quot;final&quot; &quot;static&quot; field names" id="NAMING.USF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use a naming convention for utility classes" id="NAMING.UTIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not use variables with identical names or names that differ only in case" id="NAMING.UUVN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Use conventional variable names" id="NAMING.CVN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="6;" authUrg="1;" cat="NAMING" desc="Follow limits for the lengths of type, method, field, parameter, and variable names" id="NAMING.LLI" sev="4" total="6"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="8;" authUrg="0;" cat="NAMING" desc="Use Hungarian notation for variables" id="NAMING.UHN" sev="4" total="8"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not hide inherited fields" id="OOP.AHF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OOP" desc="Do not declare a method in an interface which conflicts with a 'protected' method of 'Object'" id="OOP.CIMOM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not extend concrete classes in &quot;abstract&quot; classes" id="OOP.ACECC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid casts to types which are more specific than necessary" id="OOP.ACST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" id="OOP.AF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not hide inherited &quot;static&quot; member methods" id="OOP.AHSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="OOP" desc="Add the &quot;@Override&quot; annotation to overriding methods" id="OOP.AOA" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Always override certain methods when extending certain types" id="OOP.AOCM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Redeclare a class with only &quot;abstract&quot; methods and &quot;static final&quot; fields as an &quot;interface&quot;" id="OOP.ASFI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not implement or extend annotations" id="OOP.AUASI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not use an object to access &quot;static&quot; fields or methods" id="OOP.AUO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="OOP" desc="Do not hide fields and local variables declared in enclosing scopes" id="OOP.HIF" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="OOP" desc="Do not give method local variables and parameters the same name as class fields" id="OOP.HMF" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid inner classes in interfaces" id="OOP.ICIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid implementing interfaces only to access constants" id="OOP.IIAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid more than two levels of nested inner classes" id="OOP.LEVEL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Give &quot;finalize()&quot; methods &quot;protected&quot; access" id="OOP.MFP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="2;" cat="OOP" desc="Provide mutable classes with copy functionality" id="OOP.MUCOP" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid &quot;abstract&quot; classes without &quot;abstract&quot; methods" id="OOP.NAM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not declare &quot;public&quot; or package-private constructors in &quot;abstract&quot; classes" id="OOP.NPAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not override an instance &quot;private&quot; method" id="OOP.OPM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not use &quot;protected&quot; access for members of &quot;final&quot; classes" id="OOP.PIFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Ensure 'public' classes have at least one 'public' or 'protected' member" id="OOP.PMPC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not declare a class as implementing an interface if a superclass already implements that interface" id="OOP.RI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Use a naming convention for singleton classes" id="OOP.SNGL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Specify which version of potentially ambiguous methods you wish to call for method calls in inner classes" id="OOP.SVHM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Ensure methods are either a command(change state) or a query(get state)" id="OOP.CQS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid declaring methods inherited from class &quot;Object&quot; in an interface" id="OOP.IDOM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Use &quot;instanceof&quot; only on interfaces" id="OOP.INSOF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid interfaces with no fields or methods (marker interfaces)" id="OOP.MI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Declare methods in &quot;abstract&quot; classes with empty bodies &quot;abstract&quot;" id="OOP.NOMA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not declare &quot;private&quot; or &quot;static&quot; methods as &quot;final&quot;" id="OOP.PSDF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid referencing a class' subclasses from itself" id="OOP.RSFC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Use getContextClassLoader() instead of getClassLoader()" id="OOP.THRECL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OOP" desc="Implement interface methods non-trivially or declare them &quot;abstract&quot;" id="OOP.IIN" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="When calling &quot;Math.ceil()&quot;, do not pass in an integer that has been cast to a floating point type" id="OPT.ICDPC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid questionable uses of non-short-circuit logic" id="OPT.USCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Change non-&quot;private&quot; members to &quot;private&quot; in anonymous classes" id="OPT.AAM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use abbreviated assignment operators" id="OPT.AAS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not use the 'new String(String)' constructor" id="OPT.ACDO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not get the 'Class' object through new object instantiation" id="OPT.AGC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid new instantiations of primitive wrapper objects, whose values are cached" id="OPT.ANIPW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary Map operations" id="OPT.AUMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Simplify &quot;boolean&quot; returns" id="OPT.BR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Close all &quot;java.io.Closeable&quot; resources in a &quot;finally&quot; block" id="OPT.CCR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid putting constant expressions inside loops" id="OPT.CEIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not call methods in loop condition statements" id="OPT.CEL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Close input and output resources in &quot;finally&quot; blocks" id="OPT.CIO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Check the logging level before calling potentially expensive logging operations" id="OPT.CLL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="OPT" desc="Do not convert a value to a String by concatenating the empty String" id="OPT.CPTS" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid duplicate calls to the &quot;get&quot; methods of &quot;ResultSet&quot;" id="OPT.CRSG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Close resources as early as possible" id="OPT.CRWD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not use a &quot;private&quot; field that is accessed in only one method; change it to a local variable" id="OPT.CTLV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" id="OPT.DIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'String.length() == 0' instead of 'String.equals(&quot;&quot;)'" id="OPT.EES" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'equalsIgnoreCase()' instead of calls to 'toLowerCase()' or 'toUpperCase()'" id="OPT.EIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid calling expensive operations in the body of a loop" id="OPT.EOIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid accessing members which will require synthetic accessor methods" id="OPT.ICGA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not iterate through Lists using the 'get()' method" id="OPT.ILUG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'System.arraycopy()' instead of using a loop to copy arrays" id="OPT.IRB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not instantiate a class which contains only static fields and methods" id="OPT.ISC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Move invariants outside of loops wherever possible" id="OPT.LIOL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not instantiate variables in a loop body" id="OPT.LOOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary comparisons to &quot;null&quot;" id="OPT.MUNC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid 'null' check before 'instanceof'" id="OPT.NCIO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid creating new instances of BigInteger and BigDecimal" id="OPT.NIW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Declare &quot;final&quot; fields with a known compile time value as &quot;static&quot;" id="OPT.NSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'charAt()' instead of 'startsWith()' for one character comparisons" id="OPT.PCTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not instantiate the wrapper classes for primitive types" id="OPT.PRIM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Specify an initial 'StringBuffer' capacity" id="OPT.SB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid converting StringBuffer or StringBuilder to String to check length" id="OPT.SBL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'StringBuilder' instead of 'StringBuffer' when synchronization is not required" id="OPT.SBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid using synchronized data structures for local variables" id="OPT.SDLS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Declare member classes &quot;static&quot; if possible" id="OPT.SI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid using 'String.replaceAll()' with literal values" id="OPT.SRA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use single quotes instead of double quotes for single character string concatenation" id="OPT.STR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Simplify methods that return strings that are always concatenated" id="OPT.STRBUF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary calls to 'String' methods" id="OPT.STS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid use of if statements if they can be replaced with switch statements" id="OPT.SWIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not call a synchronized method inside of a loop" id="OPT.SYN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not compare boolean variables with &quot;true&quot;" id="OPT.UEQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary &quot;instanceof&quot; evaluations" id="OPT.UISO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not call the methods from 'java.lang.Math' if the result is a constant which can be easily determined" id="OPT.UMATH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary casting" id="OPT.UNC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'StringBuffer' instead of 'String' when concatenating strings" id="OPT.USB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'String' instead of 'StringBuffer' for constant strings" id="OPT.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not call ''String.toCharArray()'' unnecessarily" id="OPT.STCA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Use 'stack' variables whenever possible" id="OPT.USV" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="2;" authUrg="0;" cat="OPT" desc="Make getter and setter methods for instance fields &quot;final&quot;" id="OPT.MAF" sev="5" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Use the 'nextInt()' method to generate a random integer" id="OPT.NIVND" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Use collection size for target array in 'toArray()'" id="OPT.TOARRAY" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against Command injection" id="OWASP2017.A1.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against Jakarta Digester injection" id="OWASP2017.A1.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against Environment injection" id="OWASP2017.A1.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Exclude unsanitized user input from format strings" id="OWASP2017.A1.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against JXPath injection" id="OWASP2017.A1.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against LDAP injection" id="OWASP2017.A1.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against Reflection injection" id="OWASP2017.A1.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against SQL injection" id="OWASP2017.A1.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against XPath injection" id="OWASP2017.A1.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="OWASP2017.A1.UPS" origId="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against log forging" id="OWASP2017.A1.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A1" desc="Protect against network resource injection" id="OWASP2017.A1.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A10" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="OWASP2017.A10.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A10" desc="Ensure all sensitive method invocations are logged" id="OWASP2017.A10.ENFL" origId="SECURITY.BV.ENFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="OWASP2017.A2.ISL" origId="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Ensure proper session expiration" id="OWASP2017.A2.RUIM" origId="SECURITY.IBA.RUIM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="OWASP2017.A2.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Protect against using unprotected credentials" id="OWASP2017.A2.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="OWASP2017.A2.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A2" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="OWASP2017.A2.HGRSI" origId="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="OWASP2017.A3.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="OWASP2017.A3.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Do not log confidential or sensitive information" id="OWASP2017.A3.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid using hard-coded cryptographic keys" id="OWASP2017.A3.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="OWASP2017.A3.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid using insecure algorithms for cryptography" id="OWASP2017.A3.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="MessageDigest objects must process the data with the 'update' method" id="OWASP2017.A3.MCMDU" origId="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Use hash functions with a salt" id="OWASP2017.A3.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="OWASP2017.A3.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2017.A3.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Prevent exposure of sensitive data" id="OWASP2017.A3.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Initialize KeyGenerator instances" id="OWASP2017.A3.SIKG" origId="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="OWASP2017.A3.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Always verify JarFile signatures" id="OWASP2017.A3.VJFS" origId="SECURITY.WSC.VJFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="OWASP2017.A3.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Ensure arguments passed to certain methods come from predefined methods list" id="OWASP2017.A3.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="OWASP2017.A3.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Properly validate server identity" id="OWASP2017.A3.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Do not hard-code IP addresses and port numbers" id="OWASP2017.A3.HCNA" origId="PORT.HCNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Safely serialize sensitive data" id="OWASP2017.A3.SSSD" origId="BD.SECURITY.SSSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Use the SSL-enabled version of classes when possible" id="OWASP2017.A3.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A3" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="OWASP2017.A3.HTTPS" origId="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A4" desc="Disable XML external entity injection" id="OWASP2017.A4.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A5" desc="Protect against File names injection" id="OWASP2017.A5.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A5" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="OWASP2017.A5.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Avoid using the DriverManagerDataSource class in production code" id="OWASP2017.A6.DMDS" origId="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Avoid debug information from Spring Security framework to logs" id="OWASP2017.A6.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2017.A6.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="OWASP2017.A6.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not disable CSRF protection" id="OWASP2017.A6.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not disable CSRF protection" id="OWASP2017.A6.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Password information should not be included in properties file in plaintext" id="OWASP2017.A6.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="OWASP2017.A6.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="OWASP2017.A6.AECB" origId="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not catch exception types which are too general or are unchecked exceptions" id="OWASP2017.A6.NCE" origId="CODSTA.EPC.NCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not catch 'NullPointerException'" id="OWASP2017.A6.NCNPE" origId="EXCEPT.NCNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not throw exception types which are too general or are unchecked exceptions" id="OWASP2017.A6.NTERR" origId="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Avoid declaring methods to throw general or unchecked Exception types" id="OWASP2017.A6.NTX" origId="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Do not declare entity beans as remote" id="OWASP2017.A6.RR" origId="EJB.RR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Always specify error pages in web.xml" id="OWASP2017.A6.SEP" origId="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="OWASP2017.A6" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="OWASP2017.A6.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Ensure Session-ID Length is sufficient" id="OWASP2017.A6.SLID" origId="SECURITY.UEC.SLID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A6" desc="Restrict cross-origin resource sharing to secure origins" id="OWASP2017.A6.JXCORS" origId="SECURITY.WSC.JXCORS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A7" desc="Canonicalize data before validation" id="OWASP2017.A7.CDBV" origId="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A7" desc="Protect against HTTP response splitting" id="OWASP2017.A7.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2017.A7" desc="Protect against XSS vulnerabilities" id="OWASP2017.A7.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Avoid parsing untrusted data with XMLDecoder" id="OWASP2017.A8.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Disable LDAP deserialization" id="OWASP2017.A8.SC" origId="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="OWASP2017.A8.DUID" origId="SERIAL.DUID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="OWASP2017.A8.RRSC" origId="SERIAL.RRSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="OWASP2017.A8.RWAF" origId="SERIAL.RWAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents" id="OWASP2017.A8.SCBNP" origId="SERIAL.SCBNP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Do not declare the 'readObject()' method as &quot;synchronized&quot;" id="OWASP2017.A8.SROS" origId="SERIAL.SROS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Validate objects before deserialization" id="OWASP2017.A8.VOBD" origId="SERIAL.VOBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2017.A8" desc="Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes" id="OWASP2017.A8.OROM" origId="SECURITY.EAB.OROM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Do not log confidential or sensitive information" id="OWASP2019.API10.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="OWASP2019.API10.LHII" origId="HIBERNATE.LHII" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="OWASP2019.API10.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Protect against log forging" id="OWASP2019.API10.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="OWASP2019.API10.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Avoid using multiple loggers, use logging levels instead" id="OWASP2019.API10.AUML" origId="CODSTA.BP.AUML" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Avoid debug levels which are too high in Tomcat's 'server.xml'" id="OWASP2019.API10.DLTH" origId="XML.DLTH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Ensure all sensitive method invocations are logged" id="OWASP2019.API10.ENFL" origId="SECURITY.BV.ENFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Ensure that the logging level checked matches the level of the called logging method" id="OWASP2019.API10.LLM" origId="PB.LOGIC.LLM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="OWASP2019.API10" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="OWASP2019.API10.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API10" desc="Avoid writing to Consoles" id="OWASP2019.API10.ACW" origId="SECURITY.ESD.ACW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid hard-coding the arguments to certain methods" id="OWASP2019.API2.AHCA" origId="SECURITY.WSC.AHCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="OWASP2019.API2.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="OWASP2019.API2.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Keep all authentication methods centralized to enforce consistency" id="OWASP2019.API2.CAM" origId="SECURITY.WSC.CAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using hard-coded cryptographic keys" id="OWASP2019.API2.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="OWASP2019.API2.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using insecure algorithms for cryptography" id="OWASP2019.API2.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Use hash functions with a salt" id="OWASP2019.API2.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Call authentication methods to enforce consistency" id="OWASP2019.API2.PAC" origId="SECURITY.WSC.PAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="OWASP2019.API2.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid EJB 3 methods without security annotations" id="OWASP2019.API2.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid storing sensitive data in plaintext in a cookie" id="OWASP2019.API2.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="OWASP2019.API2.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using cryptographic keys which are too short" id="OWASP2019.API2.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="OWASP2019.API2.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Password information should not be included in properties file in plaintext" id="OWASP2019.API2.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Mark cookies as HttpOnly" id="OWASP2019.API2.SCHTTP" origId="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Protect against using unprotected credentials" id="OWASP2019.API2.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Clear sensitive data after use" id="OWASP2019.API2.CSD" origId="SECURITY.ESD.CSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="OWASP2019.API2.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="OWASP2019.API2.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using plain text passwords in Axis2 configuration files" id="OWASP2019.API2.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API2" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="OWASP2019.API2.HGRSI" origId="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Always specify absolute paths to execute commands" id="OWASP2019.API3.PBRTE" origId="SECURITY.WSC.PBRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="OWASP2019.API3.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Enforce 'SecurityManager' checks before setting or getting fields" id="OWASP2019.API3.SCF" origId="SECURITY.WSC.SCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Enforce 'SecurityManager' checks in methods of 'Cloneable' classes" id="OWASP2019.API3.SCLONE" origId="SECURITY.WSC.SCLONE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Enforce 'SecurityManager' checks in methods of 'Serializable' classes" id="OWASP2019.API3.SCSER" origId="SECURITY.WSC.SCSER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure 'SecurityManager' check in constructor of &quot;public&quot; non-&quot;final&quot; sensitive type" id="OWASP2019.API3.SCSM" origId="SECURITY.WSC.SCSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Prevent exposure of sensitive data" id="OWASP2019.API3.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Do not interrogate or modify security policy information in a web component" id="OWASP2019.API3.SPI" origId="SECURITY.ESD.SPI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare &quot;transient&quot; fields &quot;private&quot;" id="OWASP2019.API3.TFP" origId="SECURITY.ESD.TFP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="OWASP2019.API3.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Use &quot;PreparedStatements&quot; correctly" id="OWASP2019.API3.UPSC" origId="JDBC.UPSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare package-private methods as inaccessible as possible" id="OWASP2019.API3.DPAM" origId="GLOBAL.DPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Do not use static variables in servlets without synchronization" id="OWASP2019.API3.NSSS" origId="SERVLET.NSSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare a package-private method &quot;final&quot; if it is not overridden" id="OWASP2019.API3.SPAM" origId="GLOBAL.SPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare 'serialPersistentFields' &quot;private static final&quot;" id="OWASP2019.API3.SPF" origId="SERIAL.SPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Avoid &quot;transient&quot; fields in serialPersistentFields array" id="OWASP2019.API3.TSPF" origId="SECURITY.ESD.TSPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Encapsulate all redirect and forward URLs with a validation function" id="OWASP2019.API3.VRD" origId="SECURITY.IBA.VRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Properly validate server identity" id="OWASP2019.API3.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="OWASP2019.API3.ADS" origId="SECURITY.UEC.ADS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="OWASP2019.API3.AELQ" origId="SECURITY.UEC.AELQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Do not throw 'NullPointerException'" id="OWASP2019.API3.NTNPE" origId="EXCEPT.NTNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' &quot;final&quot;" id="OWASP2019.API3.PAF" origId="SECURITY.WSC.PAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare subclasses of 'Permission' and 'BasicPermission' &quot;final&quot;" id="OWASP2019.API3.PBPSF" origId="SECURITY.WSC.PBPSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Avoid using dynamically loaded classes in &quot;privileged&quot; code blocks" id="OWASP2019.API3.PDLC" origId="SECURITY.BV.PDLC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations &quot;final&quot;" id="OWASP2019.API3.PRMF" origId="SECURITY.WSC.PRMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Store sensitive data in mutable objects" id="OWASP2019.API3.SDM" origId="SECURITY.ESD.SDM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure that JavaBean classes implement 'java.io.Serializable'" id="OWASP2019.API3.SERIALIZABLE" origId="BEAN.SERIALIZABLE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Avoid using the SOAP Monitor module" id="OWASP2019.API3.SMM" origId="SECURITY.UEC.SMM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure 'SecurityManager' checks before 'Socket' transfers or retrievals" id="OWASP2019.API3.SMSTR" origId="SECURITY.WSC.SMSTR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Minimize usage of System.out and System.err in Servlets" id="OWASP2019.API3.SOP" origId="SERVLET.SOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Catch all exceptions which may be thrown within Servlet methods" id="OWASP2019.API3.CETS" origId="SERVLET.CETS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="OWASP2019.API3.FOLLOW" origId="SECURITY.WSC.FOLLOW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API3" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="OWASP2019.API3.HTTPS" origId="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Avoid using the DriverManagerDataSource class in production code" id="OWASP2019.API4.DMDS" origId="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Ensure resources are deallocated" id="OWASP2019.API4.LEAKS" origId="BD.RES.LEAKS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="OWASP2019.API4.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Close resources as early as possible" id="OWASP2019.API4.CRWD" origId="OPT.CRWD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Ensure 'wait()', 'notify()' and 'notifyAll()' are invoked on an object that is clearly synchronized in its enclosing mod scope" id="OWASP2019.API4.NSYN" origId="TRS.NSYN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Do not open or close JDBC connections in loops" id="OWASP2019.API4.ODBIL" origId="JDBC.ODBIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Do not call the 'start()' method directly on Thread class instances" id="OWASP2019.API4.ISTART" origId="TRS.ISTART" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Specify a valid 'maxlength' value for each form field in Struts validation files" id="OWASP2019.API4.MLFF" origId="STRUTS.MLFF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API4" desc="Ensure sufficient protection against multiple failed authentication attempts" id="OWASP2019.API4.PBFA" origId="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API5" desc="Keep all access control methods centralized to enforce consistency" id="OWASP2019.API5.CACM" origId="SECURITY.WSC.CACM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="OWASP2019.API7.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid debug information from Spring Security framework to logs" id="OWASP2019.API7.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="OWASP2019.API7.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="MessageDigest objects must process the data with the 'update' method" id="OWASP2019.API7.MCMDU" origId="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Call access control methods to enforce consistency" id="OWASP2019.API7.PACC" origId="SECURITY.WSC.PACC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2019.API7.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2019.API7.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Initialize KeyGenerator instances" id="OWASP2019.API7.SIKG" origId="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="OWASP2019.API7.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="OWASP2019.API7.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2019.API7.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2019.API7.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not access or modify security configuration objects" id="OWASP2019.API7.AMSC" origId="EJB.AMSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not disable CSRF protection" id="OWASP2019.API7.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not disable CSRF protection" id="OWASP2019.API7.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure arguments passed to certain methods come from predefined methods list" id="OWASP2019.API7.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="OWASP2019.API7.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that the 'scope' attribute is set to either &quot;request&quot; or &quot;session&quot; for actions and exceptions in 'struts-config.xml' files" id="OWASP2019.API7.RSS" origId="STRUTS.RSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not set or create a new SecurityManager in EJBs" id="OWASP2019.API7.SMSN" origId="EJB.SMSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2019.API7.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="OWASP2019.API7.AECB" origId="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="OWASP2019.API7.ISOS" origId="SECURITY.UEC.ISOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid using native JDBC" id="OWASP2019.API7.JDBCTEMPLATE" origId="SPRING.JDBCTEMPLATE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="OWASP2019.API7.LCA" origId="SECURITY.UEC.LCA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not catch 'NullPointerException'" id="OWASP2019.API7.NCNPE" origId="EXCEPT.NCNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not throw exception types which are too general or are unchecked exceptions" id="OWASP2019.API7.NTERR" origId="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid declaring methods to throw general or unchecked Exception types" id="OWASP2019.API7.NTX" origId="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Do not declare entity beans as remote" id="OWASP2019.API7.RR" origId="EJB.RR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="OWASP2019.API7.SDAR" origId="SECURITY.UEC.SDAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Always specify error pages in web.xml" id="OWASP2019.API7.SEP" origId="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure Session-ID Length is sufficient" id="OWASP2019.API7.SLID" origId="SECURITY.UEC.SLID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="OWASP2019.API7.SRCD" origId="SECURITY.UEC.SRCD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="OWASP2019.API7.TDAR" origId="SECURITY.UEC.TDAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="OWASP2019.API7.UDC" origId="SECURITY.UEC.UDC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Use the SSL-enabled version of classes when possible" id="OWASP2019.API7.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2019.API7.WCMT" origId="SECURITY.UEC.WCMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2019.API7.WCUTS" origId="SECURITY.UEC.WCUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WMT" origId="SECURITY.UEC.WMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="OWASP2019.API7.WSS" origId="SECURITY.UEC.WSS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2019.API7.WUTS" origId="SECURITY.UEC.WUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Avoid using custom MessageDigest implementations" id="OWASP2019.API7.ACMD" origId="SECURITY.WSC.ACMD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API7" desc="Restrict cross-origin resource sharing to secure origins" id="OWASP2019.API7.JXCORS" origId="SECURITY.WSC.JXCORS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'" id="OWASP2019.API8.AEAF" origId="SECURITY.IBA.AEAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Canonicalize data before validation" id="OWASP2019.API8.CDBV" origId="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Avoid untrusted input when logging messages with Seam Logging API" id="OWASP2019.API8.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="OWASP2019.API8.FMCD" origId="SECURITY.UEC.FMCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Specify a valid 'type' attribute for each '&lt;form-property>' element in 'struts-config.xml' files" id="OWASP2019.API8.TAFP" origId="STRUTS.TAFP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against Command injection" id="OWASP2019.API8.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Validate potentially tainted data before it is used in methods that generate code" id="OWASP2019.API8.TDCODE" origId="BD.SECURITY.TDCODE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against Jakarta Digester injection" id="OWASP2019.API8.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against Environment injection" id="OWASP2019.API8.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against File contents injection" id="OWASP2019.API8.TDFILES" origId="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against File names injection" id="OWASP2019.API8.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Exclude unsanitized user input from format strings" id="OWASP2019.API8.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against JXPath injection" id="OWASP2019.API8.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against LDAP injection" id="OWASP2019.API8.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against Library injection" id="OWASP2019.API8.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against HTTP response splitting" id="OWASP2019.API8.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against Reflection injection" id="OWASP2019.API8.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against SQL injection" id="OWASP2019.API8.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against XML data injection" id="OWASP2019.API8.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against XPath injection" id="OWASP2019.API8.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against XSS vulnerabilities" id="OWASP2019.API8.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="OWASP2019.API8.UPS" origId="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Always verify JarFile signatures" id="OWASP2019.API8.VJFS" origId="SECURITY.WSC.VJFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Avoid XPath injection when evaluating XPath queries" id="OWASP2019.API8.XPIJ" origId="SECURITY.IBA.XPIJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Avoid parsing untrusted data with XMLDecoder" id="OWASP2019.API8.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Disable XML external entity injection" id="OWASP2019.API8.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Encapsulate constructor arguments with a validation function" id="OWASP2019.API8.EDPM" origId="SECURITY.IBA.EDPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Protect against network resource injection" id="OWASP2019.API8.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Validate untrusted XML using schema or DTD before reading" id="OWASP2019.API8.XMLVAL" origId="BD.SECURITY.XMLVAL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Prevent the scripting API from executing untrusted code" id="OWASP2019.API8.ASAPI" origId="SECURITY.WSC.ASAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Avoid calling methods and constructors which do not allow you to specify a character encoding option" id="OWASP2019.API8.SEO" origId="INTER.SEO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Enable the Struts Validator plug-in in all 'struts-config.xml' files" id="OWASP2019.API8.VPI" origId="STRUTS.VPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API8" desc="Avoid using reflection methods" id="OWASP2019.API8.ARM" origId="CODSTA.BP.ARM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Avoid unused Javadoc tags" id="OWASP2019.API9.DPMT" origId="JAVADOC.DPMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Do not insert non-Javadoc comments between Javadoc comments and declarations" id="OWASP2019.API9.JNJD" origId="JAVADOC.JNJD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Avoid misformatted Javadoc tags" id="OWASP2019.API9.MISFORMAT" origId="JAVADOC.MISFORMAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Order Javadoc tags appropriately" id="OWASP2019.API9.ORDER" origId="JAVADOC.ORDER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Use the '@concurrency' Javadoc tag on &quot;synchronized&quot; methods and blocks" id="OWASP2019.API9.SMJT" origId="JAVADOC.SMJT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Specify 'RUNTIME' as the retention policy when using the '@Documented' annotation" id="OWASP2019.API9.SRRP" origId="JAVADOC.SRRP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Use the '@throws' or '@exception' Javadoc tag in methods" id="OWASP2019.API9.THROW" origId="JAVADOC.THROW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="OWASP2019.API9" desc="Provide a Javadoc comment for 'toString()' methods" id="OWASP2019.API9.TSMJT" origId="JAVADOC.TSMJT" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Ensure that certain Javadoc tags only span one line" id="OWASP2019.API9.TSOL" origId="JAVADOC.TSOL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Include an appropriate Javadoc tag in the Javadoc for JUnit test methods" id="OWASP2019.API9.UPJT" origId="JUNIT.UPJT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2019.API9" desc="Avoid using the '@return' Javadoc tag on &quot;void&quot; methods" id="OWASP2019.API9.VMCR" origId="JAVADOC.VMCR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A1" desc="Protect against File names injection" id="OWASP2021.A1.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A1" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="OWASP2021.A1.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A10" desc="Protect against network resource injection" id="OWASP2021.A10.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="OWASP2021.A2.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="OWASP2021.A2.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Do not log confidential or sensitive information" id="OWASP2021.A2.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid using hard-coded cryptographic keys" id="OWASP2021.A2.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="OWASP2021.A2.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid using insecure algorithms for cryptography" id="OWASP2021.A2.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="MessageDigest objects must process the data with the 'update' method" id="OWASP2021.A2.MCMDU" origId="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Use hash functions with a salt" id="OWASP2021.A2.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="OWASP2021.A2.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Prevent exposure of sensitive data" id="OWASP2021.A2.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Initialize KeyGenerator instances" id="OWASP2021.A2.SIKG" origId="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="OWASP2021.A2.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="OWASP2021.A2.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Ensure arguments passed to certain methods come from predefined methods list" id="OWASP2021.A2.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="OWASP2021.A2.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Properly validate server identity" id="OWASP2021.A2.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Do not hard-code IP addresses and port numbers" id="OWASP2021.A2.HCNA" origId="PORT.HCNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Safely serialize sensitive data" id="OWASP2021.A2.SSSD" origId="BD.SECURITY.SSSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Use the SSL-enabled version of classes when possible" id="OWASP2021.A2.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A2" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="OWASP2021.A2.HTTPS" origId="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Canonicalize data before validation" id="OWASP2021.A3.CDBV" origId="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against Command injection" id="OWASP2021.A3.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against Jakarta Digester injection" id="OWASP2021.A3.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against Environment injection" id="OWASP2021.A3.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against File contents injection" id="OWASP2021.A3.TDFILES" origId="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Exclude unsanitized user input from format strings" id="OWASP2021.A3.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against JXPath injection" id="OWASP2021.A3.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against LDAP injection" id="OWASP2021.A3.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against Library injection" id="OWASP2021.A3.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against HTTP response splitting" id="OWASP2021.A3.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against Reflection injection" id="OWASP2021.A3.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against SQL injection" id="OWASP2021.A3.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against XPath injection" id="OWASP2021.A3.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against XSS vulnerabilities" id="OWASP2021.A3.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="OWASP2021.A3.UPS" origId="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A3" desc="Protect against log forging" id="OWASP2021.A3.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid duplicated forms in the 'validation.xml'" id="OWASP2021.A4.DFV" origId="STRUTS.DFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid DNS lookups for decision making" id="OWASP2021.A4.DNSL" origId="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure method arguments are serializable" id="OWASP2021.A4.ONS" origId="PB.API.ONS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="OWASP2021.A4.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid storing sensitive data in plaintext in a cookie" id="OWASP2021.A4.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure Plugins are added in the 'struts-config.xml'" id="OWASP2021.A4.PLUGIN" origId="STRUTS.PLUGIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2021.A4.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="OWASP2021.A4.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Do not store non-serializable objects as HttpSession attributes" id="OWASP2021.A4.SNSO" origId="SERIAL.SNSO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Do not store untrusted data in HTTP session" id="OWASP2021.A4.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="OWASP2021.A4.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="OWASP2021.A4.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="OWASP2021.A4.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure validators are enabled in the 'struts-config.xml'" id="OWASP2021.A4.EV" origId="STRUTS.EV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="OWASP2021.A4.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A4" desc="Ensure sufficient protection against multiple failed authentication attempts" id="OWASP2021.A4.PBFA" origId="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid using the DriverManagerDataSource class in production code" id="OWASP2021.A5.DMDS" origId="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid debug information from Spring Security framework to logs" id="OWASP2021.A5.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="OWASP2021.A5.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not disable CSRF protection" id="OWASP2021.A5.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not disable CSRF protection" id="OWASP2021.A5.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Disable XML external entity injection" id="OWASP2021.A5.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Password information should not be included in properties file in plaintext" id="OWASP2021.A5.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="OWASP2021.A5.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="OWASP2021.A5.AECB" origId="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not catch exception types which are too general or are unchecked exceptions" id="OWASP2021.A5.NCE" origId="CODSTA.EPC.NCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not catch 'NullPointerException'" id="OWASP2021.A5.NCNPE" origId="EXCEPT.NCNPE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not throw exception types which are too general or are unchecked exceptions" id="OWASP2021.A5.NTERR" origId="EXCEPT.NTERR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Avoid declaring methods to throw general or unchecked Exception types" id="OWASP2021.A5.NTX" origId="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Do not declare entity beans as remote" id="OWASP2021.A5.RR" origId="EJB.RR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Always specify error pages in web.xml" id="OWASP2021.A5.SEP" origId="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="OWASP2021.A5" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="OWASP2021.A5.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Ensure Session-ID Length is sufficient" id="OWASP2021.A5.SLID" origId="SECURITY.UEC.SLID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A5" desc="Restrict cross-origin resource sharing to secure origins" id="OWASP2021.A5.JXCORS" origId="SECURITY.WSC.JXCORS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="OWASP2021.A7.ISL" origId="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Ensure proper session expiration" id="OWASP2021.A7.RUIM" origId="SECURITY.IBA.RUIM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="OWASP2021.A7.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Protect against using unprotected credentials" id="OWASP2021.A7.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="OWASP2021.A7.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A7" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="OWASP2021.A7.HGRSI" origId="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Always specify absolute paths to execute commands" id="OWASP2021.A8.PBRTE" origId="SECURITY.WSC.PBRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Always verify JarFile signatures" id="OWASP2021.A8.VJFS" origId="SECURITY.WSC.VJFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Avoid parsing untrusted data with XMLDecoder" id="OWASP2021.A8.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Disable LDAP deserialization" id="OWASP2021.A8.SC" origId="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="OWASP2021.A8.DUID" origId="SERIAL.DUID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes" id="OWASP2021.A8.MASP" origId="PB.API.MASP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="OWASP2021.A8.RRSC" origId="SERIAL.RRSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="OWASP2021.A8.RWAF" origId="SERIAL.RWAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents" id="OWASP2021.A8.SCBNP" origId="SERIAL.SCBNP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Do not declare the 'readObject()' method as &quot;synchronized&quot;" id="OWASP2021.A8.SROS" origId="SERIAL.SROS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Validate objects before deserialization" id="OWASP2021.A8.VOBD" origId="SERIAL.VOBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A8" desc="Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes" id="OWASP2021.A8.OROM" origId="SECURITY.EAB.OROM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A9" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="OWASP2021.A9.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OWASP2021.A9" desc="Ensure all sensitive method invocations are logged" id="OWASP2021.A9.ENFL" origId="SECURITY.BV.ENFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Unrestricted lock resource" id="PB.CLOSE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Ensure that non-&quot;void&quot; methods have a return value other than empty arrays and &quot;null&quot;" id="PB.EAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Ensure that keys used in comparison operations are immutable" id="PB.IKICO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Ensure that exactly one type has the same name as the file name" id="PB.OCSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Place &quot;default&quot; as the last case of the &quot;switch&quot; statement" id="PB.PDCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Provide &quot;default:&quot; for each &quot;switch&quot; statement" id="PB.PDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Include a 'case' statement for each constant of an 'enum' type in 'switch' statements" id="PB.NAECS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB" desc="Ensure that the type that has the same name as the file is declared &quot;public&quot;" id="PB.PCSF" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Ensure that the types passed to &quot;Collection&quot; and &quot;Map&quot; methods match the types in those data structures" id="PB.API.CMMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not call the 'next' method from the 'hasNext' method of an Iterator" id="PB.API.HNCN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not use &quot;URL&quot; objects in &quot;Collections&quot; or &quot;Maps&quot;" id="PB.API.IUMS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Ensure method arguments are serializable" id="PB.API.ONS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not call 'setSize()' in 'ComponentListener.componentResized()'" id="PB.API.DNCSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not create an empty JarFile entry or an empty ZipFile entry" id="PB.API.EJF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid calling 'equals(null)'" id="PB.API.EQNL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Ensure that all types which are used as keys in Sets and Maps override the 'equals()' and 'hashCode()' methods" id="PB.API.KOEH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not overload the 'finalize()' method" id="PB.API.OF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid using &quot;.&quot; as a regular expression in 'String.replaceAll()' and 'String.replaceFirst()'" id="PB.API.REP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not pass a 'char' to the 'StringBuffer(int)' constructor" id="PB.API.SBCC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="PB.API.UNI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid using the 'equals()' and 'hashCode()' methods of &quot;java.net.URL&quot;" id="PB.API.URL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Update values which may be using to compare with vendor properties" id="PB.API.VENDOR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid extending certain classes (custom rule)" id="PB.API.AECC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid 'put, 'putAll' and 'get' methods of 'java.util.Properties' objects" id="PB.API.APPG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid using certain packages or types" id="PB.API.APT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Add the &quot;@Deprecated&quot; annotation to the declarations of deprecated members" id="PB.API.DANNOT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not use deprecated APIs" id="PB.API.DPRAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not extend 'java.util.HashMap' or 'java.util.Hashtable'" id="PB.API.EHM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes" id="PB.API.MASP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid using objects with dangerous implementations of 'equals()' or 'hashCode()' as keys in hashed data structures" id="PB.API.MOHK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not define direct or indirect subclasses of 'Error' and 'Throwable'" id="PB.API.NDC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Ensure the correct number of arguments for varargs methods with format strings" id="PB.API.VAFS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not extend &quot;Collection&quot; and &quot;Map&quot; classes" id="PB.API.ECMC" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="PB.CUB.ARCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not exit &quot;finally&quot; blocks abruptly" id="PB.CUB.ATSF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use the &quot;+&quot; string concatenation operator to concatenate numbers; use it only to add numbers" id="PB.CUB.DCP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid erroneously placing statements outside blocks" id="PB.CUB.EBI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid overloading varargs methods" id="PB.CUB.OVAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use &quot;char&quot; arrays in &quot;String&quot; concatenations" id="PB.CUB.SAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid Time-of-check Time-of-use (TOCTOU) Race Condition" id="PB.CUB.TOCTOU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid invoking 'toString()' on array variables" id="PB.CUB.TOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use '==' or '!=' to compare objects" id="PB.CUB.UEIC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid dangling &quot;else&quot; statements" id="PB.CUB.ADE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid using 'iterator()' with PriorityQueue and PriorityBlockingQueue" id="PB.CUB.AIPQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid using multiple '!' or '~' unary operators" id="PB.CUB.AMCO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid passing arrays as arguments to methods that take non-array parameters" id="PB.CUB.APAM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid confusing assignments to constructor arguments" id="PB.CUB.AWP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid improper concatenation of characters with numbers" id="PB.CUB.CNVC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid usage of File.canWrite() method because it may returns true even if directory is not writable" id="PB.CUB.CWRITE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid errors in overriding methods of &quot;java.lang.Object&quot;" id="PB.CUB.EOOM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not assign loop control variables in the body of a &quot;for&quot; loop" id="PB.CUB.FLVA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Ensure overriding methods are not unintended covariants due to parameter type differences" id="PB.CUB.IMC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Ensure &quot;static&quot; &quot;final&quot; fields are immutable" id="PB.CUB.IMM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Inspect &quot;private&quot; &quot;static&quot; fields which may have mistakenly been declared &quot;static&quot;" id="PB.CUB.ISF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Use the method name 'main()' only for the entry point method" id="PB.CUB.MAIN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not assume that a Java char fully represents a Unicode code point" id="PB.CUB.NCUCP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Ensure overloaded methods in superclass are overridden when overriding a method in subclass" id="PB.CUB.OSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid using &quot;public static final&quot; array fields" id="PB.CUB.PSFA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid referencing mutable fields" id="PB.CUB.RMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use a &quot;switch&quot; statement with a bad &quot;case&quot;" id="PB.CUB.SBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Specify @Retention for annotation type declarations" id="PB.CUB.SRAD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Parenthesize complex expressions in 'print()' or 'println()' statements" id="PB.CUB.STRCC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid type variable parameters when calling overloaded methods" id="PB.CUB.TVOM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not call non-&quot;final&quot;, non-&quot;static&quot; and non-&quot;private&quot; methods from constructors" id="PB.CUB.CTOR" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid suspicious octal escapes" id="PB.CUB.OE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not put code other than logging code inside logging blocks" id="PB.CUB.CILB" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Do not call 'equals()' methods that always return false" id="PB.LOGIC.EQUS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid calling 'equals()' with same object" id="PB.LOGIC.ESO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid infinite recursive method calls" id="PB.LOGIC.FLRC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid infinite loops" id="PB.LOGIC.AIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid off-by-one errors in loop conditions" id="PB.LOGIC.AOBO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Do not discard the result of a call to &quot;readLine()&quot; after checking that the return value is non-null" id="PB.LOGIC.DJNCR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Do not increment or decrement on the same variable over multiple nested &quot;for&quot; loop statements" id="PB.LOGIC.JI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Ensure that the objects used within a loop's condition are properly accessed within the loop's body" id="PB.LOGIC.OAMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid using the wrong index variable to access an array or List element" id="PB.LOGIC.AMOI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid loop variables which are not used in the condition of the loop" id="PB.LOGIC.AULV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Do not check whether the result of &quot;String.indexOf()&quot; is positive or non-positive" id="PB.LOGIC.CPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Check the return value of methods which read or skip input" id="PB.LOGIC.CRRV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Use 'getClass()' or &quot;instanceof&quot; within 'equals()' and 'compareTo()' method implementations" id="PB.LOGIC.EQLC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid bugs in the usage of loop variables" id="PB.LOGIC.INDEX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Ensure that the logging level checked matches the level of the called logging method" id="PB.LOGIC.LLM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid out of range comparisons" id="PB.LOGIC.OOR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Ensure get/set methods are accessing the correct variables" id="PB.LOGIC.SG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Make sure that methods are invoked on the correct object" id="PB.LOGIC.ROM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid calculations which result in overflow or NaN" id="PB.NUM.ICO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not assign the result of an integer division to a floating point variable" id="PB.NUM.IDCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid comparisons to Double.NaN or Float.NaN" id="PB.NUM.NAN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not initialize array dimensions with negative numbers" id="PB.NUM.NIA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid implicit casts from integer data types to floating point data types" id="PB.NUM.AIC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not pass floating point values to the 'BigDecimal' constructor" id="PB.NUM.BBDCC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="PB.NUM.BSA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not cast primitive data types to lower precision" id="PB.NUM.CLP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid using compound assignment operators in cases which may cause overflow" id="PB.NUM.CACO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Possible integer overflow in a compare or compareTo method" id="PB.NUM.CMP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not compare floating point types" id="PB.NUM.DCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not use floating point variables as loop indices" id="PB.NUM.FPLI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid casting the result of an integer multiplication to &quot;long&quot;" id="PB.NUM.IMOF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Use unsigned right shift instead of division when overflow is possible" id="PB.NUM.IOF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" id="PB.NUM.UBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid passing integer values to 'Math.round()'" id="PB.NUM.UCM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Provide methods to read and write little-endian data" id="PB.NUM.PMRWLED" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Do not add a collection to itself" id="PB.RE.ACTI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Check whether or not &quot;readLine()&quot; returned null before dereferencing the return value" id="PB.RE.IDRL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid using methods add() from JLayer class" id="PB.RE.JLAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid dereferencing null objects" id="PB.RE.PNPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="When used HttpURLConnection always check return value from the getResponseCode() methods before call getInputStream()" id="PB.RE.RCODE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid modifying fixed-size Collections" id="PB.RE.AMFSL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid possible ArrayStoreExceptions" id="PB.RE.ASE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Always check parameters before use in array access" id="PB.RE.CAI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Check the return value of calls to 'String.indexOf()' before passing this value to other &quot;String&quot; methods" id="PB.RE.CIOR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Ensure 'Iterator.next()' method implementations throw 'NoSuchElementException'" id="PB.RE.CTNSE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Use the &quot;fromIndex&quot; argument of 'indexOf()' when necessary" id="PB.RE.IOSS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Do not call 'String.equals(constant)' or 'String.equalsIgnoreCase(constant)'" id="PB.RE.ISEM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Ensure that dereferenced variables match variables which were previously checked for &quot;null&quot;" id="PB.RE.NCMD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid calling the 'add()' method of a Queue" id="PB.RE.AQA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Make sure the IllegalArgumentException message matches the code logic" id="PB.RE.IIAE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.RE" desc="Do not define direct or indirect subclasses of 'RuntimeException'" id="PB.RE.NXRE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid methods returning &quot;null&quot; value" id="PB.RE.VRNULL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid assignment within a condition" id="PB.TYPO.ASI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Ensure that arguments passed to Java wrapper classes do not contain typos" id="PB.TYPO.WT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid unnecessary self computation" id="PB.TYPO.BW" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Ensure &quot;switch&quot; statements do not contain typos" id="PB.TYPO.TLS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Do not use octal integer literals" id="PB.TYPO.UOL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Ensure that the correct &quot;super&quot; method is invoked" id="PB.TYPO.CSI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid assigning same variable in the fall-through switch case" id="PB.TYPO.DAV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid control statements with empty bodies" id="PB.TYPO.EB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Ensure the overriding method name does not have a typo" id="PB.TYPO.IMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Do not give methods and fields the same name as the enclosing class or each other" id="PB.TYPO.NAMING" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid having more than one &quot;getter&quot; or &quot;setter&quot; method for the same field" id="PB.TYPO.RSK" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid conditional expressions that always evaluate to a constant value" id="PB.USC.CC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid classes with no accessible members" id="PB.USC.NACC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid unreachable &quot;else if&quot; and &quot;else&quot; cases" id="PB.USC.UIF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid using &quot;private&quot; fields which are never given a meaningful value" id="PB.USC.FCBS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid increment and decrement statements which have no effect" id="PB.USC.OI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Do not use the unary operator '+'" id="PB.USC.UNARY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid empty statements" id="PB.USC.AES" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid empty classes" id="PB.USC.EC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.USC" desc="Do not define empty &quot;public&quot; constructors in classes with no other constructors" id="PB.USC.EPC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Ensure method and constructor return values are used" id="PB.USC.NASSIG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Do not catch exceptions only to rethrow them" id="PB.USC.RTE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid self assignments/initializations to fields and/or local variables" id="PB.USC.SAFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against Command injection" id="PCIDSS32.651.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against Jakarta Digester injection" id="PCIDSS32.651.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against Environment injection" id="PCIDSS32.651.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Exclude unsanitized user input from format strings" id="PCIDSS32.651.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against JXPath injection" id="PCIDSS32.651.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against LDAP injection" id="PCIDSS32.651.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against Reflection injection" id="PCIDSS32.651.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against SQL injection" id="PCIDSS32.651.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against XML data injection" id="PCIDSS32.651.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against XPath injection" id="PCIDSS32.651.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="PCIDSS32.651.UPS" origId="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Avoid XPath injection when evaluating XPath queries" id="PCIDSS32.651.XPIJ" origId="SECURITY.IBA.XPIJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against log forging" id="PCIDSS32.651.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.651" desc="Protect against network resource injection" id="PCIDSS32.651.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid DNS lookups for decision making" id="PCIDSS32.6510.DNSL" origId="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="PCIDSS32.6510.ISL" origId="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="PCIDSS32.6510.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="PCIDSS32.6510.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Ensure proper session expiration" id="PCIDSS32.6510.RUIM" origId="SECURITY.IBA.RUIM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="PCIDSS32.6510.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="PCIDSS32.6510.UOSC" origId="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="PCIDSS32.6510.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="PCIDSS32.6510.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="PCIDSS32.6510.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Protect against using unprotected credentials" id="PCIDSS32.6510.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="PCIDSS32.6510.PTPT" origId="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid using plain text passwords in Axis2 configuration files" id="PCIDSS32.6510.UTAX" origId="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.6510" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="PCIDSS32.6510.HGRSI" origId="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="PCIDSS32.653.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="PCIDSS32.653.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using insecure algorithms for cryptography" id="PCIDSS32.653.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Use hash functions with a salt" id="PCIDSS32.653.MDSALT" origId="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid storing sensitive data in plaintext in a cookie" id="PCIDSS32.653.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="PCIDSS32.653.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="PCIDSS32.653.SRD" origId="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="PCIDSS32.653.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using cryptographic keys which are too short" id="PCIDSS32.653.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Password information should not be included in properties file in plaintext" id="PCIDSS32.653.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.653" desc="Avoid using custom MessageDigest implementations" id="PCIDSS32.653.ACMD" origId="SECURITY.WSC.ACMD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="Do not log confidential or sensitive information" id="PCIDSS32.654.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="Avoid using hard-coded cryptographic keys" id="PCIDSS32.654.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="MessageDigest objects must process the data with the 'update' method" id="PCIDSS32.654.MCMDU" origId="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="Initialize KeyGenerator instances" id="PCIDSS32.654.SIKG" origId="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="Use the SSL-enabled version of classes when possible" id="PCIDSS32.654.USC" origId="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.654" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="PCIDSS32.654.HTTPS" origId="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="PCIDSS32.655.ARCF" origId="PB.CUB.ARCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="PCIDSS32.655.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Prevent exposure of sensitive data" id="PCIDSS32.655.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Consistently check the returned value of non-void methods" id="PCIDSS32.655.CHECKRET" origId="BD.PB.CHECKRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="PCIDSS32.655.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="PCIDSS32.655.ACPST" origId="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="PCIDSS32.655.AECB" origId="PB.TYPO.AECB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Check the return value of methods which read or skip input" id="PCIDSS32.655.CRRV" origId="PB.LOGIC.CRRV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Always specify error pages in web.xml" id="PCIDSS32.655.SEP" origId="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="2;" cat="PCIDSS32.655" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="PCIDSS32.655.SIO" origId="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.655" desc="Catch all exceptions which may be thrown within Servlet methods" id="PCIDSS32.655.CETS" origId="SERVLET.CETS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.657" desc="Canonicalize data before validation" id="PCIDSS32.657.CDBV" origId="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.657" desc="Protect against HTTP response splitting" id="PCIDSS32.657.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.657" desc="Protect against XSS vulnerabilities" id="PCIDSS32.657.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Avoid using &quot;SELECT *&quot; in SQL queries" id="PCIDSS32.658.AUSS" origId="SECURITY.IBA.AUSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Keep all authentication methods centralized to enforce consistency" id="PCIDSS32.658.CAM" origId="SECURITY.WSC.CAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="PCIDSS32.658.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Avoid EJB 3 methods without security annotations" id="PCIDSS32.658.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Ensure that an appropriate security manager is set" id="PCIDSS32.658.SSM" origId="SECURITY.WSC.SSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Protect against File names injection" id="PCIDSS32.658.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="PCIDSS32.658.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="PCIDSS32.658.DPANY" origId="EJB.DPANY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="PCIDSS32.658.LCA" origId="SECURITY.UEC.LCA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="PCIDSS32.658.SRCD" origId="SECURITY.UEC.SRCD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PCIDSS32.658" desc="Ensure sufficient protection against multiple failed authentication attempts" id="PCIDSS32.658.PBFA" origId="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.659" desc="Encapsulate arguments of dangerous methods with a validation method" id="PCIDSS32.659.EACM" origId="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="PCIDSS32.659" desc="Validate all dangerous data" id="PCIDSS32.659.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not use the non-portable 'System.getenv()' method" id="PORT.ENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PORT" desc="Avoid calling 'Thread.setPriority()'" id="PORT.CTSP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not hard code an absolute pathname when calling a constructor from the 'File' class" id="PORT.DNHCP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not use &quot;Runtime.exec()&quot;" id="PORT.EXEC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not hard-code IP addresses and port numbers" id="PORT.HCNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not hard code '\n' or '\r' as a line separator" id="PORT.LNSP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not use user-defined &quot;native&quot; methods" id="PORT.NATV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Do not use &quot;java.awt.peer.*&quot; interfaces directly" id="PORT.PEER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PORT" desc="Use &quot;File.pathSeparator&quot; or &quot;File.pathSeparatorChar&quot; instead of the corresponding literals" id="PORT.PSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid duplicated property names" id="PROPS.DUPN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid empty property names" id="PROPS.EMN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid hard-coded line separators in property values" id="PROPS.HCLS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misusing arguments in property values" id="PROPS.IARG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid incomplete property entries" id="PROPS.ICK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid unmatched property entries in resources with different locales" id="PROPS.MENTRY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Password information should not be included in properties file in plaintext" id="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid adding extra white spaces to the end of property values" id="PROPS.BSPV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid duplicated property values" id="PROPS.DUPV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid empty property values" id="PROPS.EMV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Always use the '=' operator" id="PROPS.EQOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Follow the limit for number of property entries" id="PROPS.FM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misusing the line continuation character '\'" id="PROPS.IVCC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid splitting property names into multiple lines" id="PROPS.MLN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Use a naming convention for property names" id="PROPS.NAME" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misspelling words in comments and property values" id="PROPS.SPELL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Ensure that property entries are localized correctly" id="PROPS.TENTRY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Do not set custom security managers outside of the 'main' method" id="SECURITY.BV.DSSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Do not access or set System properties" id="SECURITY.BV.SYSP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Do not access the class loader in a web component" id="SECURITY.BV.ACL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Use &quot;read-only&quot; AccessMode for Castor queries" id="SECURITY.BV.CQRO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Ensure all sensitive method invocations are logged" id="SECURITY.BV.ENFL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Do not call 'Socket.setSocketImplFactory()' or 'URL.setURLStreamHandlerFactory()' in a web component" id="SECURITY.BV.NSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Wrap &quot;privileged&quot; method invocations in &quot;final&quot; methods" id="SECURITY.BV.PCFM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Wrap &quot;privileged&quot; method invocations in &quot;private&quot; methods" id="SECURITY.BV.PCPM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Avoid using dynamically loaded classes in &quot;privileged&quot; code blocks" id="SECURITY.BV.PDLC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Inspect usage of 'Date', 'Time' objects and 'System.currentTimeMillis()' method invocations" id="SECURITY.BV.ADT" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.BV" desc="Inspect usage of 'getName()' from 'java.lang.Class' object" id="SECURITY.BV.AUG" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.DRC" desc="Do not use threads in web components" id="SECURITY.DRC.THR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not use AWT classes in Web components" id="SECURITY.EAB.AWT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not compare Class objects by name" id="SECURITY.EAB.CMP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not stop the JVM in a web component" id="SECURITY.EAB.JVM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not pass byte arrays to ObjectOutputStream in the 'writeObject()' method" id="SECURITY.EAB.CBA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Enforce returning a defensive copy in 'clone()' methods" id="SECURITY.EAB.CPCL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not pass user-given mutable objects directly to certain types" id="SECURITY.EAB.MPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not declare &quot;static&quot; fields in web components" id="SECURITY.EAB.SF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not change the input streams of 'java.lang.System' in a web component" id="SECURITY.EAB.SIS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Do not store user-given mutable objects directly into variables" id="SECURITY.EAB.SMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Inspect 'static' fields which may have intended to be declared 'static final'" id="SECURITY.EAB.SPFF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Avoid calling specified methods from web components and EJBs" id="SECURITY.EAB.ACWC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Limit the number of &quot;AccessController.doPrivileged&quot; calls per class" id="SECURITY.EAB.LDP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="SECURITY.EAB.PCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.EAB" desc="Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes" id="SECURITY.EAB.OROM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Do not log confidential or sensitive information" id="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Avoid storing sensitive data in plaintext in a cookie" id="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Inspect instance fields of serializable objects to make sure they will not expose sensitive information" id="SECURITY.ESD.SIF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Do not interrogate or modify security policy information in a web component" id="SECURITY.ESD.SPI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Declare &quot;transient&quot; fields &quot;private&quot;" id="SECURITY.ESD.TFP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Avoid &quot;transient&quot; fields in serialPersistentFields array" id="SECURITY.ESD.TSPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Clear sensitive data after use" id="SECURITY.ESD.CSD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Avoid methods that might expose internal representations by returning arrays or other mutable fields" id="SECURITY.ESD.RA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Store sensitive data in mutable objects" id="SECURITY.ESD.SDM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="1;" cat="SECURITY.ESD" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="SECURITY.ESD.SIO" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Do not expose data with a 'FileNotFound' exception" id="SECURITY.ESD.SNFD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.ESD" desc="Avoid writing to Consoles" id="SECURITY.ESD.ACW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'" id="SECURITY.IBA.AEAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Avoid using &quot;SELECT *&quot; in SQL queries" id="SECURITY.IBA.AUSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Canonicalize data before validation" id="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Always call 'super.validate()' from validation methods in 'ActionForm' classes" id="SECURITY.IBA.CSVFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Ensure proper session expiration" id="SECURITY.IBA.RUIM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="SECURITY.IBA.UPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Avoid XPath injection when evaluating XPath queries" id="SECURITY.IBA.XPIJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Avoid parsing untrusted data with XMLDecoder" id="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Disable XML external entity injection" id="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Encapsulate constructor arguments with a validation function" id="SECURITY.IBA.EDPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Disable LDAP deserialization" id="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Encapsulate all redirect and forward URLs with a validation function" id="SECURITY.IBA.VRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Avoid temporary files" id="SECURITY.IBA.ATF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.IBA" desc="Use wrapper methods to secure native methods" id="SECURITY.IBA.NATIW" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="SECURITY.UEC.FMCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="SECURITY.UEC.WELC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="SECURITY.UEC.ADS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="SECURITY.UEC.AELQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="SECURITY.UEC.DSL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="SECURITY.UEC.EDAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="SECURITY.UEC.ISOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="SECURITY.UEC.LCA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="SECURITY.UEC.PTPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="SECURITY.UEC.RAJ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="SECURITY.UEC.SDAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Always specify error pages in web.xml" id="SECURITY.UEC.SEP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure Session-ID Length is sufficient" id="SECURITY.UEC.SLID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid using the SOAP Monitor module" id="SECURITY.UEC.SMM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="SECURITY.UEC.SRCD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="SECURITY.UEC.TDAR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="SECURITY.UEC.UDC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid using plain text passwords in Axis2 configuration files" id="SECURITY.UEC.UTAX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="SECURITY.UEC.WCUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="SECURITY.UEC.WSS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="SECURITY.UEC.WUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="SECURITY.UEC.HTTPS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.UEC" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="SECURITY.UEC.REST" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.UEHL" desc="Avoid untrusted input when logging messages with Seam Logging API" id="SECURITY.UEHL.DCEMSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.UEHL" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid hard-coding the arguments to certain methods" id="SECURITY.WSC.AHCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Process XML and HTML with a library instead of raw text" id="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Keep all access control methods centralized to enforce consistency" id="SECURITY.WSC.CACM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Keep all authentication methods centralized to enforce consistency" id="SECURITY.WSC.CAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Always clone array parameters which are stored to fields" id="SECURITY.WSC.CAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using the DriverManagerDataSource class in production code" id="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid DNS lookups for decision making" id="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid debug information from Spring Security framework to logs" id="SECURITY.WSC.EWSSEC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure that Secure Processing is used" id="SECURITY.WSC.FXMLP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using hard-coded cryptographic keys" id="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using insecure algorithms for cryptography" id="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="MessageDigest objects must process the data with the 'update' method" id="SECURITY.WSC.MCMDU" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use hash functions with a salt" id="SECURITY.WSC.MDSALT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Call authentication methods to enforce consistency" id="SECURITY.WSC.PAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Call access control methods to enforce consistency" id="SECURITY.WSC.PACC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Always specify absolute paths to execute commands" id="SECURITY.WSC.PBRTE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Enforce 'SecurityManager' checks before setting or getting fields" id="SECURITY.WSC.SCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Enforce 'SecurityManager' checks in methods of 'Cloneable' classes" id="SECURITY.WSC.SCLONE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Enforce 'SecurityManager' checks in methods of 'Serializable' classes" id="SECURITY.WSC.SCSER" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure 'SecurityManager' check in constructor of &quot;public&quot; non-&quot;final&quot; sensitive type" id="SECURITY.WSC.SCSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Initialize KeyGenerator instances" id="SECURITY.WSC.SIKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="SECURITY.WSC.SRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure that an appropriate security manager is set" id="SECURITY.WSC.SSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not call 'System.setProperty()' in a web component" id="SECURITY.WSC.SSP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="SECURITY.WSC.UOSC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Always verify JarFile signatures" id="SECURITY.WSC.VJFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Inspect usage of scripting API" id="SECURITY.WSC.ZOIS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using cryptographic keys which are too short" id="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure arguments passed to certain methods come from predefined methods list" id="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Mark cookies as HttpOnly" id="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid 'main()' methods because they may allow unauthorized access to classes" id="SECURITY.WSC.UMAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Properly validate server identity" id="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using anonymous &quot;privileged&quot; classes when invoking &quot;AccessController.doPrivileged()&quot;" id="SECURITY.WSC.ACDP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="SECURITY.WSC.ACPST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid constructors and overriding methods which are more accessible than those of their super classes" id="SECURITY.WSC.AMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Inspect usage of standard API calls that bypass security" id="SECURITY.WSC.APIBS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Prevent the scripting API from executing untrusted code" id="SECURITY.WSC.ASAPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="0;" cat="SECURITY.WSC" desc="Do not use inner classes" id="SECURITY.WSC.AUIC" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="SECURITY.WSC.BP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Prevent external processes from blocking on output or error streams" id="SECURITY.WSC.BUSSB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Only call &quot;final&quot; methods from specified code blocks in non-&quot;final&quot; classes" id="SECURITY.WSC.CFM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Only &quot;clone()&quot; instances of &quot;final&quot; classes" id="SECURITY.WSC.CIFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not define custom class loaders" id="SECURITY.WSC.CL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not pass mutable objects to 'ObjectOutputStream' in the 'writeObject()' method" id="SECURITY.WSC.CMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not define custom SecurityManager's" id="SECURITY.WSC.DCSM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="SECURITY.WSC.HTTPRHA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Make all member classes &quot;private&quot;" id="SECURITY.WSC.INNER" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' &quot;final&quot;" id="SECURITY.WSC.PAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Declare subclasses of 'Permission' and 'BasicPermission' &quot;final&quot;" id="SECURITY.WSC.PBPSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package" id="SECURITY.WSC.PPKG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations &quot;final&quot;" id="SECURITY.WSC.PRMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not declare fields as &quot;public&quot; &quot;static&quot; &quot;final&quot; 'Collection' or 'Map' objects" id="SECURITY.WSC.PSFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="8;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" id="SECURITY.WSC.SL" sev="3" total="8"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure 'SecurityManager' checks before 'Socket' transfers or retrievals" id="SECURITY.WSC.SMSTR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not use sockets in web components" id="SECURITY.WSC.SS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use library methods for string replacements of special characters in HTML and XML" id="SECURITY.WSC.STREP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use the SSL-enabled version of classes when possible" id="SECURITY.WSC.USC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Use wrapper methods instead of calling dangerous or problematic methods directly (custom rule)" id="SECURITY.WSC.UWM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using custom MessageDigest implementations" id="SECURITY.WSC.ACMD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Do not override any 'ClassLoader' method except 'findClass()'" id="SECURITY.WSC.CLO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Make your 'clone()' method &quot;final&quot; for security" id="SECURITY.WSC.CLONE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;" authUrg="0;" cat="SECURITY.WSC" desc="Make immutable classes final" id="SECURITY.WSC.FIMU" sev="4" total="10"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="SECURITY.WSC.HGRSI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="0;" cat="SECURITY.WSC" desc="Defend against partially initialized instances of non-final classes" id="SECURITY.WSC.INIVF" sev="4" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Restrict cross-origin resource sharing to secure origins" id="SECURITY.WSC.JXCORS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Validate shortcut target paths before use" id="SECURITY.WSC.LNK" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Inspect instantiations of 'ClassLoader' objects" id="SECURITY.WSC.CLI" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="0;" cat="SECURITY.WSC" desc="Make your classes nondeserializeable" id="SECURITY.WSC.DSER" sev="5" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="SECURITY.WSC.FOLLOW" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Avoid setting the write or execute file permissions to unintended users" id="SECURITY.WSC.IDP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;" authUrg="3;" cat="SECURITY.WSC" desc="Make your classes noncloneable" id="SECURITY.WSC.MCNC" sev="5" total="10"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Ensure sufficient protection against multiple failed authentication attempts" id="SECURITY.WSC.PBFA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SECURITY.WSC" desc="Inspect 'Random' objects or 'Math.random()' methods that could indicate areas where malicious code has been placed" id="SECURITY.WSC.RDM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="7;" authUrg="0;" cat="SECURITY.WSC" desc="Make your classes nonserializeable" id="SECURITY.WSC.SER" sev="5" total="7"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid classes that implement 'Externalizable' but do not define a no-argument constructor" id="SERIAL.ENNAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure the return type of 'readResolve()' and 'writeReplace()' methods are 'java.lang.Object'" id="SERIAL.MRWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure outer class is serializable if its inner class is serializable" id="SERIAL.OC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure that the 'readObject()' and 'writeObject()' methods have the correct signature" id="SERIAL.ROWO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid serializable classes that extend a superclass without a zero-argument constructor" id="SERIAL.SNNAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Do not store non-serializable objects as HttpSession attributes" id="SERIAL.SNSO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure Serializable classes are correct" id="SERIAL.NSFSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Declare 'serialPersistentFields' &quot;private static final&quot;" id="SERIAL.SPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="SERIAL.DUID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Implement Externalizable instead of Serializable" id="SERIAL.EZEE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid declaring &quot;transient&quot; fields in non-serializable classes" id="SERIAL.FT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid re-initializing fields in the 'readExternal()' method of 'Externalizable' classes" id="SERIAL.IRX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="SERIAL.RRSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="SERIAL.RWAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents" id="SERIAL.SCBNP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Do not declare SerialVersionUID in classes that do not implement Serializable" id="SERIAL.SRLZ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Do not declare the 'readObject()' method as &quot;synchronized&quot;" id="SERIAL.SROS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Validate objects before deserialization" id="SERIAL.VOBD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not define instance fields in Servlet classes" id="SERVLET.IF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Declare a &quot;public&quot; constructor that takes no parameters" id="SERVLET.MDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Avoid multiple '&lt;servlet>' elements with the same '&lt;servlet-name>' in a  'web.xml' file" id="SERVLET.DSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not use static variables in servlets without synchronization" id="SERVLET.NSSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Ensure that all servlets have a corresponding mapping in 'web.xml' files" id="SERVLET.SCM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Ensure that all '&lt;servlet>' elements contain a single non-empty '&lt;servlet-name>' element in 'web.xml' files" id="SERVLET.SSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Minimize synchronization in Servlets" id="SERVLET.SYN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Use a Context Object to manage HTTP request parameters" id="SERVLET.UCO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not use JDBC code in Servlet classes" id="SERVLET.AJDBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not use 'java.beans.Beans.instantiate()'" id="SERVLET.BINS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Avoid using collections without size limit in servlets" id="SERVLET.LML" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Follow a limit for the number of mappings for each servlet in a 'web.xml' file" id="SERVLET.NMS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Specify an appropriate schema or DTD file for 'web.xml' files" id="SERVLET.SDTD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Minimize usage of System.out and System.err in Servlets" id="SERVLET.SOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not use 'SingleThreadModel' in Servlet classes" id="SERVLET.STM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Catch all exceptions which may be thrown within Servlet methods" id="SERVLET.CETS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERVLET" desc="Do not create static variables in a servlet" id="SERVLET.NSIS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SPRING" desc="Follow configuration class conventions" id="SPRING.ATCFG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SPRING" desc="Do not disable CSRF protection" id="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Do not disable CSRF protection" id="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SPRING" desc="Ensure that methods annotated with @RequestMapping specify the HTTP request method they call" id="SPRING.REQMAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Avoid constructor injection" id="SPRING.ACARG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Use ''description'' tag in configuration file headers" id="SPRING.DESC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Avoid using ''name'' and ''id'' simultaneously" id="SPRING.IDNAME" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Avoid using relative ''../'' path reference to parent files" id="SPRING.IMPORTSRES" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SPRING" desc="Avoid using native JDBC" id="SPRING.JDBCTEMPLATE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Use ''local'' property attribute in local scope" id="SPRING.LOCAL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Follow convention for bean properties" id="SPRING.PROPLIMIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Use naming conventions for spring beans" id="SPRING.SPRNAM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Use ids as bean identifiers" id="SPRING.USEID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SPRING" desc="Prefer ''type'' over ''index'' for constructor argument matching" id="SPRING.PREFTYPE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid accessing a database from Action Classes" id="STRUTS.ACDA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify an @input attribute if '&lt;action>' element has validation in 'struts-config.xml' files" id="STRUTS.AIV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a '&lt;form-bean>' for each named '&lt;action>' element in 'struts-config.xml' files" id="STRUTS.AMFB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid duplicated forms in the 'validation.xml'" id="STRUTS.DFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a non-empty name and path for each '&lt;forward>' element in 'struts-config.xml' files" id="STRUTS.FWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Do not declare instance variables in Struts Action classes" id="STRUTS.INST" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a name and type for each form bean in 'struts-config.xml' files" id="STRUTS.NTFB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Ensure Plugins are added in the 'struts-config.xml'" id="STRUTS.PLUGIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a valid 'type' attribute for each '&lt;form-property>' element in 'struts-config.xml' files" id="STRUTS.TAFP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid defining multiple form beans with the same name in 'struts-config.xml' files" id="STRUTS.MFBSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Ensure that the @path attribute of '&lt;action>' and '&lt;forward>' elements begins with '/' in 'struts-config.xml' files" id="STRUTS.PFS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Ensure that the 'scope' attribute is set to either &quot;request&quot; or &quot;session&quot; for actions and exceptions in 'struts-config.xml' files" id="STRUTS.RSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid accessing a JSP page from Action Classes" id="STRUTS.ACJC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid @prefix, @suffix, and @attribute for unnamed '&lt;action>' elements in 'struts-config.xml'" id="STRUTS.APSN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid using relative paths for attributes in 'struts-config.xml' files" id="STRUTS.ARP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Ensure validators are enabled in the 'struts-config.xml'" id="STRUTS.EV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Provide an appropriate getter and setter method for each field in a form bean" id="STRUTS.FIELDS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid calling methods of Action Classes" id="STRUTS.IACM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid public methods in Action Classes" id="STRUTS.PMAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a non-empty path and type for each '&lt;exception>' element in 'struts-config.xml' files" id="STRUTS.PTE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Use a Struts DTD for validation in 'struts-config.xml' files" id="STRUTS.SCDTD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Enable the Struts Validator plug-in in all 'struts-config.xml' files" id="STRUTS.VPI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid local and global forwards with the same name in 'struts-config.xml' files" id="STRUTS.DLGF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Include only getter and setter methods in form beans" id="STRUTS.FORM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Specify a valid 'maxlength' value for each form field in Struts validation files" id="STRUTS.MLFF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS.STRUTS2" desc="Avoid duplicated field validators" id="STRUTS.STRUTS2.S2DAFV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS.STRUTS2" desc="Avoid duplicated validators" id="STRUTS.STRUTS2.S2DV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS.STRUTS2" desc="Avoid duplicated validation files" id="STRUTS.STRUTS2.S2DVF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS.STRUTS2" desc="Ensure each validation file has a corresponding Action" id="STRUTS.STRUTS2.S2NA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not cause deadlocks by calling a &quot;synchronized&quot; method from a &quot;synchronized&quot; method" id="TRS.CSFS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not call the 'run()' method directly on classes extending 'java.lang.Thread' or implementing 'java.lang.Runnable'" id="TRS.IRUN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Release Locks in a &quot;finally&quot; block" id="TRS.RLF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on constant Strings" id="TRS.SCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Manually synchronize on 'synchronized' collections when iterating over them" id="TRS.SSCI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Call 'wait()' and 'await()' only inside a loop that tests the liveness condition" id="TRS.UWIL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use variables of the unsafe type 'java.lang.ThreadGroup'" id="TRS.AUTG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not call the &quot;start&quot; method of threads from inside a constructor" id="TRS.CSTART" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="TRS.DCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not catch 'IllegalMonitorStateException' since this exception likely indicates a design flaw" id="TRS.IMSE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Ensure that nested locks are ordered correctly" id="TRS.LORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not mix &quot;static&quot; and non-&quot;static&quot; &quot;synchronized&quot; methods" id="TRS.SNSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on &quot;public&quot; fields since doing so may cause deadlocks" id="TRS.SOPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'" id="TRS.THRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not call 'Thread.sleep()' while holding a lock since doing so can cause poor performance and deadlocks" id="TRS.TSHL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use 'notify()'; use 'notifyAll()' instead so that all waiting threads will be notified" id="TRS.ANF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid accidental use of &quot;Thread.interrupted()&quot;" id="TRS.ATI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use 'Thread.yield()' because it may behave differently under different Virtual Machines" id="TRS.AUTY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid invoking methods using &quot;static&quot; 'Calendar', 'DateFormat', or 'SimpleDateFormat'" id="TRS.CDF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use ConcurrentLinkedQueue instead of Vector and synchronizedList when possible" id="TRS.CLQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid compound synchronized collection accesses which violate atomicity" id="TRS.CMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not let &quot;this&quot; reference escape during construction" id="TRS.CTRE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use DiscardOldestPolicy with PriorityBlockingQueue" id="TRS.DOPQ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Inspect accesses to &quot;static&quot; fields which may require synchronization" id="TRS.IASF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Make lazy initializations thread-safe" id="TRS.ILI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Implement Runnable instead of extending Thread" id="TRS.IRET" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Give subclasses of Thread a 'run()' method so they can run as separate threads" id="TRS.MRUN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Ensure threads are named" id="TRS.NAME" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Ensure 'wait()', 'notify()' and 'notifyAll()' are invoked on an object that is clearly synchronized in its enclosing mod scope" id="TRS.NSYN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid overriding synchronized methods with non-synchronized methods" id="TRS.OSNS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on the class object returned by the 'getClass' method" id="TRS.SGC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not perform synchronization using the &quot;synchronized&quot; keyword on implementations of &quot;java.util.concurrent.locks.Lock&quot;" id="TRS.SOL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on non-final fields since doing so makes it difficult to guarantee mutual exclusion" id="TRS.SOUF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Synchronize access to &quot;static&quot; SimpleDataFormats" id="TRS.SSDF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Make the get method for a field synchronized if the set method is synchronized" id="TRS.SSUG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not perform synchronization nor call semaphore methods on an Object's 'this' reference" id="TRS.STR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid unsynchronized accesses of &quot;Collections.synchronized&quot; wrapped Collections" id="TRS.UACS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use unsynchronized Collections/Maps only when safe" id="TRS.UCM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use the same locking object to access variables" id="TRS.USL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not start a thread without specifying a 'run()' method" id="TRS.UT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use 'wait()' and 'notifyAll()' instead of polling loops" id="TRS.UWNA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use the correct method calls on &quot;java.util.concurrent.locks.Condition&quot; objects" id="TRS.WOC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not make the &quot;writeObject()&quot; method synchronized if no other method is synchronized" id="TRS.WOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use Atomic variables when always accessed in synchronized manner" id="TRS.AIL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not catch InterruptedException except in classes extending Thread" id="TRS.CIET" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use &quot;getState&quot; except for debugging purposes" id="TRS.GSD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not call the 'start()' method directly on Thread class instances" id="TRS.ISTART" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Access related Atomic variables in a synchronized block" id="TRS.MRAV" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on a collection view if the backing collection is accessible" id="TRS.SOBC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use ConcurrentHashMap instead of Hashtable and &quot;synchronizedMap&quot; wrapped HashMap when possible" id="TRS.CHM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use &quot;synchronized&quot; blocks instead of making the whole method declaration &quot;synchronized&quot;" id="TRS.NSM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use synchronization on methods that implement 'Runnable.run()'" id="TRS.RUN" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused &quot;import&quot; statements" id="UC.UIMPORT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary modifiers in an &quot;interface&quot;" id="UC.AAI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Remove commented out Java code" id="UC.ACC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Ensure that classes do not explicitly extend 'java.lang.Object'" id="UC.AEEO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid empty static and non-static initializers" id="UC.AESTAT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Do not override &quot;abstract&quot; methods of a parent class with &quot;abstract&quot; methods" id="UC.AMAMI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused labels" id="UC.AUL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid collection objects that are never read" id="UC.AURCO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="UC" desc="Avoid local variables that are never read" id="UC.AURV" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary &quot;boolean&quot; comparisons" id="UC.BCMP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid duplicate code in 'if' branches" id="UC.DIEB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Do not explicitly &quot;import&quot; the java.lang.* &quot;package&quot;" id="UC.DIL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid empty &quot;finalize()&quot; methods" id="UC.EF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid redundant 'finalize()' methods which only call the superclass' 'finalize()' method" id="UC.FCSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid redundant &quot;final&quot; keywords in method declarations in &quot;final&quot; classes" id="UC.FMFC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused &quot;private&quot; fields" id="UC.PF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused &quot;private&quot; methods" id="UC.PM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid redundant 'static' keywords in enum type declarations" id="UC.RSKE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid empty &quot;synchronized&quot; statements" id="UC.SNE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Use a caught exception in the &quot;catch&quot; block" id="UC.UCATCH" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary 'if' statements" id="UC.UCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary &quot;else&quot; statements" id="UC.UES" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused parameters" id="UC.UP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused &quot;private&quot; classes or interfaces" id="UC.UPC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary &quot;return&quot; statement at the end of &quot;void&quot; methods" id="UC.VR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid redundant throw clauses" id="UC.ARTD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Do not import classes from the package that contains the current class" id="UC.PIMPORT" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid methods that only call the overridden implementation (superclass implementation)" id="UC.SO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="XML" desc="Ensure that classes have a &quot;public&quot; constructor with zero arguments" id="XML.IVCC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="XML" desc="Ensure that XML files are well-formatted" id="XML.WF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="XML" desc="Avoid debug levels which are too high in Tomcat's 'server.xml'" id="XML.DLTH" sev="3" total="0"/>
         </RulesList>
         <SeverityList>
            <Severity authTot="3;" authUrg="2;" id="1" total="3"/>
            <Severity authTot="42;" authUrg="9;" id="2" total="42"/>
            <Severity authTot="257;" authUrg="35;" id="3" total="257"/>
            <Severity authTot="64;" authUrg="1;" id="4" total="64"/>
            <Severity authTot="47;" authUrg="3;" id="5" total="47"/>
         </SeverityList>
      </Rules>
      
  <Supps/>

      
  <StdViols>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="1" sev="3" auth="user1" locRef="1" ctx="1,0|2,0" rule="APSC_DV.003215.MCH" lnHash="-640264574" pkg="" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="-640264574" unbViolId="1fe05dd0-360b-3538-9098-54eb4bf6f430" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="36643865-75a8-3550-9977-c809b700a16c" locEndPos="44" locType="sr" hash="1741334343" locEndLn="1" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="1" sev="2" auth="user1" locRef="1" ctx="1,0|2,0" rule="FORMAT.MCH" lnHash="-640264574" pkg="" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="-640264574" unbViolId="ed4169b6-b713-3cf5-bae2-73794c9b14dd" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ff8ed5c6-65ca-34ca-ad8f-07613f5e2473" locEndPos="44" locType="sr" hash="1741334343" locEndLn="1" goals="0,"/>
    <StdViol msg="Compilation unit should be placed inside a non-default package" ln="1" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="1" sev="3" auth="user1" locRef="1" ctx="1,0|2,0" rule="CODSTA.ORG.UNDPN" lnHash="-640264574" pkg="" rule.header="Ensure all types have a non default package name" tool="jtest" lineHash="-640264574" unbViolId="f396f966-923d-34d5-85ca-b0e2f4f071dd" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c8debbfd-4f3f-3b59-983e-6a6329b1f0d2" locEndPos="46" locType="sr" hash="1741334343" locEndLn="1" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="3" auth="user1" locRef="1" ctx="3,0|4,0" rule="FORMAT.BLCD" lnHash="707665141" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="707665141" unbViolId="e3f97a08-d147-34a5-8231-9e18949fb716" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="29ba52a3-b714-3d7a-8e14-f28808481051" locEndPos="2" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="3" auth="user1" locRef="1" ctx="3,0|4,0" rule="APSC_DV.003215.BLCD" lnHash="707665141" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="707665141" unbViolId="cb12cb84-b481-3f59-b9ab-1faae3c0f4cb" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="26f87d61-dfe0-3542-bac1-65dff943c9ae" locEndPos="2" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="5" auth="user1" locRef="1" ctx="3,0|4,0" rule="SECURITY.WSC.MCNC" lnHash="707665141" pkg="" rule.header="Make your classes noncloneable" tool="jtest" lineHash="707665141" unbViolId="969a2085-4ba5-3d5f-a5da-22f56e94d9c1" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb15d0a7-529f-33c8-a151-7d81a8bd8808" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="2" auth="user1" locRef="1" ctx="3,0|4,0" rule="CERT.OBJ07.MCNC" lnHash="707665141" pkg="" rule.header="Make your classes noncloneable" tool="jtest" lineHash="707665141" unbViolId="b16432ba-956e-3abb-b217-7a9d19809da8" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b2f3c622-ee35-3a57-9c0f-641dd40f0e5b" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Calculator'" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="3" auth="user1" locRef="1" ctx="3,0|4,0" rule="JAVADOC.PJDC" lnHash="707665141" pkg="" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="707665141" unbViolId="a1d1b090-a7fb-38cf-9d81-5af6e3ce43ba" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e80e0955-80e3-30e8-bb05-0b0498da8064" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; class: Calculator" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="4" auth="user1" locRef="1" ctx="3,0|4,0" rule="GLOBAL.UPPC" lnHash="707665141" pkg="" rule.header="Avoid globally unused &quot;public/protected&quot; types" tool="jtest" lineHash="707665141" unbViolId="0e5a430d-a73a-3c6a-b710-0c6a85b723e7" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f7d90cf8-6bae-3cc5-a649-b7790b5cb2a5" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="4" auth="user1" locRef="1" ctx="3,0|4,0" rule="SECURITY.WSC.FIMU" lnHash="707665141" pkg="" rule.header="Make immutable classes final" tool="jtest" lineHash="707665141" unbViolId="a3a48ed3-0de0-3b96-a33a-e218a6828838" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ed0d3871-7673-3580-993c-2560b5252d6f" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="5" auth="user1" locRef="1" ctx="3,0|4,0" rule="SECURITY.WSC.SER" lnHash="707665141" pkg="" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="707665141" unbViolId="6a31bc5e-ff84-3685-8b14-f9d709a2e7e4" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0e58f19b-7c6d-3ebd-a76d-02b25c01a26e" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="5" auth="user1" locRef="1" ctx="3,0|4,0" rule="CWE.499.SER" lnHash="707665141" pkg="" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="707665141" unbViolId="48353752-1b9e-358e-8597-ade6654ae388" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5623d08c-2750-36fb-bbf4-77a282fa9745" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="5" auth="user1" locRef="1" ctx="3,0|4,0" rule="SECURITY.WSC.DSER" lnHash="707665141" pkg="" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="707665141" unbViolId="2835e513-17d3-360e-9bce-5ae393c0ce42" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b7c89314-8e98-3b34-a861-ec4e62d65da5" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: Calculator" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="5" auth="user1" locRef="1" ctx="3,0|4,0" rule="CODSTA.POD.DCTOR" lnHash="707665141" pkg="" rule.header="Define a no argument constructor whenever possible" tool="jtest" lineHash="707665141" unbViolId="b40811fd-7049-3467-ad00-892691c8f73c" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="f9cdd8f8-3fb4-3743-ab7a-30364622e34a" locEndPos="23" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="interface type 'ICalculator' is used" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="3" sev="3" auth="user1" locRef="1" ctx="3,0|4,0" rule="MOBILE.AUI" lnHash="707665141" pkg="" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="707665141" unbViolId="2ed166b3-5e0f-34b4-b46b-299bf2819e26" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7461ab33-8f75-326a-9040-84025c180da2" locEndPos="46" locType="sr" hash="1741334343" locEndLn="3" goals="0,"/>
    <StdViol msg="Constant value should be declared &quot;final&quot;: screen" ln="5" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="5" sev="3" auth="user1" locRef="1" ctx="5,0|6,0" rule="CODSTA.READ.FF" lnHash="-2008629378" pkg="" rule.header="Declare &quot;private&quot; constant fields &quot;final&quot;" tool="jtest" lineHash="-2008629378" unbViolId="e4a7c1b5-2ec9-316a-aa81-21bccd7f24ad" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ae839aa8-176b-3b39-8264-ef85fdaccd6e" locEndPos="25" locType="sr" hash="1741334343" locEndLn="5" goals="0,"/>
    <StdViol msg="Missing 'getScreen()' method for field 'screen'" ln="5" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="5" sev="4" auth="user1" locRef="1" ctx="5,0|6,0" rule="BEAN.NFM" lnHash="-2008629378" pkg="" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="-2008629378" unbViolId="013ff23f-6405-307c-ab4e-ce8e9d69ef85" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb06ea9a-aefc-39c2-9ca5-ba43a42f599a" locEndPos="25" locType="sr" hash="1741334343" locEndLn="5" goals="0,"/>
    <StdViol msg="Missing 'setScreen()' method for field 'screen'" ln="5" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="5" sev="4" auth="user1" locRef="1" ctx="5,0|6,0" rule="BEAN.NFM" lnHash="-2008629378" pkg="" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="-2008629378" unbViolId="b654a9e6-9a05-3959-a964-d59d28b1cb3f" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ddb734fa-a8af-30f3-b478-c1e905f80b6a" locEndPos="25" locType="sr" hash="1741334343" locEndLn="5" goals="0,"/>
    <StdViol msg="The 'screen' field of the immutable class is not declared final" ln="5" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="5" sev="4" auth="user1" locRef="1" ctx="5,0|6,0" rule="SECURITY.WSC.FIMU" lnHash="-2008629378" pkg="" rule.header="Make immutable classes final" tool="jtest" lineHash="-2008629378" unbViolId="46b8c9eb-3d60-34a2-b90e-87c8a7bb112e" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c7206237-b9e5-3f21-80ce-bc7703a33c9a" locEndPos="25" locType="sr" hash="1741334343" locEndLn="5" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user1" locRef="1" rule="METRIC.CC" lnHash="1262617896" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="1262617896" unbViolId="b9dc4c1c-7f7c-38f8-b590-35ddc3c693f8" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="73c42509-ea02-34d6-bbe1-4ceb539c8740" locType="sr" locEndPos="0" hash="1741334343" locEndLn="7" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user1" locRef="1" ctx="6,5|10,5" rule="FORMAT.U2BL" lnHash="1262617896" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1262617896" unbViolId="435fb505-1e9c-3899-a249-6ee0d17e712e" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8551c797-edae-3bf6-8b16-9471f91404e5" locEndPos="34" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user1" locRef="1" ctx="6,5|10,5" rule="APSC_DV.003215.U2BL" lnHash="1262617896" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1262617896" unbViolId="c2aa625e-2563-3ff4-9998-a5d27e3d17f3" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c6904a6f-d65d-3eb3-9407-22137f3c72ea" locEndPos="34" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'add()'" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="2" auth="user1" locRef="1" ctx="6,5|10,5" rule="JUNIT.TEST" lnHash="1262617896" pkg="" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="1262617896" unbViolId="e3de7db5-5658-3aa1-bb2f-a0f88125cce5" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="355defc0-f557-339f-88bb-db9ea85560e1" locEndPos="18" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'add()'" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user1" locRef="1" ctx="6,5|10,5" rule="JAVADOC.PJDM" lnHash="1262617896" pkg="" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="1262617896" unbViolId="767eb44d-0ba2-3f81-8345-b64f169a7152" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a260758d-07c8-3647-afca-a2d4e337daeb" locEndPos="18" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: add()" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="4" auth="user1" locRef="1" ctx="6,5|10,5" rule="GLOBAL.UPPM" lnHash="1262617896" pkg="" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="1262617896" unbViolId="1400d908-3dbe-3068-8b5e-b58744b2d6a3" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="31a6379f-5219-31ba-a3af-e480b8f8d7a2" locEndPos="18" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Formal parameter 'a' is not declared as final" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user1" locRef="1" ctx="6,5|10,5" rule="CODSTA.BP.FPF" lnHash="1262617896" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="1262617896" unbViolId="93cc6e5e-6625-3ec4-8b27-1aecc921bac3" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c152b138-eab0-3325-81ff-c522c3ea9c80" locEndPos="24" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="The length of the identifier &quot;a&quot; is less than the minimum length (2)" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="4" auth="user1" locRef="1" ctx="6,5|10,5" rule="NAMING.LLI" lnHash="1262617896" pkg="" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="1262617896" unbViolId="ffa2cdfe-c6b7-3540-8b3e-7d7a08e126e6" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f1a054ec-7069-38f3-9d7b-5d366a0d1bcb" locEndPos="24" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Variable 'a' does not end with 'int'" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="4" auth="user1" locRef="1" ctx="6,5|10,5" rule="NAMING.UHN" lnHash="1262617896" pkg="" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="1262617896" unbViolId="f5e4586b-d47a-3f32-b2b8-b20e7cbcb6f3" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4a0c84c7-9461-3819-8991-ecaa1ba4eb91" locEndPos="24" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Formal parameter 'b' is not declared as final" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="3" auth="user1" locRef="1" ctx="6,5|10,5" rule="CODSTA.BP.FPF" lnHash="1262617896" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="1262617896" unbViolId="257a17fc-a5e9-36be-afa5-223a1782f92e" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="34a2b4b3-adb9-3295-b728-5a77fa5c41d2" locEndPos="31" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="The length of the identifier &quot;b&quot; is less than the minimum length (2)" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="4" auth="user1" locRef="1" ctx="6,5|10,5" rule="NAMING.LLI" lnHash="1262617896" pkg="" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="1262617896" unbViolId="b83a92a6-b51b-387b-bbf0-9d8557a3baf2" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ebae35d3-61a4-3e5b-a24a-ace52dcdce7b" locEndPos="31" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Variable 'b' does not end with 'int'" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="6" sev="4" auth="user1" locRef="1" ctx="6,5|10,5" rule="NAMING.UHN" lnHash="1262617896" pkg="" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="1262617896" unbViolId="e09c95e9-eb9a-3ed2-85e0-198ca634acef" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="99489521-6198-345b-8242-839018b89ca0" locEndPos="31" locType="sr" hash="1741334343" locEndLn="6" goals="0,"/>
    <StdViol msg="Local constant not declared &quot;final&quot;: result" ln="7" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="7" sev="3" auth="user1" locRef="1" ctx="6,5|10,5" rule="CODSTA.READ.FLV" lnHash="1928371266" pkg="" rule.header="Declare constant local variables &quot;final&quot;" tool="jtest" lineHash="1928371266" unbViolId="a7d87f14-8d1a-384d-a745-82102659d476" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d48f408a-4b32-3194-91b5-d82f285c4187" locEndPos="18" locType="sr" hash="1741334343" locEndLn="7" goals="0,"/>
    <StdViol msg="Variable 'result' does not end with 'int'" ln="7" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="7" sev="4" auth="user1" locRef="1" ctx="6,5|10,5" rule="NAMING.UHN" lnHash="1928371266" pkg="" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="1928371266" unbViolId="709a71b4-4f74-30e5-a61f-4a92f9eb8951" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0f791a6d-5ce1-3411-98c8-9608088e9049" locEndPos="18" locType="sr" hash="1741334343" locEndLn="7" goals="0,"/>
    <StdViol msg="The declaration of the local variable 'result' is not followed by a comment" ln="7" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="7" sev="5" auth="user1" locRef="1" ctx="6,5|10,5" rule="CODSTA.READ.CLV" lnHash="1928371266" pkg="" rule.header="Comment local variables" tool="jtest" lineHash="1928371266" unbViolId="94be6fd9-fb87-33c7-8cef-e3100454d716" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="34df1122-9d94-3978-b332-4477444421a3" locEndPos="18" locType="sr" hash="1741334343" locEndLn="7" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user1" locRef="1" ctx="12,0|13,0" rule="FORMAT.BLCD" lnHash="-394619638" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-394619638" unbViolId="023a09ff-cce4-3338-ac28-de6d18b2fed0" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="79d6f6bc-72c4-31ad-95dc-51a353259615" locEndPos="6" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user1" locRef="1" ctx="12,0|13,0" rule="APSC_DV.003215.BLCD" lnHash="-394619638" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-394619638" unbViolId="f0f46ef9-8983-389d-93e4-d6f29dd47af5" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1e7ee0da-25cc-3fdf-ba3a-ebc54eba60de" locEndPos="6" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="5" auth="user1" locRef="1" ctx="12,0|13,0" rule="SECURITY.WSC.MCNC" lnHash="-394619638" pkg="" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-394619638" unbViolId="4eaae65a-9b72-3c34-b24a-ea702d928d7a" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="043a5896-f55f-3392-b87b-a88771203d33" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="2" auth="user1" locRef="1" ctx="12,0|13,0" rule="CERT.OBJ07.MCNC" lnHash="-394619638" pkg="" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-394619638" unbViolId="193dd45b-16bf-3ee9-b2ce-0a7a2f7e22e2" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="51e916c0-0d37-308c-8408-06b61eb31d61" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Elements in 'Calculator' not ordered appropriately, first violation: member class 'Screen' at line 12 should be placed before field 'screen' at line 5" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user1" locRef="1" ctx="12,0|13,0" rule="CODSTA.ORG.FO" lnHash="-394619638" pkg="" rule.header="Order class elements appropriately" tool="jtest" lineHash="-394619638" unbViolId="e934d844-8a2e-33e1-8b2e-281376a6237c" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ff5e4405-5152-337c-80e0-ea1ae3d021f6" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Screen'" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user1" locRef="1" ctx="12,0|13,0" rule="JAVADOC.PJDC" lnHash="-394619638" pkg="" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-394619638" unbViolId="06eec606-730b-3f8f-a912-8cbaf8c46911" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="834bee4c-2aec-3f2c-8637-1706a4434ef6" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Inner class 'Screen' should be avoided" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="3" auth="user1" locRef="1" ctx="12,0|13,0" rule="SECURITY.WSC.AUIC" lnHash="-394619638" pkg="" rule.header="Do not use inner classes" tool="jtest" lineHash="-394619638" unbViolId="7fa8e882-a822-3f58-9e66-d1768b9f7b1d" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="348f0e60-a0cb-3ea6-9821-dc50a952ec41" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Class 'Calculator.Screen' should be declared &quot;private&quot;" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="4" auth="user1" locRef="1" ctx="12,0|13,0" rule="GLOBAL.DPPC" lnHash="-394619638" pkg="" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" tool="jtest" lineHash="-394619638" unbViolId="83054ec2-7e4f-3ee5-8fff-534daefc0aef" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="deddc407-97c9-3908-bb0a-578cb1885b00" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="4" auth="user1" locRef="1" ctx="12,0|13,0" rule="SECURITY.WSC.FIMU" lnHash="-394619638" pkg="" rule.header="Make immutable classes final" tool="jtest" lineHash="-394619638" unbViolId="c924e9ea-651e-39b5-9a32-8423bf04b9f7" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6ba180d4-14a3-365c-9205-dfb801f37e5c" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="5" auth="user1" locRef="1" ctx="12,0|13,0" rule="SECURITY.WSC.SER" lnHash="-394619638" pkg="" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-394619638" unbViolId="047fc8bd-de0f-3b8d-93a4-c24df84c5bdd" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0d1a9652-87ab-3388-bc3c-09a79be52941" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="5" auth="user1" locRef="1" ctx="12,0|13,0" rule="CWE.499.SER" lnHash="-394619638" pkg="" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-394619638" unbViolId="a4cf30c0-8d79-386d-9bce-a4fe22aba031" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="375a0e4e-5d26-3a4a-b529-3f8b20e5bb7e" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Class 'Calculator.Screen' should be declared &quot;final&quot;" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="5" auth="user1" locRef="1" ctx="12,0|13,0" rule="GLOBAL.SPPC" lnHash="-394619638" pkg="" rule.header="Declare a &quot;public/protected&quot; &quot;class&quot; &quot;final&quot; if it is not subclassed" tool="jtest" lineHash="-394619638" unbViolId="ec270a5c-a665-31bd-bad4-6f65570f6c7c" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ddc003a8-7068-3c8e-b1c4-4d2b2dbb8c2d" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="12" sev="5" auth="user1" locRef="1" ctx="12,0|13,0" rule="SECURITY.WSC.DSER" lnHash="-394619638" pkg="" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="-394619638" unbViolId="914ffa7e-75a1-3311-9903-029bb1c262db" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ce80d969-2223-31bf-b55c-2ca2f79aef4e" locEndPos="30" locType="sr" hash="1741334343" locEndLn="12" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="13" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="13" sev="3" auth="user1" locRef="1" ctx="13,0|14,0" rule="FORMAT.U2BL" lnHash="1173913624" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1173913624" unbViolId="8062f094-3824-34cb-8382-0e2b3d11b112" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f4d1ca56-eff2-3df2-87ec-7540ef4594c4" locEndPos="38" locType="sr" hash="1741334343" locEndLn="13" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="13" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="13" sev="3" auth="user1" locRef="1" ctx="13,0|14,0" rule="APSC_DV.003215.U2BL" lnHash="1173913624" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1173913624" unbViolId="382ec03c-cf07-3520-a2f4-53a8d1172211" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c7717484-2937-3c1b-a8c3-48f69477dafb" locEndPos="38" locType="sr" hash="1741334343" locEndLn="13" goals="0,"/>
    <StdViol msg="Missing 'getBrightness()' method for field 'brightness'" ln="13" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="13" sev="4" auth="user1" locRef="1" ctx="13,0|14,0" rule="BEAN.NFM" lnHash="1173913624" pkg="" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="1173913624" unbViolId="6a49b436-f956-3157-8ed9-b531df5fb6af" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e719ee93-39df-3d8a-beff-3c019598f227" locEndPos="37" locType="sr" hash="1741334343" locEndLn="13" goals="0,"/>
    <StdViol msg="Missing 'setBrightness()' method for field 'brightness'" ln="13" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="13" sev="4" auth="user1" locRef="1" ctx="13,0|14,0" rule="BEAN.NFM" lnHash="1173913624" pkg="" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="1173913624" unbViolId="277dc57c-a1a5-36fe-9b7a-c044acfd2e93" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ce008078-a03f-3a1d-bcab-6d590e1841b5" locEndPos="37" locType="sr" hash="1741334343" locEndLn="13" goals="0,"/>
    <StdViol msg="The 'brightness' field of the immutable class is not declared final" ln="13" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="13" sev="4" auth="user1" locRef="1" ctx="13,0|14,0" rule="SECURITY.WSC.FIMU" lnHash="1173913624" pkg="" rule.header="Make immutable classes final" tool="jtest" lineHash="1173913624" unbViolId="8b64f886-24ca-339a-81ec-1af6e212e5fa" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0fb5d961-843f-3abb-968f-23b173948914" locEndPos="37" locType="sr" hash="1741334343" locEndLn="13" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user1" locRef="1" rule="METRIC.CC" lnHash="1528369737" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="1528369737" unbViolId="3d4d2b4d-d05a-38b7-8ae3-d85d7fbd6631" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="64f70ed3-a9a6-3813-aae6-a3c0fd0e0cb8" locType="sr" locEndPos="0" hash="1741334343" locEndLn="16" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'Screen()'" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="15" sev="2" auth="user1" locRef="1" ctx="15,0|16,0" rule="JUNIT.TEST" lnHash="1528369737" pkg="" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="1528369737" unbViolId="0dff02e8-059e-3917-b363-0a8ead0adbff" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f98e1b86-45eb-3944-a3b4-b28030886687" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="'public' constructor declared" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user1" locRef="1" ctx="15,0|16,0" rule="CODSTA.BP.CMUTA" lnHash="1528369737" pkg="" rule.header="Avoid 'public' or 'protected' constructors for immutable classes" tool="jtest" lineHash="1528369737" unbViolId="b74762be-0b8b-38fc-a6a4-bfe6c5c7689a" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3f9b2280-48ae-3912-96ec-c66077b8f9b0" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'Screen()'" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user1" locRef="1" ctx="15,0|16,0" rule="JAVADOC.PJDM" lnHash="1528369737" pkg="" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="1528369737" unbViolId="38018023-3a2f-36e1-8efe-4ab977a9b66f" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="38b4a902-b602-3049-9eb8-8cb0cc02af95" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Constructor 'Screen()' should be declared &quot;private&quot;" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="15" sev="4" auth="user1" locRef="1" ctx="15,0|16,0" rule="GLOBAL.DPPM" lnHash="1528369737" pkg="" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="1528369737" unbViolId="31806bb3-7a30-3102-977c-69d6517a8d9f" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fe820765-0b94-3848-90b5-cad7717ac18e" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Constructor 'Screen()' should be declared &quot;private&quot;" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="15" sev="4" auth="user1" locRef="1" ctx="15,0|16,0" rule="CWE.749.DPPM" lnHash="1528369737" pkg="" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="1528369737" unbViolId="0202e56c-7363-34e0-beea-daeac4e0d237" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="55094458-1a3a-3d9e-b95f-c85dac4e8e5c" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Flag not present" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="15" sev="4" auth="user1" locRef="1" ctx="15,0|16,0" rule="SECURITY.WSC.INIVF" lnHash="1528369737" pkg="" rule.header="Defend against partially initialized instances of non-final classes" tool="jtest" lineHash="1528369737" unbViolId="5d1e604d-0398-31fc-95fa-197212eb8fb5" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="28d8257f-b95b-31b8-a49a-eaced1d4b241" locEndPos="21" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Formal parameter 'brightness' is not declared as final" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user1" locRef="1" ctx="15,0|16,0" rule="CODSTA.BP.FPF" lnHash="1528369737" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="1528369737" unbViolId="2c218760-5831-3972-85a8-8ddaa21bb9dd" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c76d1d65-c38c-3502-a2e4-a532d5fe56dc" locEndPos="43" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="The parameter 'brightness' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user1" locRef="1" ctx="15,0|16,0" rule="OOP.HIF" lnHash="1528369737" pkg="" rule.header="Do not hide fields and local variables declared in enclosing scopes" tool="jtest" lineHash="1528369737" unbViolId="e0793126-da96-3b3b-a15f-ea208cd36a80" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6e973fc5-51e4-3f07-a0e2-eef2fbce963b" locEndPos="43" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <StdViol msg="Parameter 'brightness' has the same name as a field" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="15" sev="3" auth="user1" locRef="1" ctx="15,0|16,0" rule="OOP.HMF" lnHash="1528369737" pkg="" rule.header="Do not give method local variables and parameters the same name as class fields" tool="jtest" lineHash="1528369737" unbViolId="386b3ed6-a161-3409-99c3-2914a95dc2ea" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c45438ed-691e-324d-92be-02bbce6986b6" locEndPos="43" locType="sr" hash="1741334343" locEndLn="15" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="19" sev="3" auth="user1" locRef="1" rule="METRIC.CC" lnHash="-1397540739" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-1397540739" unbViolId="84559b7c-ebc7-39af-b129-3de5fb3a39c8" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="307c82d0-dbf3-376a-918e-4149ae5ebd55" locType="sr" locEndPos="0" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'showResult()'" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="19" sev="2" auth="user1" locRef="1" ctx="19,9|21,9" rule="JUNIT.TEST" lnHash="-1397540739" pkg="" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-1397540739" unbViolId="18130267-3afc-3cc0-83f7-363271ea1136" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="873c856d-d67b-3ff3-9d38-ed87b4cdccae" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'showResult()'" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="19" sev="3" auth="user1" locRef="1" ctx="19,9|21,9" rule="JAVADOC.PJDM" lnHash="-1397540739" pkg="" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-1397540739" unbViolId="48a44ce9-6ca1-3fd4-8525-6146c7d1224f" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="edf41608-fc93-3929-875e-11b19070588f" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Method 'showResult()' should be declared &quot;private&quot;" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="19" sev="4" auth="user1" locRef="1" ctx="19,9|21,9" rule="GLOBAL.DPPM" lnHash="-1397540739" pkg="" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="-1397540739" unbViolId="94d36f90-34c3-3e88-83a6-0ccadc106260" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="39514141-61d3-3de7-9add-5fbf022856cc" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Method 'showResult()' should be declared &quot;private&quot;" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="19" sev="4" auth="user1" locRef="1" ctx="19,9|21,9" rule="CWE.749.DPPM" lnHash="-1397540739" pkg="" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="-1397540739" unbViolId="4cfae73e-ff83-3bb4-96b0-6fb14cbd6e8b" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cf0aa1f0-b672-304a-a0a3-993e3ade5abc" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Method 'showResult()' should be declared &quot;final&quot;" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="19" sev="5" auth="user1" locRef="1" ctx="19,9|21,9" rule="GLOBAL.SPPM" lnHash="-1397540739" pkg="" rule.header="Declare a &quot;public/protected&quot; method &quot;final&quot; if it is not overridden" tool="jtest" lineHash="-1397540739" unbViolId="23d8485b-e3ad-3435-8113-9675013346ac" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bf8184ad-685d-37b3-ac93-1d4ee3a3ce20" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Formal parameter 'result' is not declared as final" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="19" sev="3" auth="user1" locRef="1" ctx="19,9|21,9" rule="CODSTA.BP.FPF" lnHash="-1397540739" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="-1397540739" unbViolId="d6a6faeb-d54e-34f9-bb1f-890f120d9e1b" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c3bc7b83-1730-3b3d-8b05-3bcf80d52a18" locEndPos="41" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Variable 'result' does not end with 'int'" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="19" sev="4" auth="user1" locRef="1" ctx="19,9|21,9" rule="NAMING.UHN" lnHash="-1397540739" pkg="" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="-1397540739" unbViolId="0fad24ed-3380-3f4b-837f-2c9764ebf6e7" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="669d92d0-ac25-3895-b4f4-8ad1cf4647b2" locEndPos="41" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="user1" rule="CWE.200.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c3dffbdd-814b-30dc-8eb3-6a21622a89fd" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="3" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="37da0530-dcfe-3b8d-b899-9d72f22df1cf" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="user1" rule="CWE.209.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5774e81b-bdcf-3636-a252-9960eb239f41" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="3" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="ba7e0d1a-1d42-3f0b-81df-16f494ad223e" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="user1" rule="OWASP2017.A6.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d6789c30-cddc-3973-b37e-1c3d66be77b9" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="3" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="e212afd8-9596-3047-940a-06cb4eeb7e38" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="user1" rule="OWASP2019.API10.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1c3fc73f-6250-35d1-b98c-1ecd097ff4ec" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="3" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="8b0d9115-a41d-3458-95e7-144fecbd0c3b" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="user1" rule="OWASP2021.A5.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="00ab2145-4f1d-3795-8183-647af987d516" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="3" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="4a484f7b-ac0b-3605-b2fb-8474417271c0" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="user1" rule="PCIDSS32.655.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7cd973c2-0c7a-3778-933e-a3fb61a11f1b" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="3" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="03da3263-757d-3c9d-9c63-240de9460b8f" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="user1" rule="SECURITY.ESD.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a8c45b01-9eea-372b-8c2d-fa1f95289642" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="3" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="24d56bf4-69a1-30b6-98ae-606d90e1b1e8" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="user1" rule="APSC_DV.001460.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6e71e6e9-241a-3384-af49-70aa716926ff" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="2" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="d7b109af-bf13-3840-a1f5-3efe3e98ad1f" locType="sr" hash="1741334343"/>
    <StdViol msg="Concatenating strings" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="20" sev="5" auth="user1" locRef="1" ctx="19,9|21,9" rule="INTER.COS" lnHash="-1397641892" pkg="" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="-1397641892" unbViolId="f82470b2-0425-3987-a55f-081f4eb374a1" locStartPos="31" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7dfe1472-7fef-31ef-bd1c-5f09451d4f42" locEndPos="57" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="20" sev="3" auth="user1" locRef="1" ctx="19,9|21,9" rule="CERT.STR00.COS" lnHash="-1397641892" pkg="" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="-1397641892" unbViolId="f2582c27-63e4-37d4-8332-5848e4edda31" locStartPos="31" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="af25de58-6d74-315a-98ed-652b7932ccaa" locEndPos="57" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Called 'toString()' implicitly on a numeric object" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="20" sev="4" auth="user1" locRef="1" ctx="19,9|21,9" rule="INTER.NTS" lnHash="-1397641892" pkg="" rule.header="Do not call 'toString()' or 'String.valueOf()' on numeric values in an Internationalized environment" tool="jtest" lineHash="-1397641892" unbViolId="75f8d34a-0cec-3b73-b52e-3736f158b728" locStartPos="51" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="874cb18e-a96f-343e-84f4-c17aa4215095" locEndPos="57" locType="sr" hash="1741334343" locEndLn="20" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="23" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="23" sev="3" auth="user1" locRef="1" ctx="23,0|24,0" rule="FORMAT.BLCD" lnHash="-619022508" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-619022508" unbViolId="692e072a-bd9f-3509-b9da-8897b39464df" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="14fbbcf0-76f1-3d9f-9cff-16a59c18c1eb" locEndPos="10" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="23" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="23" sev="3" auth="user1" locRef="1" ctx="23,0|24,0" rule="APSC_DV.003215.BLCD" lnHash="-619022508" pkg="" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-619022508" unbViolId="af1685bc-ee06-3f4d-bc51-4f6116f79851" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="df4a6612-e918-3ca4-825f-42e1b2996583" locEndPos="10" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="Elements in 'Screen' not ordered appropriately, first violation: member enum declaration 'Brightness' at line 23 should be placed before field 'brightness' at line 13" ln="23" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="23" sev="3" auth="user1" locRef="1" ctx="23,0|24,0" rule="CODSTA.ORG.FO" lnHash="-619022508" pkg="" rule.header="Order class elements appropriately" tool="jtest" lineHash="-619022508" unbViolId="92817c42-7f0a-3afa-b985-5c7486a0f190" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c98f32af-b772-37da-8d7b-9d43967faa65" locEndPos="30" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Brightness'" ln="23" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="23" sev="3" auth="user1" locRef="1" ctx="23,0|24,0" rule="JAVADOC.PJDC" lnHash="-619022508" pkg="" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-619022508" unbViolId="73c2b1ff-2e51-3148-aabf-c85a7f7bb05d" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="da1b0ec5-49b0-3587-89f3-dc826302e14a" locEndPos="30" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="Enum 'Calculator.Screen.Brightness' should be declared &quot;private&quot;" ln="23" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="23" sev="4" auth="user1" locRef="1" ctx="23,0|24,0" rule="GLOBAL.DPPC" lnHash="-619022508" pkg="" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" tool="jtest" lineHash="-619022508" unbViolId="fef568f6-468a-3fca-97a3-3a39a554214f" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="85e7dd08-89cf-38e5-b63e-9324a66780a8" locEndPos="30" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="'Brightness' is an expensive enum declaration" ln="23" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="23" sev="3" auth="user1" locRef="1" ctx="23,0|24,0" rule="MOBILE.ENUM" lnHash="-619022508" pkg="" rule.header="Avoid using enums" tool="jtest" lineHash="-619022508" unbViolId="c1b9b7a4-1ded-3462-9fac-d6150fd95543" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="86d2a3f3-acfc-3d46-b40c-5fce14f359bb" locEndPos="30" locType="sr" hash="1741334343" locEndLn="23" goals="0,"/>
    <StdViol msg="Use 1 blank line before every enum constant declaration (or corresponding Javadoc)" ln="24" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="24" sev="3" auth="user1" locRef="1" ctx="24,0|25,0" rule="FORMAT.U2BL" lnHash="-1760446347" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1760446347" unbViolId="493c8502-b79e-31e0-a99d-c72831a4575d" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a24a9d6f-2153-3588-8128-f0ddf559e03b" locEndPos="29" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="Use 1 blank line before every enum constant declaration (or corresponding Javadoc)" ln="24" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="24" sev="3" auth="user1" locRef="1" ctx="24,0|25,0" rule="APSC_DV.003215.U2BL" lnHash="-1760446347" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1760446347" unbViolId="82382500-bb36-3112-b94d-ac17de846ed0" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3d9f2c08-c5be-313a-aaec-32a2785543f1" locEndPos="29" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="24" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="24" sev="3" auth="user1" locRef="1" ctx="24,0|25,0" rule="FORMAT.U2BL" lnHash="-1760446347" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1760446347" unbViolId="1d52777c-4d16-3637-83e7-504e3ed4e23a" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4d019cee-860e-36fb-b68b-76f80db32cfa" locEndPos="29" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="24" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="24" sev="3" auth="user1" locRef="1" ctx="24,0|25,0" rule="APSC_DV.003215.U2BL" lnHash="-1760446347" pkg="" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1760446347" unbViolId="1fadc10a-3ba1-3057-adb6-56448a6e4fa3" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="340292f1-df59-3a37-b14c-e6db40f3898c" locEndPos="29" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="Enum constant not directly used: HIGH" ln="24" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="24" sev="4" auth="user1" locRef="1" ctx="24,0|25,0" rule="GLOBAL.UEC" lnHash="-1760446347" pkg="" rule.header="Avoid globally unused enum constants" tool="jtest" lineHash="-1760446347" unbViolId="b02b6211-72e4-3ac2-ab75-3836c18ccdaf" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4c7990c6-0352-31a0-8522-5761358e344d" locEndPos="16" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="Enum constant not directly used: LOW" ln="24" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="24" sev="4" auth="user1" locRef="1" ctx="24,0|25,0" rule="GLOBAL.UEC" lnHash="-1760446347" pkg="" rule.header="Avoid globally unused enum constants" tool="jtest" lineHash="-1760446347" unbViolId="26abdd20-b526-3312-b742-d0ad52370b7a" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a3ba5672-646c-3057-a6f9-f9e6c86bc7de" locEndPos="29" locType="sr" hash="1741334343" locEndLn="24" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="1" sev="3" auth="user1" locRef="2" ctx="1,0|2,0" rule="APSC_DV.003215.MCH" lnHash="1284421354" pkg="com.parasoft" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1284421354" unbViolId="b8ff9915-b083-3ebf-8e1b-98d02a18ab39" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b161164a-49a4-3a89-a480-52dab1ca620c" locEndPos="21" locType="sr" hash="-662881149" locEndLn="1" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="1" sev="2" auth="user1" locRef="2" ctx="1,0|2,0" rule="FORMAT.MCH" lnHash="1284421354" pkg="com.parasoft" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1284421354" unbViolId="6dc5d58f-3a68-3d31-9351-d2657133d9e0" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2b76c8f3-441b-3e6b-aa9a-bd6ad8d8f422" locEndPos="21" locType="sr" hash="-662881149" locEndLn="1" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="3" auth="user1" locRef="2" ctx="5,0|6,0" rule="FORMAT.BLCD" lnHash="-1890058929" pkg="com.parasoft" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1890058929" unbViolId="a9ab36a7-f76c-3c69-be8f-15835d6fe63d" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b2a19297-1bf3-35d6-b5ca-ba1b82cf3445" locEndPos="2" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="3" auth="user1" locRef="2" ctx="5,0|6,0" rule="APSC_DV.003215.BLCD" lnHash="-1890058929" pkg="com.parasoft" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1890058929" unbViolId="ffb72745-a461-3f21-a08a-1a0938654e4a" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="28f33e9d-c5cc-3d39-8ab5-1e290c40ada3" locEndPos="2" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="5" auth="user1" locRef="2" ctx="5,0|6,0" rule="SECURITY.WSC.MCNC" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1890058929" unbViolId="8d866c02-8f0f-304f-8d64-97b42cd6767a" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b4998474-8b7b-36c7-b268-4a9ba9b489f6" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="2" auth="user1" locRef="2" ctx="5,0|6,0" rule="CERT.OBJ07.MCNC" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1890058929" unbViolId="708556ab-0f41-3ba1-8830-603c58be67b5" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="14bc03f1-fbc8-30c8-8cf0-8fce5a524db9" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Convertor'" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="3" auth="user1" locRef="2" ctx="5,0|6,0" rule="JAVADOC.PJDC" lnHash="-1890058929" pkg="com.parasoft" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-1890058929" unbViolId="97129f3b-c799-3d79-b822-c8e56d9aa796" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ac035595-147d-3e14-bd44-52cc289a4eac" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; class: com.parasoft.Convertor" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="4" auth="user1" locRef="2" ctx="5,0|6,0" rule="GLOBAL.UPPC" lnHash="-1890058929" pkg="com.parasoft" rule.header="Avoid globally unused &quot;public/protected&quot; types" tool="jtest" lineHash="-1890058929" unbViolId="2dfd26fc-c509-38d2-811b-2c1feed96c6f" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="56703cf3-f02a-3064-8e51-a069148364c0" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="4" auth="user1" locRef="2" ctx="5,0|6,0" rule="SECURITY.WSC.FIMU" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make immutable classes final" tool="jtest" lineHash="-1890058929" unbViolId="2800f103-a6fb-3180-8df4-f1a4401551d2" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4fd3e838-34d0-3eee-bfc5-734231b19d62" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="5" auth="user1" locRef="2" ctx="5,0|6,0" rule="SECURITY.WSC.SER" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1890058929" unbViolId="bd52992c-1c1c-35c2-8d33-ad61bf7ff8a2" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="025c3cae-7782-3aed-8314-1fd9c541d1e0" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="5" auth="user1" locRef="2" ctx="5,0|6,0" rule="CWE.499.SER" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1890058929" unbViolId="c5856334-cabd-3f91-a4fe-7a7931e7d524" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4a5161ea-e4aa-3e82-a9cb-cf295c54a016" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="5" auth="user1" locRef="2" ctx="5,0|6,0" rule="SECURITY.WSC.DSER" lnHash="-1890058929" pkg="com.parasoft" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="-1890058929" unbViolId="ab79e1d2-f773-3b02-abfe-015fc2430986" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="de95b0e4-6736-3911-8dcd-f8de92359da3" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: Convertor" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="5" auth="user1" locRef="2" ctx="5,0|6,0" rule="CODSTA.POD.DCTOR" lnHash="-1890058929" pkg="com.parasoft" rule.header="Define a no argument constructor whenever possible" tool="jtest" lineHash="-1890058929" unbViolId="8d9a43b7-9fa5-3aa0-8bb3-fa9d40ea3feb" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="6746c372-c36b-3dbc-a50b-3351e73def90" locEndPos="22" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <StdViol msg="interface type 'IConvertor' is used" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="5" sev="3" auth="user1" locRef="2" ctx="5,0|6,0" rule="MOBILE.AUI" lnHash="-1890058929" pkg="com.parasoft" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="-1890058929" unbViolId="5709b9fb-b8dc-330e-bdfc-de770ae910ae" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="91cd56d9-9856-3e21-8822-bd1018d90574" locEndPos="44" locType="sr" hash="-662881149" locEndLn="5" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="2" rule="METRIC.CC" lnHash="-750708491" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-750708491" unbViolId="ee7725e5-be7d-3f3d-85cb-a8153ee4f605" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="8b3f5261-ad58-377a-8cc1-b3b1dcd2032a" locType="sr" locEndPos="0" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="2" ctx="6,5|8,5" rule="FORMAT.U2BL" lnHash="-750708491" pkg="com.parasoft" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-750708491" unbViolId="dac5b3e7-5266-3d69-8307-089428365e1f" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0d57c9bc-9918-3976-ba36-7f07fec88829" locEndPos="42" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="2" ctx="6,5|8,5" rule="APSC_DV.003215.U2BL" lnHash="-750708491" pkg="com.parasoft" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-750708491" unbViolId="9168eba1-a7a7-3f4a-bba6-a0e30d705778" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4f160a83-8944-35fd-9e91-9f54e4f47409" locEndPos="42" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'convertToString()'" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="2" auth="user1" locRef="2" ctx="6,5|8,5" rule="JUNIT.TEST" lnHash="-750708491" pkg="com.parasoft" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-750708491" unbViolId="7c0ebe0e-17fc-3be1-b36d-c0ef58f93eac" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0519b7d7-ea5f-3559-915d-11b049d37f0f" locEndPos="33" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="The method 'convertToString' does not have a Javadoc comment describing whether or not the method can return null" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="2" ctx="6,5|8,5" rule="JAVADOC.CRN" lnHash="-750708491" pkg="com.parasoft" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="-750708491" unbViolId="50f73474-9a0d-3287-9ebc-73476c22771d" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3dcccab5-4dd5-3b92-96ba-121e48c91dd9" locEndPos="33" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'convertToString()'" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="2" ctx="6,5|8,5" rule="JAVADOC.PJDM" lnHash="-750708491" pkg="com.parasoft" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-750708491" unbViolId="9755e747-1a16-369a-ae11-265c4d6bb783" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5e16fca3-c9ae-3ab6-bc17-6bdb288937e4" locEndPos="33" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: convertToString()" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="4" auth="user1" locRef="2" ctx="6,5|8,5" rule="GLOBAL.UPPM" lnHash="-750708491" pkg="com.parasoft" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="-750708491" unbViolId="c2d86cf3-ffc4-3c8b-9bf6-e7238bf7c3d2" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9e3556a4-2927-3f74-9266-d2dc11449416" locEndPos="33" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Formal parameter 'a' is not declared as final" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="2" ctx="6,5|8,5" rule="CODSTA.BP.FPF" lnHash="-750708491" pkg="com.parasoft" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="-750708491" unbViolId="092ad7c3-3665-3527-823c-5cddc950ca2b" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5928c59a-ab93-3ea5-8e82-0929c61463c9" locEndPos="39" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="The length of the identifier &quot;a&quot; is less than the minimum length (2)" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="4" auth="user1" locRef="2" ctx="6,5|8,5" rule="NAMING.LLI" lnHash="-750708491" pkg="com.parasoft" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="-750708491" unbViolId="4c6b83b2-e34c-3162-96ad-4848800ad866" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="378af76d-122b-3f3a-b0dc-7511b3782ec2" locEndPos="39" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Variable 'a' does not end with 'int'" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="6" sev="4" auth="user1" locRef="2" ctx="6,5|8,5" rule="NAMING.UHN" lnHash="-750708491" pkg="com.parasoft" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="-750708491" unbViolId="dbe82be7-1dc7-3a1d-8a50-2f27dd5f4783" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6d4b80a7-6ff3-3a03-9a89-60d0b47fb286" locEndPos="39" locType="sr" hash="-662881149" locEndLn="6" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="5" auth="user1" locRef="2" ctx="6,5|8,5" rule="INTER.COS" lnHash="380198143" pkg="com.parasoft" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="380198143" unbViolId="1085c5de-7c62-309e-b6ab-ab621ed3bd78" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0496104a-c4a1-3ef6-804b-ec91dc661196" locEndPos="21" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="3" auth="user1" locRef="2" ctx="6,5|8,5" rule="CERT.STR00.COS" lnHash="380198143" pkg="com.parasoft" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="380198143" unbViolId="c8864e8e-9ff8-3374-8d5d-cc9633981436" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="794ce92b-9f6d-30f3-86c3-d3c6f77fc968" locEndPos="21" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="The value 'a' is converted to a String here by concatenation with the empty String" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="3" auth="user1" locRef="2" ctx="6,5|8,5" rule="OPT.CPTS" lnHash="380198143" pkg="com.parasoft" rule.header="Do not convert a value to a String by concatenating the empty String" tool="jtest" lineHash="380198143" unbViolId="9957975e-f1ef-3a07-9008-b1fa209af0e4" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="32cbbae7-bc91-378a-99e0-946f710cbd1f" locEndPos="21" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="The value 'a' is converted to a String here by concatenation with the empty String" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="3" auth="user1" locRef="2" ctx="6,5|8,5" rule="CWE.704.CPTS" lnHash="380198143" pkg="com.parasoft" rule.header="Do not convert a value to a String by concatenating the empty String" tool="jtest" lineHash="380198143" unbViolId="68635605-8cd8-3d5d-9501-f4ed504a4c3b" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="50974aea-424d-30f8-acc0-06b4c114c5c1" locEndPos="21" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="The String literal &quot;&quot; is used" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="3" auth="user1" locRef="2" ctx="6,5|8,5" rule="SECURITY.WSC.SL" lnHash="380198143" pkg="com.parasoft" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="380198143" unbViolId="229d5f94-7419-3c4e-8b1f-1b3eb255aaf7" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="703b5b14-f72b-39bd-b849-668e9db921f7" locEndPos="17" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <StdViol msg="Called 'toString()' implicitly on a numeric object" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="7" sev="4" auth="user1" locRef="2" ctx="6,5|8,5" rule="INTER.NTS" lnHash="380198143" pkg="com.parasoft" rule.header="Do not call 'toString()' or 'String.valueOf()' on numeric values in an Internationalized environment" tool="jtest" lineHash="380198143" unbViolId="a453bab4-6f91-3cd6-8ebc-e3b85ee607fc" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0da19d2c-810b-344b-b13f-ad4bfc4057b6" locEndPos="21" locType="sr" hash="-662881149" locEndLn="7" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="10" sev="3" auth="user1" locRef="2" rule="METRIC.CC" lnHash="552024108" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="552024108" unbViolId="d11359b4-0bf3-3e09-ba92-4bfd8a87b232" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="01a493e0-fc3d-37fe-8e5c-79f82b568237" locType="sr" locEndPos="0" hash="-662881149" locEndLn="11" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'name()'" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="11" sev="2" auth="user1" locRef="2" ctx="10,5|13,5" rule="JUNIT.TEST" lnHash="-1435350657" pkg="com.parasoft" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-1435350657" unbViolId="3cde7242-2ed7-3a24-bde1-26f1ca943228" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6627b846-8f88-345c-be50-0bc5508b55dc" locEndPos="22" locType="sr" hash="-662881149" locEndLn="11" goals="0,"/>
    <StdViol msg="The method 'name' does not have a Javadoc comment describing whether or not the method can return null" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="11" sev="3" auth="user1" locRef="2" ctx="10,5|13,5" rule="JAVADOC.CRN" lnHash="-1435350657" pkg="com.parasoft" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="-1435350657" unbViolId="afb082a6-9685-30ec-b003-4760b13284a1" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="25048de0-7c48-3d32-9f38-54bc4f5d831c" locEndPos="22" locType="sr" hash="-662881149" locEndLn="11" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'name()'" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="11" sev="3" auth="user1" locRef="2" ctx="10,5|13,5" rule="JAVADOC.PJDM" lnHash="-1435350657" pkg="com.parasoft" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-1435350657" unbViolId="27204a13-871f-3c37-92c5-093e52bf3d3d" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="82c9dc7b-af22-373c-b818-973c17fc9b62" locEndPos="22" locType="sr" hash="-662881149" locEndLn="11" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;number to string convertor&quot;" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="12" sev="3" auth="user1" locRef="2" ctx="10,5|13,5" rule="INTER.ITT" lnHash="-31285632" pkg="com.parasoft" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="-31285632" unbViolId="7044ffa4-896b-335b-afb1-fbfe30b4f864" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="57eb4b98-bf38-36bc-a946-371f1887294d" locEndPos="43" locType="sr" hash="-662881149" locEndLn="12" goals="0,"/>
    <StdViol msg="The String literal &quot;number to string convertor&quot; is used" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locStartln="12" sev="3" auth="user1" locRef="2" ctx="10,5|13,5" rule="SECURITY.WSC.SL" lnHash="-31285632" pkg="com.parasoft" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="-31285632" unbViolId="661d08c3-0d87-35f3-b81f-792c480a8279" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e04834fa-80f7-372b-9412-c5ddd01b2bba" locEndPos="43" locType="sr" hash="-662881149" locEndLn="12" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="1" sev="3" auth="user1" locRef="3" ctx="1,0|2,0" rule="APSC_DV.003215.MCH" lnHash="1607033717" pkg="com.parasoft.another" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1607033717" unbViolId="7ae801b9-8f8e-30fd-af5c-03c6ad5985a0" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0c780748-28f6-38c1-8fab-e6b3fdd81dec" locEndPos="29" locType="sr" hash="469181545" locEndLn="1" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="1" sev="2" auth="user1" locRef="3" ctx="1,0|2,0" rule="FORMAT.MCH" lnHash="1607033717" pkg="com.parasoft.another" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1607033717" unbViolId="40298318-2b4f-30f2-a8de-11e29080cc27" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="55bf8664-a613-3f00-81e3-220651171ef9" locEndPos="29" locType="sr" hash="469181545" locEndLn="1" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="3" auth="user1" locRef="3" ctx="5,0|6,0" rule="FORMAT.BLCD" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1890058929" unbViolId="d2264362-8ab0-31d7-a9ba-4d42e7f2d5c7" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="10a11a6c-0a26-3807-a3b6-325a9a744609" locEndPos="2" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="3" auth="user1" locRef="3" ctx="5,0|6,0" rule="APSC_DV.003215.BLCD" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1890058929" unbViolId="b2362565-74bd-3b1a-8b88-46f517a7dd57" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e101e296-a3fa-31d5-b766-78557fae7d0d" locEndPos="2" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" auth="user1" rule="SECURITY.WSC.MCNC" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make your classes noncloneable" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7ff1cbf4-b478-3ba5-aae0-aeb4f36cb58b" locEndPos="22" urgent="true" locEndLn="5" goals="1," locStartln="5" sev="5" locRef="3" ctx="5,0|6,0" tool="jtest" lineHash="-1890058929" unbViolId="109f33e9-5f08-3043-8e95-53fe7175cc62" locType="sr" hash="469181545"/>
    <StdViol msg="'clone()' method is missing" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" auth="user1" rule="CERT.OBJ07.MCNC" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make your classes noncloneable" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c4e83f51-f0cc-3c5d-bd38-8392dc8a56f7" locEndPos="22" urgent="true" locEndLn="5" goals="1," locStartln="5" sev="2" locRef="3" ctx="5,0|6,0" tool="jtest" lineHash="-1890058929" unbViolId="1a90c524-e05d-3f59-a745-9049e4298017" locType="sr" hash="469181545"/>
    <StdViol msg="Missing Javadoc comment for 'Convertor'" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="3" auth="user1" locRef="3" ctx="5,0|6,0" rule="JAVADOC.PJDC" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-1890058929" unbViolId="c7ea3cab-8f91-33f7-87ff-9b6537836a86" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="00770267-1693-37a3-8fb1-944fa2b36cb5" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; class: com.parasoft.another.Convertor" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="4" auth="user1" locRef="3" ctx="5,0|6,0" rule="GLOBAL.UPPC" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Avoid globally unused &quot;public/protected&quot; types" tool="jtest" lineHash="-1890058929" unbViolId="2f273cea-3cff-30d0-9c8b-3911538becad" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="de3cdb74-38af-3d15-9936-ff006e415a91" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="4" auth="user1" locRef="3" ctx="5,0|6,0" rule="SECURITY.WSC.FIMU" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make immutable classes final" tool="jtest" lineHash="-1890058929" unbViolId="23932ddf-1022-3267-bfb1-846c08f0239d" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d315390c-7da6-3ff1-bbc5-e6f050f6748a" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="5" auth="user1" locRef="3" ctx="5,0|6,0" rule="SECURITY.WSC.SER" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1890058929" unbViolId="719282cb-761d-3319-ba25-941ca8a30f0a" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f994e941-e960-3e93-aa1f-b64c286f510d" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="5" auth="user1" locRef="3" ctx="5,0|6,0" rule="CWE.499.SER" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-1890058929" unbViolId="403bb4a4-d4b5-3c15-91b5-01e3882804b8" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7b39cc06-6482-3610-bc2d-ebd3dcf6c7c8" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="5" auth="user1" locRef="3" ctx="5,0|6,0" rule="SECURITY.WSC.DSER" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="-1890058929" unbViolId="c3e1483a-c1d3-31e5-a242-165bd9ca2431" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="321a6c64-0763-3b22-a325-2510b9fbef6f" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: Convertor" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="5" auth="user1" locRef="3" ctx="5,0|6,0" rule="CODSTA.POD.DCTOR" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Define a no argument constructor whenever possible" tool="jtest" lineHash="-1890058929" unbViolId="24ae47c9-6f43-34db-872d-717b844f9097" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="46f2d722-fd00-3eca-a3cd-187e68d06092" locEndPos="22" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <StdViol msg="interface type 'IConvertor' is used" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="5" sev="3" auth="user1" locRef="3" ctx="5,0|6,0" rule="MOBILE.AUI" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="-1890058929" unbViolId="b5a4f967-5bab-3459-9688-1b62ad0d5ddf" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f95a71ef-4184-30a9-a523-269923c1ffbd" locEndPos="44" locType="sr" hash="469181545" locEndLn="5" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="3" rule="METRIC.CC" lnHash="-750708491" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-750708491" unbViolId="12a0159d-0a6c-3001-9b5a-ef82747db7a7" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="02d95663-98bb-3d86-94e6-031c98068471" locType="sr" locEndPos="0" hash="469181545" locEndLn="7" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="3" ctx="6,5|8,5" rule="FORMAT.U2BL" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-750708491" unbViolId="8799d6c9-5e0d-3c99-bbd8-99b14d359778" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f36b0a6b-f822-3f38-9929-71ac225177ad" locEndPos="42" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="3" ctx="6,5|8,5" rule="APSC_DV.003215.U2BL" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-750708491" unbViolId="300486f3-5fb5-33b5-be36-0226607b3ba0" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6ea7804b-966b-34dc-9430-b173f1ad9fc9" locEndPos="42" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'convertToString()'" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="2" auth="user1" locRef="3" ctx="6,5|8,5" rule="JUNIT.TEST" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-750708491" unbViolId="d1d1c72b-b8de-3754-b70a-53891ed6d79e" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e1a8e17d-6f8e-3bde-9d94-6e5582ca03f3" locEndPos="33" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="The method 'convertToString' does not have a Javadoc comment describing whether or not the method can return null" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="3" ctx="6,5|8,5" rule="JAVADOC.CRN" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="-750708491" unbViolId="b0d029fe-9e95-3a70-8f9b-ce36a085849e" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1dd7f768-f424-3ca9-b46b-416544852c90" locEndPos="33" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'convertToString()'" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="3" ctx="6,5|8,5" rule="JAVADOC.PJDM" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-750708491" unbViolId="e6bd6f6c-f969-3800-a13f-1ad778303e9f" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="da012131-ec46-30e8-9803-de001bbabdaa" locEndPos="33" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: convertToString()" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="4" auth="user1" locRef="3" ctx="6,5|8,5" rule="GLOBAL.UPPM" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="-750708491" unbViolId="27935dea-ba5e-3d5a-b0e1-c9ed728f3a0b" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="adab2784-5ade-3958-a973-c9a0b21c4796" locEndPos="33" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="Formal parameter 'a' is not declared as final" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="3" auth="user1" locRef="3" ctx="6,5|8,5" rule="CODSTA.BP.FPF" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="-750708491" unbViolId="fa8a025f-3dcd-3d5f-98a8-580807238d4f" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1a8ec52e-c761-3143-bf39-401ed0b84038" locEndPos="39" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="The length of the identifier &quot;a&quot; is less than the minimum length (2)" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="4" auth="user1" locRef="3" ctx="6,5|8,5" rule="NAMING.LLI" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="-750708491" unbViolId="74185783-5214-3210-85ef-75ff1867b234" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="805d913b-196f-3479-b642-98266c9fa13d" locEndPos="39" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="Variable 'a' does not end with 'int'" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="6" sev="4" auth="user1" locRef="3" ctx="6,5|8,5" rule="NAMING.UHN" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="-750708491" unbViolId="3bc94702-67eb-3ded-a467-be492d61d0f5" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6c6af7f3-7a55-35df-be4e-e5c653de79d7" locEndPos="39" locType="sr" hash="469181545" locEndLn="6" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="5" auth="user1" locRef="3" ctx="6,5|8,5" rule="INTER.COS" lnHash="936757658" pkg="com.parasoft.another" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="936757658" unbViolId="f7e67231-e20d-3fb1-9e0e-157c21e69810" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0050ad12-e445-39a1-8df4-5fe544854fef" locEndPos="33" locType="sr" hash="469181545" locEndLn="7" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="3" auth="user1" locRef="3" ctx="6,5|8,5" rule="CERT.STR00.COS" lnHash="936757658" pkg="com.parasoft.another" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="936757658" unbViolId="74bb3126-8c1e-31a4-af34-439239536604" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eae7a8ec-87a9-31d2-b6c3-d34d1e561b0d" locEndPos="33" locType="sr" hash="469181545" locEndLn="7" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;parasoftcn: &quot;" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="3" auth="user1" locRef="3" ctx="6,5|8,5" rule="INTER.ITT" lnHash="936757658" pkg="com.parasoft.another" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="936757658" unbViolId="95edc993-74c2-3db2-a847-6df66cb2044c" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bd076287-c1b8-3efd-b718-453c36ecb207" locEndPos="29" locType="sr" hash="469181545" locEndLn="7" goals="0,"/>
    <StdViol msg="The String literal &quot;parasoftcn: &quot; is used" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="3" auth="user1" locRef="3" ctx="6,5|8,5" rule="SECURITY.WSC.SL" lnHash="936757658" pkg="com.parasoft.another" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="936757658" unbViolId="c2e038c0-1e51-3999-ba0a-0ae611c73ce2" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b4d2a2dd-6895-323a-8b88-16d0e90c92a3" locEndPos="29" locType="sr" hash="469181545" locEndLn="7" goals="0,"/>
    <StdViol msg="Misspelled word 'parasoftcn'" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="3" auth="user1" locRef="3" ctx="6,5|8,5" rule="JAVADOC.SPELL" lnHash="936757658" pkg="com.parasoft.another" rule.header="Avoid misspelling words in Javadoc comments and string literals" tool="jtest" lineHash="936757658" unbViolId="60acc153-b634-3880-9a2e-b382ed32f714" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8d6a3cac-06b4-35ca-9ca0-08a0952e283e" locEndPos="26" locType="sr" hash="469181545" locEndLn="7" goals="0,"/>
    <StdViol msg="Called 'toString()' implicitly on a numeric object" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="7" sev="4" auth="user1" locRef="3" ctx="6,5|8,5" rule="INTER.NTS" lnHash="936757658" pkg="com.parasoft.another" rule.header="Do not call 'toString()' or 'String.valueOf()' on numeric values in an Internationalized environment" tool="jtest" lineHash="936757658" unbViolId="27566469-6d46-383f-a8bc-02f57fe550af" locStartPos="32" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="02b24415-be4e-35a3-826d-b5435d10216e" locEndPos="33" locType="sr" hash="469181545" locEndLn="7" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="10" sev="3" auth="user1" locRef="3" rule="METRIC.CC" lnHash="552024108" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="552024108" unbViolId="a168f1dd-5c9c-37fe-980d-e406b8acd474" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="681e6a1a-9259-3bf3-b1d7-8ce4a2b31981" locType="sr" locEndPos="0" hash="469181545" locEndLn="11" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'name()'" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="11" sev="2" auth="user1" locRef="3" ctx="10,5|13,5" rule="JUNIT.TEST" lnHash="-1435350657" pkg="com.parasoft.another" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-1435350657" unbViolId="ee4a890f-fa52-3ebc-99f6-c1d2a992f093" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="735adf84-6715-3479-995f-705e036b45f1" locEndPos="22" locType="sr" hash="469181545" locEndLn="11" goals="0,"/>
    <StdViol msg="The method 'name' does not have a Javadoc comment describing whether or not the method can return null" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="11" sev="3" auth="user1" locRef="3" ctx="10,5|13,5" rule="JAVADOC.CRN" lnHash="-1435350657" pkg="com.parasoft.another" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="-1435350657" unbViolId="f943d38a-7d54-3a93-bfa6-ee3d7aa33692" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3b2a3591-afa9-3a72-b5ef-d03dff2e1e1f" locEndPos="22" locType="sr" hash="469181545" locEndLn="11" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'name()'" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="11" sev="3" auth="user1" locRef="3" ctx="10,5|13,5" rule="JAVADOC.PJDM" lnHash="-1435350657" pkg="com.parasoft.another" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-1435350657" unbViolId="2a64183b-c7c1-31c9-8e79-91ecb4e9c89e" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="162e9225-f2ba-3344-822e-3573a9a5aa3a" locEndPos="22" locType="sr" hash="469181545" locEndLn="11" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;number to string convertor&quot;" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="12" sev="3" auth="user1" locRef="3" ctx="10,5|13,5" rule="INTER.ITT" lnHash="-31285632" pkg="com.parasoft.another" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="-31285632" unbViolId="aaaf0eab-808c-391d-9411-e3bc20e56482" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1b82bd62-f63e-31d8-b8d5-6399a3a0641a" locEndPos="43" locType="sr" hash="469181545" locEndLn="12" goals="0,"/>
    <StdViol msg="The String literal &quot;number to string convertor&quot; is used" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locStartln="12" sev="3" auth="user1" locRef="3" ctx="10,5|13,5" rule="SECURITY.WSC.SL" lnHash="-31285632" pkg="com.parasoft.another" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="-31285632" unbViolId="cfd72b9a-91f5-3f66-877a-cc31b948d3ae" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2d87356d-d9eb-3dfe-8dfe-56612cc971d5" locEndPos="43" locType="sr" hash="469181545" locEndLn="12" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="1" sev="3" auth="user1" locRef="4" ctx="1,0|2,0" rule="APSC_DV.003215.MCH" lnHash="-1503458703" pkg="com.parasoft.differentViolations" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="-1503458703" unbViolId="112f2c2a-2a82-381f-bc04-c4988a2a6046" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="54af5e7a-bf2c-316b-aa24-e3898d5ecfa8" locEndPos="41" locType="sr" hash="473374080" locEndLn="1" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="1" sev="2" auth="user1" locRef="4" ctx="1,0|2,0" rule="FORMAT.MCH" lnHash="-1503458703" pkg="com.parasoft.differentViolations" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="-1503458703" unbViolId="b97a9be1-242a-3cc4-855a-2dc3ca13c11a" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d041e833-f2d6-3c1a-b2fd-8b9150cc2abd" locEndPos="41" locType="sr" hash="473374080" locEndLn="1" goals="0,"/>
    <StdViol msg="Package 'com.parasoft.differentViolations' does not match user-specified regular expression '^[a-z]([a-z]|[0-9]|\.|_)+$'" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="1" sev="3" auth="user1" locRef="4" ctx="1,0|2,0" rule="NAMING.PKG" lnHash="-1503458703" pkg="com.parasoft.differentViolations" rule.header="Use a naming convention for &quot;package&quot; names" tool="jtest" lineHash="-1503458703" unbViolId="3fa1ce2b-b46c-3e70-9c09-44d145876d0d" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3aefbb30-0646-378b-a5a1-908d691c7e00" locEndPos="40" locType="sr" hash="473374080" locEndLn="1" goals="0,"/>
    <StdViol msg="Use 1 blank line before the import statements (or corresponding import comments)" ln="2" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="2" sev="3" auth="user1" locRef="4" ctx="2,0|3,0" rule="FORMAT.U2BL" lnHash="1636312570" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1636312570" unbViolId="b9144c68-e7cc-301a-aba2-4f31b58614c1" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="59474ec0-9002-34b8-82f5-4f8e1e7fffac" locEndPos="21" locType="sr" hash="473374080" locEndLn="2" goals="0,"/>
    <StdViol msg="Use 1 blank line before the import statements (or corresponding import comments)" ln="2" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="2" sev="3" auth="user1" locRef="4" ctx="2,0|3,0" rule="APSC_DV.003215.U2BL" lnHash="1636312570" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1636312570" unbViolId="3a80cb7b-e9a6-3fe7-8bcc-8207f131600f" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="37e679d8-e7d7-3a0d-b166-c03d57fd4ce2" locEndPos="21" locType="sr" hash="473374080" locEndLn="2" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user1" locRef="4" ctx="4,0|5,0" rule="FORMAT.BLCD" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-334993219" unbViolId="144ad4bd-c872-330a-84a4-06d0d8558347" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="77eb68fa-45d2-3d14-bd67-4453aee45dcf" locEndPos="2" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user1" locRef="4" ctx="4,0|5,0" rule="APSC_DV.003215.BLCD" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-334993219" unbViolId="e702398f-9c48-3e73-ac7a-281c4ea56646" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fcb920e1-0497-374e-b661-9c0c87107944" locEndPos="2" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Public clone method missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="CERT.OBJ06.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="044b16e4-8896-3434-b135-cd075af6f97a" locEndPos="31" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="2" locRef="4" ctx="4,0|5,0" tool="jtest" lineHash="-334993219" unbViolId="d7c12963-0461-3847-9acd-368b030572af" locType="sr" hash="473374080"/>
    <StdViol msg="Public clone method missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="CERT.OBJ04.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="210c21db-7fd1-3b31-b434-0c47edbc968f" locEndPos="31" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="4" ctx="4,0|5,0" tool="jtest" lineHash="-334993219" unbViolId="178c07d0-fc74-34f1-8a43-d399a6f7efb7" locType="sr" hash="473374080"/>
    <StdViol msg="Public clone method missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="OOP.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="77b4081b-7dc2-30af-bf40-0ba23c4b7ebb" locEndPos="31" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="4" ctx="4,0|5,0" tool="jtest" lineHash="-334993219" unbViolId="19f3286b-6210-303e-ad80-d2eadd522bdb" locType="sr" hash="473374080"/>
    <StdViol msg="Public clone method missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="CERT.OBJ05.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e77015be-0ca0-3150-8218-1a0d495d1918" locEndPos="31" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="1" locRef="4" ctx="4,0|5,0" tool="jtest" lineHash="-334993219" unbViolId="158be238-c6a2-3db1-a7df-2c022db686fe" locType="sr" hash="473374080"/>
    <StdViol msg="Static creation method missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="CERT.OBJ06.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d7c8ebcf-adf4-33a5-bf3f-f8f604468343" locEndPos="31" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="2" locRef="4" ctx="4,0|5,0" tool="jtest" lineHash="-334993219" unbViolId="1bb4fd60-49e1-3710-97e6-4d6d65491644" locType="sr" hash="473374080"/>
    <StdViol msg="Static creation method missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="CERT.OBJ04.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5c7abab7-d6c4-3c0b-b58c-4771a67a2188" locEndPos="31" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="4" ctx="4,0|5,0" tool="jtest" lineHash="-334993219" unbViolId="6c1e3202-3e7e-3db7-84f0-34f3a0bb0498" locType="sr" hash="473374080"/>
    <StdViol msg="Static creation method missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="OOP.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5fe52781-b031-3857-8c7b-0a5924f822d6" locEndPos="31" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="4" ctx="4,0|5,0" tool="jtest" lineHash="-334993219" unbViolId="3630022a-2b3b-3e55-a5dc-203e4b573477" locType="sr" hash="473374080"/>
    <StdViol msg="Static creation method missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="CERT.OBJ05.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a463c173-caf7-3870-8db9-60a07659e177" locEndPos="31" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="1" locRef="4" ctx="4,0|5,0" tool="jtest" lineHash="-334993219" unbViolId="a64d756e-7b9d-37f1-a94d-a804249e1a4a" locType="sr" hash="473374080"/>
    <StdViol msg="Copy constructor missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="CERT.OBJ06.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1fa50abd-4cce-30dc-829a-8183a030e13d" locEndPos="31" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="2" locRef="4" ctx="4,0|5,0" tool="jtest" lineHash="-334993219" unbViolId="a776f72c-364e-32cd-abef-3717275c49ac" locType="sr" hash="473374080"/>
    <StdViol msg="Copy constructor missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user1" locRef="4" ctx="4,0|5,0" rule="CERT.OBJ04.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="d73f81c2-045e-3954-b489-cc89f24274b4" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="499c2eed-379f-30cc-af01-c6913ed616af" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Copy constructor missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user1" locRef="4" ctx="4,0|5,0" rule="OOP.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="ab1c8663-7326-37e0-8f18-ff32e5963ba6" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a7878b34-2cca-3650-9152-df5979d78031" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Copy constructor missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="1" auth="user1" locRef="4" ctx="4,0|5,0" rule="CERT.OBJ05.MUCOP" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide mutable classes with copy functionality" tool="jtest" lineHash="-334993219" unbViolId="010b8ed4-8285-324e-a3c6-252bc57ae5ed" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2bfc71f3-3651-3d05-baca-490739bfc13c" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="5" auth="user1" locRef="4" ctx="4,0|5,0" rule="SECURITY.WSC.MCNC" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-334993219" unbViolId="ac10632d-e115-3c40-aca2-011d9ff8b2eb" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6a18277d-8b1d-32c0-b8e8-10343b9e597a" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="2" auth="user1" locRef="4" ctx="4,0|5,0" rule="CERT.OBJ07.MCNC" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-334993219" unbViolId="a98486ff-6466-30d9-b54a-cfd5ebcc5c68" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8edb3bc0-2eaf-3a4a-afd8-d9aed6c464ec" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'GenerateViolations'" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="3" auth="user1" locRef="4" ctx="4,0|5,0" rule="JAVADOC.PJDC" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-334993219" unbViolId="7c37793d-8fad-3edb-9e68-8aefc8e87ed3" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7d044b92-0da0-3cae-be83-1994ad35e38a" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; class: com.parasoft.differentViolations.GenerateViolations" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="4" auth="user1" locRef="4" ctx="4,0|5,0" rule="GLOBAL.UPPC" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Avoid globally unused &quot;public/protected&quot; types" tool="jtest" lineHash="-334993219" unbViolId="44200380-a000-30be-9e1e-f2c0473a15f2" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="37b95745-d4a1-32d2-832e-167eec894a1e" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="5" auth="user1" locRef="4" ctx="4,0|5,0" rule="SECURITY.WSC.SER" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-334993219" unbViolId="182ba4b7-1fab-3ed7-b450-3b0f5fb12503" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3e8f32fd-349e-3cbd-8069-2bdd7b7a578c" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="5" auth="user1" locRef="4" ctx="4,0|5,0" rule="CWE.499.SER" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-334993219" unbViolId="8f5da156-0b3a-3a1a-a1bb-8ba8d6e9ca51" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e044fe1c-613e-38d2-baa9-857e0298e561" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="5" auth="user1" locRef="4" ctx="4,0|5,0" rule="SECURITY.WSC.DSER" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="-334993219" unbViolId="a4db2771-2509-3523-99e4-4f95a2281174" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="324f5608-f66f-377e-87a4-d214618f1df7" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: GenerateViolations" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="4" sev="5" auth="user1" locRef="4" ctx="4,0|5,0" rule="CODSTA.POD.DCTOR" lnHash="-334993219" pkg="com.parasoft.differentViolations" rule.header="Define a no argument constructor whenever possible" tool="jtest" lineHash="-334993219" unbViolId="5ba61406-d060-3dd8-939e-d5229c33f12f" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="5f114e9b-b3ea-3619-b2c4-6c8802605b63" locEndPos="31" locType="sr" hash="473374080" locEndLn="4" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="3" auth="user1" locRef="4" ctx="5,0|6,0" rule="FORMAT.U2BL" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1349339453" unbViolId="3cf91d14-78eb-3662-8fc2-e6bb32c4c9e4" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7797efa4-ed37-314b-a49c-29f0a91364e3" locEndPos="12" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="3" auth="user1" locRef="4" ctx="5,0|6,0" rule="APSC_DV.003215.U2BL" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1349339453" unbViolId="df808567-ca7f-363f-8b33-751f87aad179" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="18922417-064f-3938-8b8b-a3eb72a76678" locEndPos="12" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Consider changing the raw type 'Map' to a parameterized type" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="3" auth="user1" locRef="4" ctx="5,0|6,0" rule="CODSTA.POD.UPT" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Enforce or avoid the use of parameterized types" tool="jtest" lineHash="-1349339453" unbViolId="6b7b3d2a-ace9-36cc-9801-70cc50276bb1" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a51af2c2-bbad-36e7-854e-f1082646169c" locEndPos="7" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="interface type 'Map' is used" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="3" auth="user1" locRef="4" ctx="5,0|6,0" rule="MOBILE.AUI" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="-1349339453" unbViolId="7d35fa79-19fc-348c-afb4-3d0833093eee" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1c44b089-db64-378b-8e45-d681c95ca933" locEndPos="7" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Field 'map' should be declared &quot;private&quot;" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="2" auth="user1" locRef="4" ctx="5,0|6,0" rule="GLOBAL.DPAF" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Declare package-private fields as inaccessible as possible" tool="jtest" lineHash="-1349339453" unbViolId="128b9546-f44a-3587-9290-77a48abd1487" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="159d62e5-a92a-3b85-9e1a-7ee82cd8a28e" locEndPos="11" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Missing 'getMap()' method for field 'map'" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="4" auth="user1" locRef="4" ctx="5,0|6,0" rule="BEAN.NFM" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="-1349339453" unbViolId="f7615e37-dea3-3c92-8299-fa8b025ca930" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fcd50332-c1cf-369c-9dd2-71ed6bcc2ec5" locEndPos="11" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Missing 'setMap()' method for field 'map'" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="4" auth="user1" locRef="4" ctx="5,0|6,0" rule="BEAN.NFM" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="-1349339453" unbViolId="a254150b-2af3-3940-864b-c65070fa5ee3" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3a3d50d7-ed99-3f8e-b9e3-c277dc999528" locEndPos="11" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <StdViol msg="Field 'map' is not initialized in its declaration" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="5" sev="4" auth="user1" locRef="4" ctx="5,0|6,0" rule="INIT.CSI" lnHash="-1349339453" pkg="com.parasoft.differentViolations" rule.header="Explicitly initialize all fields" tool="jtest" lineHash="-1349339453" unbViolId="e24a3271-e930-3934-b614-0b14e6b68061" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="75b8d930-394e-32f4-86b0-4cab06d55ba2" locEndPos="11" locType="sr" hash="473374080" locEndLn="5" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="7" sev="3" auth="user1" locRef="4" rule="METRIC.CC" lnHash="676514228" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="676514228" unbViolId="aa2df3e0-67c9-34f3-9982-43445e15db38" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="2a1f472d-34a5-3eb6-ae20-c22475594991" locType="sr" locEndPos="0" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'generateViolations()'" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="7" sev="2" auth="user1" locRef="4" ctx="7,5|14,5" rule="JUNIT.TEST" lnHash="676514228" pkg="com.parasoft.differentViolations" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="676514228" unbViolId="cd2ee116-41e3-35ab-bc2f-449e5a93fdb8" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a0005a80-801a-3c10-9bca-e575bc928352" locEndPos="34" locType="sr" hash="473374080" locEndLn="7" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'generateViolations()'" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="7" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="JAVADOC.PJDM" lnHash="676514228" pkg="com.parasoft.differentViolations" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="676514228" unbViolId="b5321ff4-5c0b-3319-8c3e-c403d5092e31" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="088ba661-e4a1-3530-9b22-ce84924c1a7a" locEndPos="34" locType="sr" hash="473374080" locEndLn="7" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: generateViolations()" ln="7" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="7" sev="4" auth="user1" locRef="4" ctx="7,5|14,5" rule="GLOBAL.UPPM" lnHash="676514228" pkg="com.parasoft.differentViolations" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="676514228" unbViolId="69044322-e6c3-3ae7-905d-f7a26807fe61" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1edecbb5-5bfd-3471-ac16-7f1e337c74d4" locEndPos="34" locType="sr" hash="473374080" locEndLn="7" goals="0,"/>
    <StdViol msg="Value of &quot;map1&quot; is never used" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="BD.PB.VOVR" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Avoid unused values" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" lang="java" violId="2581e87f-69ba-3ee5-8dab-33754666d63a" locEndPos="23" urgent="true" locEndLn="8" goals="1," locStartln="8" sev="3" locRef="4" ctx="7,5|14,5" tool="jtest" lineHash="-723063895" unbViolId="6adb3916-2728-3587-be97-4c7c790f8dda" locType="sr" hash="473374080"/>
    <StdViol msg="Value of &quot;map1&quot; is never used" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" auth="user1" rule="CWE.563.VOVR" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Avoid unused values" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" lang="java" violId="74679636-4925-3dae-9f82-e7146b111019" locEndPos="23" urgent="true" locEndLn="8" goals="1," locStartln="8" sev="3" locRef="4" ctx="7,5|14,5" tool="jtest" lineHash="-723063895" unbViolId="2908e7d9-e09e-387b-8d7a-fca638a0add9" locType="sr" hash="473374080"/>
    <StdViol msg="Consider changing the raw type 'Map' to a parameterized type" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="8" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CODSTA.POD.UPT" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Enforce or avoid the use of parameterized types" tool="jtest" lineHash="-723063895" unbViolId="87f335be-6ba1-304a-9d38-bb2451a02bfc" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8afba6ea-59c8-35c0-b076-bb701076dbe0" locEndPos="11" locType="sr" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="interface type 'Map' is used" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="8" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="MOBILE.AUI" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="-723063895" unbViolId="06228039-75c5-3502-93b1-5dd618dac7a8" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1e6ef1cb-94bf-324c-9e25-ccbc847f8f8d" locEndPos="11" locType="sr" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="Variable 'map1' is never used" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="8" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="UC.AURV" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="-723063895" unbViolId="5d5ae64d-b0c2-34e2-bc09-a3a3e032555e" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9160c4fd-81ac-3cf8-a72d-aa1933b1961f" locEndPos="16" locType="sr" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="Variable 'map1' is never used" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="8" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.563.AURV" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="-723063895" unbViolId="84218a44-7abe-35e7-9496-be2dc4bcb8cd" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fb4c0c76-5c90-3733-8f95-0a6904b861b1" locEndPos="16" locType="sr" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="The declaration of the local variable 'map1' is not followed by a comment" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="8" sev="5" auth="user1" locRef="4" ctx="7,5|14,5" rule="CODSTA.READ.CLV" lnHash="-723063895" pkg="com.parasoft.differentViolations" rule.header="Comment local variables" tool="jtest" lineHash="-723063895" unbViolId="e97b1ecb-a595-32eb-8ea9-2206a77045c5" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9f665652-6287-3aee-810f-a533d8dc6945" locEndPos="16" locType="sr" hash="473374080" locEndLn="8" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.200.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="412c8f9b-db95-3231-8802-11d4b63a01e3" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7adde29a-550f-347a-b63e-a6fa58a8b7bf" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.209.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="c8a757aa-bef1-35ef-a3eb-a1e2bfa1292f" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c73077a6-93a2-3272-8246-f3e485e83b34" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2017.A6.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="bfc64913-f104-3dff-8a89-72be5894a503" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a74ebf65-6bd2-3f28-95c8-4ed940515d27" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2019.API10.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="5fa74efa-92f3-3ed1-a3d9-4af742f64fd5" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f8729737-0092-3a3a-ac56-0541eaf9129d" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2021.A5.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="519747a7-8e1f-300f-9ae8-966b8d0ba6bc" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="201aaeba-5fc1-3d11-aad8-2172db3718f6" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="PCIDSS32.655.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="d5325caf-ba50-38b1-9951-edd2f9f584bc" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="92d2e5b7-84e1-325e-b670-b8deeb8aa23a" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="SECURITY.ESD.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="e8204ad8-1d61-3905-a863-36a26154e0cf" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="90b52fa4-11c3-3906-ba1c-cc25df563ca0" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="2" auth="user1" locRef="4" ctx="7,5|14,5" rule="APSC_DV.001460.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="59414c77-3a0f-3df0-975d-1f39906724a5" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="48eca320-8cbf-38b7-9586-fc15bb52f10e" locEndPos="44" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <StdViol msg="field 'out' is used multiple times" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="MOBILE.ACFM" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid accessing same fields and methods multiple times" tool="jtest" lineHash="344278090" unbViolId="12a2e3e2-54ba-3432-8cd2-e500a0923321" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ab3406a4-ae97-3354-8eb7-ce9ec3a75628" locEndPos="18" locType="sr" hash="473374080" locEndLn="9" goals="0,"/>
    <DupViol msg="Duplicated string literal: &quot;string literal&quot;" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="9" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CDD.DUPS" lnHash="344278090" rule.header="Avoid string literal duplication" tool="jtest" lineHash="344278090" unbViolId="71010c3f-bc20-3db5-8b75-8b0bfef8a313" locStartPos="27" analyzer="com.parasoft.jtest.standards.dupcode" lang="java" violId="63a2fcfe-a396-3283-bbaa-bf3a072903a2" locType="sr" locEndPos="42" urgent="true" hash="473374080" locEndLn="9" goals="1,">
      <ElDescList>
        <ElDesc lineHash="344278090" ln="9" srcRngStartPos="27" srcRngEndPos="42" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="9" srcRngEndLn="9" srcRngFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="[Line 9] Duplicated string literal in file 'GenerateViolations.java'" rngLn="9"/>
        <ElDesc lineHash="344278090" ln="10" srcRngStartPos="27" srcRngEndPos="42" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="10" srcRngEndLn="10" srcRngFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="[Line 10] Duplicated string literal in file 'GenerateViolations.java'" rngLn="10"/>
        <ElDesc lineHash="344278090" ln="11" srcRngStartPos="27" srcRngEndPos="42" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="11" srcRngEndLn="11" srcRngFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="[Line 11] Duplicated string literal in file 'GenerateViolations.java'" rngLn="11"/>
        <ElDesc lineHash="344278090" ln="12" srcRngStartPos="27" srcRngEndPos="42" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="12" srcRngEndLn="12" srcRngFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="[Line 12] Duplicated string literal in file 'GenerateViolations.java'" rngLn="12"/>
        <ElDesc lineHash="344278090" ln="13" srcRngStartPos="27" srcRngEndPos="42" locRef="4" locType="sr" srcRnghash="473374080" srcRngStartln="13" srcRngEndLn="13" srcRngFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" desc="[Line 13] Duplicated string literal in file 'GenerateViolations.java'" rngLn="13"/>
      </ElDescList>
    </DupViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.200.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="ae3f9a0f-6418-35ac-ba48-6bd7f9fd2a33" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c9a9cb71-acf1-3a35-9e4b-b3cb51544822" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.209.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="75431365-4319-38f1-95fc-498884fededd" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dc5d1742-ba21-3390-9229-b5ca2ccfa308" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2017.A6.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="77594775-912e-3d37-adb9-ab2d80be8715" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b8bb0225-af38-37ff-bddd-03b15efd4be9" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2019.API10.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="87f0b90d-a1e8-3ea9-8c32-bfee945c32e5" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2e4bed92-020d-3aba-bcd7-442da9fd850f" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2021.A5.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="0dcf337e-4172-3f92-b21e-0173b1127cf8" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="06de356f-27e7-334e-8e7d-4eae6f19b5dd" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="PCIDSS32.655.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="388c8fe4-e952-3bea-ba7c-3e228083b80a" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a8eb8749-190f-3e93-b41d-f2e924a75ecc" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="SECURITY.ESD.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="f5e1e5c2-e442-3095-88a9-e0de5e813e41" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="45f08d8e-2830-3f6c-a339-1612c4b7d55d" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="2" auth="user1" locRef="4" ctx="7,5|14,5" rule="APSC_DV.001460.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="4c35721a-7da1-37c6-b59e-1962a8e51596" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b80a3d1b-b09b-3187-ae91-842a927bfbeb" locEndPos="44" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="field 'out' is used multiple times" ln="10" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="10" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="MOBILE.ACFM" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid accessing same fields and methods multiple times" tool="jtest" lineHash="344278090" unbViolId="d967c7d4-89f6-300e-a480-23d55e9d318c" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e483db38-46cc-3731-9a48-b2d60b22bc0f" locEndPos="18" locType="sr" hash="473374080" locEndLn="10" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.200.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="27a37560-6268-395a-8ef9-cecade6a76a3" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eada5e18-057c-30e0-9996-8f2f8b32838d" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.209.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="e63adb01-37fb-3528-b3cb-068f500468a0" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1563d626-ae3a-37d1-8240-eec1d6291c8f" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2017.A6.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="e01a62de-da2a-3fcf-96bf-9e54643c453d" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="13e3a8b9-3c39-3b97-8c39-0de0455bd3a8" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2019.API10.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="b6417c67-f902-365a-a4fd-373c77335d94" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d825b2a3-ac04-30f1-a6b3-d35415b8342c" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2021.A5.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="22de20b1-3ae4-3cbf-90f6-8f5deb3b2655" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d21d6f27-a853-3dc3-a141-9f71f4ca05a0" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="PCIDSS32.655.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="86b17980-a0c4-34e3-8b5e-43c36604cc9e" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f4f77ff0-69ba-3c15-b3c4-d22dab72bba7" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="SECURITY.ESD.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="39c2a3f8-77cb-3cd2-a936-10d4a8848f4c" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b71f9642-aaea-3b41-ae93-0eb3c5857044" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="2" auth="user1" locRef="4" ctx="7,5|14,5" rule="APSC_DV.001460.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="3d68ca1c-c32a-383b-b039-6d10e9b4eb88" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="565e4729-4eec-3a5a-b068-a907cbe17e5b" locEndPos="44" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="field 'out' is used multiple times" ln="11" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="11" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="MOBILE.ACFM" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid accessing same fields and methods multiple times" tool="jtest" lineHash="344278090" unbViolId="2f56380f-90a2-3496-b545-fe51627ea7c7" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="94567623-9be4-3113-b7d1-2801136a85a3" locEndPos="18" locType="sr" hash="473374080" locEndLn="11" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.200.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="6f94d97b-c0a7-3a5a-bea9-822f6e56c937" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d59385f0-5530-3df7-a1f8-2e5b3b8453ed" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.209.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="b4a58e00-1011-3f17-8ff6-dd5a5ce53bcc" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e7bfb238-85eb-3ad4-b0a5-e20b620ee9b4" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2017.A6.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="34eff26b-c59c-3dfb-bb4e-ecae28340b99" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3456abdd-96c4-3051-83e0-a6a4ca556216" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2019.API10.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="f83a402d-10c0-335b-b351-91e112e0fd1d" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="65356355-929e-3415-b650-507c790f3e2f" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2021.A5.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="bc0cdbbd-b05c-3515-8187-80b13eeb3df6" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9e219cd2-9e5f-3555-85df-e1d8775d8f87" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="PCIDSS32.655.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="4448e9b7-1bfb-340d-aa91-638df1c8a9b8" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="02a9c042-a660-3d61-9384-c32724939227" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="SECURITY.ESD.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="31dc9409-c5b1-3e34-9081-c3e6cdd13bd9" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1b8f87df-52dd-3eb1-94c8-0cf4e4d20405" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="2" auth="user1" locRef="4" ctx="7,5|14,5" rule="APSC_DV.001460.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="6175647f-a524-370e-b4a5-cfac9e262475" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4d827f6a-00c5-3fb4-a3e6-5162821f9852" locEndPos="44" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="field 'out' is used multiple times" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="12" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="MOBILE.ACFM" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid accessing same fields and methods multiple times" tool="jtest" lineHash="344278090" unbViolId="a0b7cec4-db8a-3b6c-a045-1f5089f3bf5e" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1161107d-f5d9-3bc7-841d-bbcb06172268" locEndPos="18" locType="sr" hash="473374080" locEndLn="12" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.200.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="5fb361e5-8780-3a08-8476-a69ffb9bd2ac" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6a5a000e-5815-36d2-8c2b-82e44a1563c8" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="CWE.209.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="0c3be82c-8340-3804-b605-67b1ceb56ab2" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3a333168-de13-3c5b-860f-14876a800472" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2017.A6.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="9619a709-a0d7-37fa-93a5-dc476865bc3b" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bec25ff6-d2cf-325c-9394-0426e7280e7d" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2019.API10.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="d1eba96c-0a69-3f9d-a746-c130df5472de" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b72fcebe-a108-3066-824d-3d14c71e02bc" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="OWASP2021.A5.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="4520a680-3003-3ea6-9cbc-f599f5bf587e" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="75acd435-925e-3a95-9e19-ca6466ec7d75" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="PCIDSS32.655.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="b6c813b9-71f9-3708-9d7d-91fb8f091b11" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="feace9c2-d4ee-3916-8e9c-8e6c43e46349" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="SECURITY.ESD.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="99d68f1c-cbc9-32cb-b683-ebd642adc177" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="13504049-35c6-3625-9249-904ee24e0549" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="2" auth="user1" locRef="4" ctx="7,5|14,5" rule="APSC_DV.001460.SIO" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="344278090" unbViolId="c165c78d-c119-3160-aac1-f18f6434cbb1" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="67ae1949-2b64-35fd-b2b0-ea3fc0d4719d" locEndPos="44" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="field 'out' is used multiple times" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locStartln="13" sev="3" auth="user1" locRef="4" ctx="7,5|14,5" rule="MOBILE.ACFM" lnHash="344278090" pkg="com.parasoft.differentViolations" rule.header="Avoid accessing same fields and methods multiple times" tool="jtest" lineHash="344278090" unbViolId="1d4725bc-7a29-33c1-8114-922c8ab29738" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="baccd620-5ca3-3ec0-b423-8923e2719f54" locEndPos="18" locType="sr" hash="473374080" locEndLn="13" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" auth="user1" rule="APSC_DV.003215.MCH" lnHash="1424907812" pkg="com.parasoft.interfaces" rule.header="Include a meaningful file header comment in every source file" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c05b3c16-96f4-320a-ad03-78b5bd67f00e" locEndPos="32" urgent="true" locEndLn="1" goals="1," locStartln="1" sev="3" locRef="5" ctx="1,0|2,0" tool="jtest" lineHash="1424907812" unbViolId="5552c708-d1cd-30d3-adcf-c9d492876959" locType="sr" hash="-1706285489"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" auth="user1" rule="FORMAT.MCH" lnHash="1424907812" pkg="com.parasoft.interfaces" rule.header="Include a meaningful file header comment in every source file" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7a225980-6943-30b9-8546-b423f19a8992" locEndPos="32" urgent="true" locEndLn="1" goals="1," locStartln="1" sev="2" locRef="5" ctx="1,0|2,0" tool="jtest" lineHash="1424907812" unbViolId="4f4f77e3-4cbf-397f-b013-1f7933175230" locType="sr" hash="-1706285489"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" auth="user1" rule="FORMAT.BLCD" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b2c669a5-72c9-3a1f-8aaf-c8471a0a64aa" locEndPos="2" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="3" locRef="5" ctx="3,0|4,0" tool="jtest" lineHash="-1541850938" unbViolId="28f27e2e-c02f-358a-ad07-9484e2ff5d57" locType="sr" hash="-1706285489"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" auth="user1" rule="APSC_DV.003215.BLCD" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="93f8e40e-a848-3b38-bb8a-dfcd26d171ab" locEndPos="2" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="3" locRef="5" ctx="3,0|4,0" tool="jtest" lineHash="-1541850938" unbViolId="25514c39-8cb6-36c2-adf1-c41f11a4c603" locType="sr" hash="-1706285489"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" auth="user1" rule="SECURITY.WSC.MCNC" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Make your classes noncloneable" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="53a5f138-6748-3e45-b48c-838f1efab235" locEndPos="27" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="5" locRef="5" ctx="3,0|4,0" tool="jtest" lineHash="-1541850938" unbViolId="9e9a2c0a-760e-3c54-bf0f-f2b7548b0ef3" locType="sr" hash="-1706285489"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" auth="user1" rule="CERT.OBJ07.MCNC" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Make your classes noncloneable" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e71a062b-108a-31b3-bc26-a515852b5e2e" locEndPos="27" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="2" locRef="5" ctx="3,0|4,0" tool="jtest" lineHash="-1541850938" unbViolId="6fbce022-1ec9-3be5-95fb-ad5a9ecdad37" locType="sr" hash="-1706285489"/>
    <StdViol msg="Missing Javadoc comment for 'IConvertor'" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="3" sev="3" auth="user1" locRef="5" ctx="3,0|4,0" rule="JAVADOC.PJDC" lnHash="-1541850938" pkg="com.parasoft.interfaces" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-1541850938" unbViolId="3496c9a0-fc1a-34b4-a23b-cb86b0a704f3" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d5cc1a38-ded6-31b0-b8f8-db011d70cf7a" locEndPos="27" locType="sr" hash="-1706285489" locEndLn="3" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" auth="user1" rule="FORMAT.U2BL" lnHash="-466599936" pkg="com.parasoft.interfaces" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb0a8a88-a42b-386d-ae12-a195bba71ef4" locEndPos="18" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="5" ctx="4,5|4,18" tool="jtest" lineHash="-466599936" unbViolId="f9427bd0-21f1-3233-a515-5a15b05e08ac" locType="sr" hash="-1706285489"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" auth="user1" rule="APSC_DV.003215.U2BL" lnHash="-466599936" pkg="com.parasoft.interfaces" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f445771c-ff85-3900-9298-264cf169bb52" locEndPos="18" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="5" ctx="4,5|4,18" tool="jtest" lineHash="-466599936" unbViolId="b2bfad2b-e8a5-33b2-b898-4b527d96110a" locType="sr" hash="-1706285489"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="4" sev="3" auth="user1" locRef="5" rule="METRIC.CC" lnHash="-466599936" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-466599936" unbViolId="455d4b75-0653-3514-90b8-eb935c1be683" locStartPos="5" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="b4d33e51-6c51-381c-ae24-72ae0baa6667" locType="sr" locEndPos="18" hash="-1706285489" locEndLn="4" goals="0,"/>
    <StdViol msg="The method 'name' does not have a Javadoc comment describing whether or not the method can return null" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" auth="user1" rule="JAVADOC.CRN" lnHash="-466599936" pkg="com.parasoft.interfaces" rule.header="Always include a description of whether or not a method can return null in the Javadoc" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1ee5655e-b56a-30ee-83dd-31e0969ec73b" locEndPos="15" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="5" ctx="4,5|4,18" tool="jtest" lineHash="-466599936" unbViolId="4d5f0832-3316-3f84-9cb6-0870ced45abd" locType="sr" hash="-1706285489"/>
    <StdViol msg="Missing Javadoc comment for method 'name()'" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" locStartln="4" sev="3" auth="user1" locRef="5" ctx="4,5|4,18" rule="JAVADOC.PJDM" lnHash="-466599936" pkg="com.parasoft.interfaces" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-466599936" unbViolId="e37032c0-008e-3f66-8ba4-9ed2246f523b" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c0507e54-4909-353e-a67e-be815833d7b7" locEndPos="15" locType="sr" hash="-1706285489" locEndLn="4" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="APSC_DV.003215.MCH" lnHash="1222468992" pkg="com.parasoft.interfaces2" rule.header="Include a meaningful file header comment in every source file" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6cab31eb-980c-3e04-982c-73e623a3d273" locEndPos="33" urgent="true" locEndLn="1" goals="1," locStartln="1" sev="3" locRef="6" ctx="1,0|2,0" tool="jtest" lineHash="1222468992" unbViolId="eb4dda1f-5a01-3cb2-99fd-41b18cbdce53" locType="sr" hash="1200206342"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="FORMAT.MCH" lnHash="1222468992" pkg="com.parasoft.interfaces2" rule.header="Include a meaningful file header comment in every source file" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f9db6047-c6da-37b3-adb3-7e76965a21e1" locEndPos="33" urgent="true" locEndLn="1" goals="1," locStartln="1" sev="2" locRef="6" ctx="1,0|2,0" tool="jtest" lineHash="1222468992" unbViolId="9b6f9b4d-12b6-3307-a3c3-a7fd509d07e1" locType="sr" hash="1200206342"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="FORMAT.BLCD" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f668ecd9-1f9a-3eba-bbdf-4fc38368e587" locEndPos="2" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="3" locRef="6" ctx="3,0|4,0" tool="jtest" lineHash="-244542872" unbViolId="06b7f8ae-8435-3bbf-b556-b6615c809515" locType="sr" hash="1200206342"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="APSC_DV.003215.BLCD" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4c9acd86-f8c9-33b2-892e-4dd865b34511" locEndPos="2" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="3" locRef="6" ctx="3,0|4,0" tool="jtest" lineHash="-244542872" unbViolId="45db3753-c628-3481-8c7e-b48231f86f43" locType="sr" hash="1200206342"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="SECURITY.WSC.MCNC" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Make your classes noncloneable" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d78d9974-7208-33f5-b947-7727b469f35a" locEndPos="28" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="5" locRef="6" ctx="3,0|4,0" tool="jtest" lineHash="-244542872" unbViolId="7b99d78c-6352-3edb-9222-ceb97b471751" locType="sr" hash="1200206342"/>
    <StdViol msg="'clone()' method is missing" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="CERT.OBJ07.MCNC" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Make your classes noncloneable" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="36d85936-2b88-330b-b700-1cf01c87251c" locEndPos="28" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="2" locRef="6" ctx="3,0|4,0" tool="jtest" lineHash="-244542872" unbViolId="12d69f7f-de51-33be-90f3-28dd97e031a4" locType="sr" hash="1200206342"/>
    <StdViol msg="Missing Javadoc comment for 'ICalculator'" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="JAVADOC.PJDC" lnHash="-244542872" pkg="com.parasoft.interfaces2" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d8131a3a-3ace-37a9-a0dd-637f8a1ee1b8" locEndPos="28" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="3" locRef="6" ctx="3,0|4,0" tool="jtest" lineHash="-244542872" unbViolId="c0544fb5-77b4-30aa-b6bd-3355f25e17e5" locType="sr" hash="1200206342"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="3" auth="user1" locRef="6" rule="METRIC.CC" lnHash="-1576147249" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-1576147249" unbViolId="b4cb91ad-d3f6-3ecf-bfcf-8c62951a26b1" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="fec60062-9c37-38a8-afe6-ef303a24f32b" locType="sr" locEndPos="0" hash="1200206342" locEndLn="5" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="FORMAT.U2BL" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7a839ab9-55d0-313f-a176-6d9fb7043652" locEndPos="37" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="6" ctx="4,5|6,5" tool="jtest" lineHash="-1576147249" unbViolId="0a95325b-ec6b-388f-bcb6-2c0a2ed0453d" locType="sr" hash="1200206342"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="APSC_DV.003215.U2BL" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4b2254b4-c380-3942-ba63-a80b1e46822b" locEndPos="37" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="6" ctx="4,5|6,5" tool="jtest" lineHash="-1576147249" unbViolId="c881d837-2a0b-3b09-a831-9d7120f13e1f" locType="sr" hash="1200206342"/>
    <StdViol msg="Indentation should be 0 spaces" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="FORMAT.IND" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Enforce number of space(s) for indentation" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c96f32d7-2f5f-3521-bd98-9d12e56b0417" locEndPos="37" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="6" ctx="4,5|6,5" tool="jtest" lineHash="-1576147249" unbViolId="03e706d9-3895-3bea-ba98-1f79df96640a" locType="sr" hash="1200206342"/>
    <StdViol msg="Indentation should be 0 spaces" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="APSC_DV.003215.IND" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Enforce number of space(s) for indentation" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6819d040-5d7c-3c21-a950-4daf57a5b750" locEndPos="37" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="6" ctx="4,5|6,5" tool="jtest" lineHash="-1576147249" unbViolId="0b8879d3-74da-3068-870a-457706ad97ed" locType="sr" hash="1200206342"/>
    <StdViol msg="Missing Javadoc comment for method 'minus()'" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="JAVADOC.PJDM" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="23aab279-c1a9-3279-b973-a56f55c6641d" locEndPos="21" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="3" locRef="6" ctx="4,5|6,5" tool="jtest" lineHash="-1576147249" unbViolId="99214069-ecbc-36a0-9ba1-d5d39f249077" locType="sr" hash="1200206342"/>
    <StdViol msg="The length of the identifier &quot;a&quot; is less than the minimum length (2)" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" auth="user1" rule="NAMING.LLI" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="926998b8-cd1d-3430-a495-97cbcc21e67c" locEndPos="27" urgent="true" locEndLn="4" goals="1," locStartln="4" sev="4" locRef="6" ctx="4,5|6,5" tool="jtest" lineHash="-1576147249" unbViolId="ce87f975-f5d3-362f-960c-18d6dab8ab02" locType="sr" hash="1200206342"/>
    <StdViol msg="Variable 'a' does not end with 'int'" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="4" auth="user1" locRef="6" ctx="4,5|6,5" rule="NAMING.UHN" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="-1576147249" unbViolId="d4ec865f-a207-3b64-a15a-593963a61b52" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7141e289-2f13-3ca4-8e6d-127ef5bee449" locEndPos="27" locType="sr" hash="1200206342" locEndLn="4" goals="0,"/>
    <StdViol msg="The length of the identifier &quot;b&quot; is less than the minimum length (2)" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="4" auth="user1" locRef="6" ctx="4,5|6,5" rule="NAMING.LLI" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Follow limits for the lengths of type, method, field, parameter, and variable names" tool="jtest" lineHash="-1576147249" unbViolId="df0b4a2e-9b34-3e81-9c00-4fa25225d504" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="057ca0ab-07d3-3d4f-97b7-703457299b17" locEndPos="34" locType="sr" hash="1200206342" locEndLn="4" goals="0,"/>
    <StdViol msg="Variable 'b' does not end with 'int'" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" locStartln="4" sev="4" auth="user1" locRef="6" ctx="4,5|6,5" rule="NAMING.UHN" lnHash="-1576147249" pkg="com.parasoft.interfaces2" rule.header="Use Hungarian notation for variables" tool="jtest" lineHash="-1576147249" unbViolId="fc31564f-c30c-3c3e-921f-323a20f9cac6" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="734cf001-b011-3988-9f95-946798467b13" locEndPos="34" locType="sr" hash="1200206342" locEndLn="4" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="1" sev="3" auth="user1" locRef="7" ctx="1,0|2,0" rule="APSC_DV.003215.MCH" lnHash="1221461159" pkg="com.parasoft.nested" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1221461159" unbViolId="81f8c06d-9459-3147-b84f-75bd201bd1de" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="365ec830-d8e7-324f-9557-732bfe83c456" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="1" goals="0,"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="1" sev="2" auth="user1" locRef="7" ctx="1,0|2,0" rule="FORMAT.MCH" lnHash="1221461159" pkg="com.parasoft.nested" rule.header="Include a meaningful file header comment in every source file" tool="jtest" lineHash="1221461159" unbViolId="0a1dc0a7-07c3-3936-8d4f-26442b712319" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="67eaec52-86cf-328e-af98-15019310e206" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="1" goals="0,"/>
    <StdViol msg="This static import should be eliminated" ln="3" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="3" sev="3" auth="user1" locRef="7" ctx="3,0|4,0" rule="CODSTA.READ.ASIS" lnHash="-882382877" pkg="com.parasoft.nested" rule.header="Avoid static import statements" tool="jtest" lineHash="-882382877" unbViolId="882843a6-91e6-36e4-a0b4-4fdf9649e759" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="adcce105-9879-3964-a383-67c69ded1996" locEndPos="59" locType="sr" hash="-1917579824" locEndLn="3" goals="0,"/>
    <StdViol msg="This static import should be eliminated" ln="4" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="4" sev="3" auth="user1" locRef="7" ctx="4,0|5,0" rule="CODSTA.READ.ASIS" lnHash="1898483036" pkg="com.parasoft.nested" rule.header="Avoid static import statements" tool="jtest" lineHash="1898483036" unbViolId="512fec73-ac9c-30f7-aaae-00437bb63b9c" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e28bca6e-3c63-3da9-a0ca-fea4f46a3852" locEndPos="61" locType="sr" hash="-1917579824" locEndLn="4" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="3" auth="user1" locRef="7" ctx="6,0|7,0" rule="FORMAT.BLCD" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-784183754" unbViolId="ed13ff3a-f1d4-374e-8378-67af5761e241" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0e619290-a756-34b9-a007-8696dd4a7124" locEndPos="2" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="3" auth="user1" locRef="7" ctx="6,0|7,0" rule="APSC_DV.003215.BLCD" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-784183754" unbViolId="586a16b0-2b1e-37c0-b75d-055fa75fa02d" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2f32fc01-6189-3b89-836d-e2cc8c0c5967" locEndPos="2" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="5" auth="user1" locRef="7" ctx="6,0|7,0" rule="SECURITY.WSC.MCNC" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-784183754" unbViolId="e6d0db8b-361c-3048-8c2d-9ca2f91757cd" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="22749ecd-9f4f-3e30-9727-36b47c403f78" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="2" auth="user1" locRef="7" ctx="6,0|7,0" rule="CERT.OBJ07.MCNC" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-784183754" unbViolId="e6659685-b3c0-3e0b-85d5-4a0f8fbdb2cc" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="49d2c473-7adf-3bbb-b526-397258d8d223" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'PhoneFactory'" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="3" auth="user1" locRef="7" ctx="6,0|7,0" rule="JAVADOC.PJDC" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-784183754" unbViolId="2c92c058-38a7-3cc9-8b9f-d56773ba285f" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7cd68496-e28f-382c-b3e8-38ed253827a5" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; class: com.parasoft.nested.PhoneFactory" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="4" auth="user1" locRef="7" ctx="6,0|7,0" rule="GLOBAL.UPPC" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Avoid globally unused &quot;public/protected&quot; types" tool="jtest" lineHash="-784183754" unbViolId="a4116b7b-52f2-32e0-aa24-3904d8ab43f8" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f107af8f-f1d2-347a-8442-e1115d419496" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="4" auth="user1" locRef="7" ctx="6,0|7,0" rule="SECURITY.WSC.FIMU" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make immutable classes final" tool="jtest" lineHash="-784183754" unbViolId="c2b7d5ee-ea3a-313a-8ef9-e7b0fb54245e" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c7088337-7136-3cd2-85fd-f89cbf5b423c" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="5" auth="user1" locRef="7" ctx="6,0|7,0" rule="SECURITY.WSC.SER" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-784183754" unbViolId="75d9a806-50e9-3967-8938-7a35bcccd57b" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4d43330d-fc1e-36eb-92b6-ed6a27892ecf" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="5" auth="user1" locRef="7" ctx="6,0|7,0" rule="CWE.499.SER" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="-784183754" unbViolId="d2c2612b-5e2d-3edd-be06-23f086298f69" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d9c32afd-9afc-3e27-819b-e17b6ab9ddf3" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="5" auth="user1" locRef="7" ctx="6,0|7,0" rule="SECURITY.WSC.DSER" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="-784183754" unbViolId="e6bcf292-ffa2-3517-a23b-57232c9c0138" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8113f5d8-a90c-34ff-a4b9-e7c733a2e9cd" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: PhoneFactory" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="6" sev="5" auth="user1" locRef="7" ctx="6,0|7,0" rule="CODSTA.POD.DCTOR" lnHash="-784183754" pkg="com.parasoft.nested" rule.header="Define a no argument constructor whenever possible" tool="jtest" lineHash="-784183754" unbViolId="e5db6f5b-cb6d-3aaa-9996-ec5e2f0c5bdd" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="2cb9b0f3-682e-33c7-868c-e52371600673" locEndPos="25" locType="sr" hash="-1917579824" locEndLn="6" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="8" sev="3" auth="user1" locRef="7" rule="METRIC.CC" lnHash="30623970" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="30623970" unbViolId="929d3720-d5fa-3231-b39b-f5db25a163d3" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="f23431ef-3d18-3fa4-8278-93c671b83874" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="9" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'getIphone4()'" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="8" sev="2" auth="user1" locRef="7" ctx="8,5|10,5" rule="JUNIT.TEST" lnHash="30623970" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="30623970" unbViolId="e5ef3843-5602-31bf-94b6-06431f6fa914" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ed8a6125-dc03-3855-aa0c-80b95a09cde2" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="8" goals="0,"/>
    <StdViol msg="The method 'getIphone4' does not have a Javadoc comment describing whether or not the method can return null" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="8" sev="3" auth="user1" locRef="7" ctx="8,5|10,5" rule="JAVADOC.CRN" lnHash="30623970" pkg="com.parasoft.nested" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="30623970" unbViolId="0b0b10b1-86ee-394f-9701-a0f7763b7800" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ac1a736b-f572-3766-98f2-0aa5433fc445" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="8" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'getIphone4()'" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="8" sev="3" auth="user1" locRef="7" ctx="8,5|10,5" rule="JAVADOC.PJDM" lnHash="30623970" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="30623970" unbViolId="59e851f7-2baf-348f-b248-1edce189996e" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6e040aa8-3c48-3418-817a-f679bb3d86d8" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="8" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: getIphone4()" ln="8" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="8" sev="4" auth="user1" locRef="7" ctx="8,5|10,5" rule="GLOBAL.UPPM" lnHash="30623970" pkg="com.parasoft.nested" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="30623970" unbViolId="504a2a4d-463b-3059-ae72-3c1d9b5288aa" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2262f664-b0b1-3bf1-91b2-187b9be6275a" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="8" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;iphone4&quot;" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="9" sev="3" auth="user1" locRef="7" ctx="8,5|10,5" rule="INTER.ITT" lnHash="-528728787" pkg="com.parasoft.nested" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="-528728787" unbViolId="184d7d31-47fe-3e26-894d-d9c12b155b81" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e7a86449-8090-3c26-895f-25dbf7d8f32c" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="9" goals="0,"/>
    <StdViol msg="The String literal &quot;iphone4&quot; is used" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="9" sev="3" auth="user1" locRef="7" ctx="8,5|10,5" rule="SECURITY.WSC.SL" lnHash="-528728787" pkg="com.parasoft.nested" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="-528728787" unbViolId="45f913af-6e9a-37ca-900f-9391aeb52acb" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e78368cf-ce13-37ff-a0db-b0096b049740" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="9" goals="0,"/>
    <StdViol msg="Misspelled word 'iphone'" ln="9" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="9" sev="3" auth="user1" locRef="7" ctx="8,5|10,5" rule="JAVADOC.SPELL" lnHash="-528728787" pkg="com.parasoft.nested" rule.header="Avoid misspelling words in Javadoc comments and string literals" tool="jtest" lineHash="-528728787" unbViolId="50e1cb06-059f-3054-9ba8-f103d86621aa" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e9e50157-efdb-3473-b597-cf5f378c9e56" locEndPos="32" locType="sr" hash="-1917579824" locEndLn="9" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="3" auth="user1" locRef="7" ctx="12,0|13,0" rule="FORMAT.BLCD" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1345140166" unbViolId="68d9bcb2-1dff-350f-9731-1055a3affaa4" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f3f969d5-e7aa-3473-b1a1-26c2dfc659ca" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="3" auth="user1" locRef="7" ctx="12,0|13,0" rule="APSC_DV.003215.BLCD" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1345140166" unbViolId="9fb161c7-07f0-3ee1-8b30-50e33c4ea9b3" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="84d2795f-9eff-3aa4-96d6-ae55f8ace09f" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="Elements in 'PhoneFactory' not ordered appropriately, first violation: member enum declaration 'Brand' at line 12 should be placed before method 'getIphone4' at line 8" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="3" auth="user1" locRef="7" ctx="12,0|13,0" rule="CODSTA.ORG.FO" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Order class elements appropriately" tool="jtest" lineHash="-1345140166" unbViolId="0d6f2a50-f5ee-3253-984f-ba23cf809a2f" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bffa53cc-983f-3cbc-a77c-6d922c22edab" locEndPos="21" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Brand'" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="3" auth="user1" locRef="7" ctx="12,0|13,0" rule="JAVADOC.PJDC" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-1345140166" unbViolId="f0334d20-be31-3f70-8ffe-b71f4853767c" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f4549478-87db-33e5-9e91-556736963130" locEndPos="21" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="Enum 'com.parasoft.nested.PhoneFactory.Brand' should be declared &quot;private&quot;" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="4" auth="user1" locRef="7" ctx="12,0|13,0" rule="GLOBAL.DPPC" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" tool="jtest" lineHash="-1345140166" unbViolId="ce8f1ef0-6098-3209-8397-8a725c8b5b49" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ba9e34b1-37c9-3881-a0ee-7d86eb613a17" locEndPos="21" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="'Brand' is an expensive enum declaration" ln="12" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="12" sev="3" auth="user1" locRef="7" ctx="12,0|13,0" rule="MOBILE.ENUM" lnHash="-1345140166" pkg="com.parasoft.nested" rule.header="Avoid using enums" tool="jtest" lineHash="-1345140166" unbViolId="5465cc54-9c45-3c38-be9c-6e491005ca1e" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="5713c74b-2d10-3ead-96d3-f4466e9e8d79" locEndPos="21" locType="sr" hash="-1917579824" locEndLn="12" goals="0,"/>
    <StdViol msg="Use 1 blank line before every enum constant declaration (or corresponding Javadoc)" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="13" sev="3" auth="user1" locRef="7" ctx="13,0|14,0" rule="FORMAT.U2BL" lnHash="1992071219" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1992071219" unbViolId="1e4b1a9a-1341-34d3-a31b-7fc10af6d136" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6fc91550-2e7d-3634-bfed-eb583fec434d" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="13" goals="0,"/>
    <StdViol msg="Use 1 blank line before every enum constant declaration (or corresponding Javadoc)" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="13" sev="3" auth="user1" locRef="7" ctx="13,0|14,0" rule="APSC_DV.003215.U2BL" lnHash="1992071219" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1992071219" unbViolId="de4072d5-4039-3faa-b67e-208aa89e5af9" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="da3e5d50-6f25-307b-b3f9-b2ce4bddc7a6" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="13" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="13" sev="3" auth="user1" locRef="7" ctx="13,0|14,0" rule="FORMAT.U2BL" lnHash="1992071219" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1992071219" unbViolId="ca5f90ee-f0f5-3a83-bdb0-a48ba7f1c0cc" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="778436dc-207c-37dc-8e13-4c6d6d734935" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="13" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="13" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="13" sev="3" auth="user1" locRef="7" ctx="13,0|14,0" rule="APSC_DV.003215.U2BL" lnHash="1992071219" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1992071219" unbViolId="c86c1faa-f451-3315-8684-a77c23d9559e" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fe264e13-55bc-3fa0-8088-bbc3de13394d" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="13" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="16" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="3" auth="user1" locRef="7" ctx="16,0|17,0" rule="FORMAT.BLCD" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1094278703" unbViolId="fde38494-818e-3c1b-b454-b739dce21cd1" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c588a518-292c-3eda-a388-08d0495243d1" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="16" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="3" auth="user1" locRef="7" ctx="16,0|17,0" rule="APSC_DV.003215.BLCD" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="-1094278703" unbViolId="7b81f89f-dcf5-3ffa-acda-7dd878be5e47" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ffd4e895-0346-3084-995e-d1170eb89274" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="16" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="5" auth="user1" locRef="7" ctx="16,0|17,0" rule="SECURITY.WSC.MCNC" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1094278703" unbViolId="76e22979-4989-3b8a-ada2-5e9250985261" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="98433f1b-cfcf-39b9-b2c3-23fb93cb9642" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="16" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="2" auth="user1" locRef="7" ctx="16,0|17,0" rule="CERT.OBJ07.MCNC" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="-1094278703" unbViolId="be3f22e8-ce7c-30d7-9f15-7f8430761d93" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f7ba7b61-b18f-344b-a383-9f5059bed16c" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Callable'" ln="16" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="3" auth="user1" locRef="7" ctx="16,0|17,0" rule="JAVADOC.PJDC" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="-1094278703" unbViolId="54386c91-43b4-3cac-a667-be0ba2d4e63a" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a4070842-cc9a-3c81-8ba0-0d554d8922f3" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="Interface 'com.parasoft.nested.PhoneFactory.Callable' should be declared &quot;package-private&quot;" ln="16" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="16" sev="4" auth="user1" locRef="7" ctx="16,0|17,0" rule="GLOBAL.DPPC" lnHash="-1094278703" pkg="com.parasoft.nested" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" tool="jtest" lineHash="-1094278703" unbViolId="6de5296c-cbd3-3c6f-969e-3f126ba470e7" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2bd5cb51-2ab7-3d17-98ea-d48dd579e64a" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="16" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="17" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user1" locRef="7" ctx="17,8|17,22" rule="FORMAT.U2BL" lnHash="-510057877" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-510057877" unbViolId="7e120f12-7f3c-337d-9716-10dab13b7d0b" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d28ab22e-3520-3f5f-bd08-0a63876016ca" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="17" goals="0,"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="17" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user1" locRef="7" ctx="17,8|17,22" rule="APSC_DV.003215.U2BL" lnHash="-510057877" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-510057877" unbViolId="c99c9ecf-9eba-3032-a8d9-c3eda3b14530" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="45a8900b-1899-39d4-a00c-b4924343a57c" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="17" goals="0,"/>
    <StdViol msg="Indentation should be 8 spaces" ln="17" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user1" locRef="7" ctx="17,8|17,22" rule="FORMAT.IND" lnHash="-510057877" pkg="com.parasoft.nested" rule.header="Enforce number of space(s) for indentation" tool="jtest" lineHash="-510057877" unbViolId="e1d8d4f8-eba3-3fed-ba3a-ef4cfe0f1698" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b549e2ec-49aa-3cf1-a414-4b4a75131871" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="17" goals="0,"/>
    <StdViol msg="Indentation should be 8 spaces" ln="17" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user1" locRef="7" ctx="17,8|17,22" rule="APSC_DV.003215.IND" lnHash="-510057877" pkg="com.parasoft.nested" rule.header="Enforce number of space(s) for indentation" tool="jtest" lineHash="-510057877" unbViolId="2bfc2816-bb14-32e0-94d1-1be520349ea5" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="59f4338e-1383-3541-a7a1-5f7a175f30d4" locEndPos="22" locType="sr" hash="-1917579824" locEndLn="17" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="17" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user1" locRef="7" rule="METRIC.CC" lnHash="-510057877" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-510057877" unbViolId="08e965ad-024d-3192-922d-398b4aed3f04" locStartPos="8" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="5d27887a-d78c-312b-8ff0-e7fbafa4336d" locType="sr" locEndPos="22" hash="-1917579824" locEndLn="17" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'call911()'" ln="17" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="17" sev="3" auth="user1" locRef="7" ctx="17,8|17,22" rule="JAVADOC.PJDM" lnHash="-510057877" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-510057877" unbViolId="31bed27c-b01c-33a9-9fda-11243030c376" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="40a052af-f9ca-342a-a567-cb5311237865" locEndPos="19" locType="sr" hash="-1917579824" locEndLn="17" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user1" locRef="7" ctx="20,0|21,0" rule="FORMAT.BLCD" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="1952858190" unbViolId="dcad1382-6542-3f31-b18c-85bf7df6b2cd" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b797a857-a1d0-376f-85d1-d0f99f51ff03" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user1" locRef="7" ctx="20,0|21,0" rule="APSC_DV.003215.BLCD" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="1952858190" unbViolId="7f2fc61e-2cde-384e-b339-9b782f00cb48" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6f34b1b3-4596-3438-b0b9-71a8cad44143" locEndPos="6" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="5" auth="user1" locRef="7" ctx="20,0|21,0" rule="SECURITY.WSC.MCNC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="1952858190" unbViolId="8541fa65-4417-3f60-8738-6bfbb4410eed" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e5a63f85-b54c-3547-b50f-112d39bf3ba5" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="'clone()' method is missing" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="2" auth="user1" locRef="7" ctx="20,0|21,0" rule="CERT.OBJ07.MCNC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make your classes noncloneable" tool="jtest" lineHash="1952858190" unbViolId="1b300fc4-6d8a-32a7-b2d2-921565ccd5a2" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9967256c-9d05-3fbd-9ff0-42e2ec0e6e3a" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Phone has multiple constructors and should use chain constructors" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user1" locRef="7" ctx="20,0|21,0" rule="CODSTA.POD.CHAIN" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Use chain constructors in classes with multiple constructors" tool="jtest" lineHash="1952858190" unbViolId="797f14ee-afdb-3515-847b-7ff265c76f51" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="671f2d1d-bda8-3fe4-bdd6-18d0b998e0af" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="getter method without an @invariant contract: getName()" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user1" locRef="7" ctx="20,0|21,0" rule="DBC.IGM" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Provide an '@invariant' contract for all getter methods" tool="jtest" lineHash="1952858190" unbViolId="6cf42688-24c2-3a99-95bc-d48dbfc42f19" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4dfb1119-3760-30c9-8715-f922981f07a5" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="getter method without an @invariant contract: getBrand()" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user1" locRef="7" ctx="20,0|21,0" rule="DBC.IGM" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Provide an '@invariant' contract for all getter methods" tool="jtest" lineHash="1952858190" unbViolId="c073f848-8692-363c-b7be-7ad57cf94aca" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f0c8e95a-3921-3e2b-8158-273d372d3a99" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for 'Phone'" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user1" locRef="7" ctx="20,0|21,0" rule="JAVADOC.PJDC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="1952858190" unbViolId="7b90ce3e-50f5-3cfb-b163-3b80c1b3396d" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9846c676-11e4-3542-b2f7-beb0b3c7b902" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Inner class 'Phone' should be avoided" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user1" locRef="7" ctx="20,0|21,0" rule="SECURITY.WSC.AUIC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Do not use inner classes" tool="jtest" lineHash="1952858190" unbViolId="b8c16b2b-269e-3876-8052-b0fccf34eafe" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3d3c2e8b-48b8-365a-b0fd-8c0d69600178" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Class 'com.parasoft.nested.PhoneFactory.Phone' should be declared &quot;private&quot;" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="4" auth="user1" locRef="7" ctx="20,0|21,0" rule="GLOBAL.DPPC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" tool="jtest" lineHash="1952858190" unbViolId="83d4b3b4-cebb-3a24-bc74-36a9c562bc3b" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b770032c-9913-39f4-ae57-fcec807cd030" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="The immutable class not declared 'final'" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="4" auth="user1" locRef="7" ctx="20,0|21,0" rule="SECURITY.WSC.FIMU" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make immutable classes final" tool="jtest" lineHash="1952858190" unbViolId="39696945-5c5a-31c1-88a4-f4cd36a55332" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8a71f7f5-efce-3e2a-98ae-58025f29e3e7" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="5" auth="user1" locRef="7" ctx="20,0|21,0" rule="SECURITY.WSC.SER" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="1952858190" unbViolId="0911f450-be94-3f3c-8530-bb198b77eefe" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="df974739-1524-3311-8ade-73dbb17f24d6" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="'writeObject()' method is missing" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="5" auth="user1" locRef="7" ctx="20,0|21,0" rule="CWE.499.SER" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make your classes nonserializeable" tool="jtest" lineHash="1952858190" unbViolId="d693c7e3-7b76-3c1d-a1e2-8a34f03255a4" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c1a832a2-199c-39cc-b0c4-8f73224a31c1" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Class 'com.parasoft.nested.PhoneFactory.Phone' should be declared &quot;final&quot;" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="5" auth="user1" locRef="7" ctx="20,0|21,0" rule="GLOBAL.SPPC" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Declare a &quot;public/protected&quot; &quot;class&quot; &quot;final&quot; if it is not subclassed" tool="jtest" lineHash="1952858190" unbViolId="6de2ae68-651d-3176-b3b2-a553bae68e59" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3013d821-e729-3e8b-bf53-2ae07a9998e9" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="'readObject()' method is missing" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="5" auth="user1" locRef="7" ctx="20,0|21,0" rule="SECURITY.WSC.DSER" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Make your classes nondeserializeable" tool="jtest" lineHash="1952858190" unbViolId="9c485c78-e724-314b-abfb-cf3813e6036a" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1c0311f1-c745-3427-a29f-ed6e2b447630" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="interface type 'Callable' is used" ln="20" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="20" sev="3" auth="user1" locRef="7" ctx="20,0|21,0" rule="MOBILE.AUI" lnHash="1952858190" pkg="com.parasoft.nested" rule.header="Avoid declaring &quot;interface&quot; types" tool="jtest" lineHash="1952858190" unbViolId="9dadc866-a652-370b-be2b-ffe1127ec13e" locStartPos="41" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d2f3b3f9-ac41-3da8-b6c0-e30edb367566" locEndPos="49" locType="sr" hash="-1917579824" locEndLn="20" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="21" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="21" sev="3" auth="user1" locRef="7" ctx="21,0|22,0" rule="FORMAT.U2BL" lnHash="-1102211618" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1102211618" unbViolId="9f4e59cb-2f45-3745-89ed-c610f93b3951" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cfb5fc48-f044-33d5-82a8-e1399a0f20b3" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="21" goals="0,"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="21" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="21" sev="3" auth="user1" locRef="7" ctx="21,0|22,0" rule="APSC_DV.003215.U2BL" lnHash="-1102211618" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-1102211618" unbViolId="3b448aae-63bd-3481-aa61-1cdb6c5897cb" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="09ea3f4a-6542-3ba0-ac68-b12ed39015fd" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="21" goals="0,"/>
    <StdViol msg="Missing 'setName()' method for field 'name'" ln="21" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="21" sev="4" auth="user1" locRef="7" ctx="21,0|22,0" rule="BEAN.NFM" lnHash="-1102211618" pkg="com.parasoft.nested" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="-1102211618" unbViolId="89eba704-f2fb-34b6-863d-86afeed07b96" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bbe893eb-1492-32e0-8b34-d5f8557aba00" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="21" goals="0,"/>
    <StdViol msg="The 'name' field of the immutable class is not declared final" ln="21" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="21" sev="4" auth="user1" locRef="7" ctx="21,0|22,0" rule="SECURITY.WSC.FIMU" lnHash="-1102211618" pkg="com.parasoft.nested" rule.header="Make immutable classes final" tool="jtest" lineHash="-1102211618" unbViolId="a4238cbd-a254-3039-b01e-c0535cf8b1fc" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ba708146-26e9-34ef-88f1-691c4a235960" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="21" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="22" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="22" sev="3" auth="user1" locRef="7" ctx="22,0|23,0" rule="FORMAT.U2BL" lnHash="1952442346" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1952442346" unbViolId="21cade24-200f-3a52-aa46-7c004b47f26e" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="705626ef-291e-34b9-8dfb-dd03d1f5a599" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="22" goals="0,"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="22" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="22" sev="3" auth="user1" locRef="7" ctx="22,0|23,0" rule="APSC_DV.003215.U2BL" lnHash="1952442346" pkg="com.parasoft.nested" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="1952442346" unbViolId="792eaba5-8422-3980-a30c-2564b61be1fb" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9f69f63c-6894-3e12-8b11-f8e0528577e3" locEndPos="28" locType="sr" hash="-1917579824" locEndLn="22" goals="0,"/>
    <StdViol msg="Missing 'setBrand()' method for field 'brand'" ln="22" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="22" sev="4" auth="user1" locRef="7" ctx="22,0|23,0" rule="BEAN.NFM" lnHash="1952442346" pkg="com.parasoft.nested" rule.header="Define get and set methods for each instance field" tool="jtest" lineHash="1952442346" unbViolId="a62b3a57-83dd-32e1-ada0-b117b815355f" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="930697ef-82b0-3b9b-be57-ba04929a71fa" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="22" goals="0,"/>
    <StdViol msg="The 'brand' field of the immutable class is not declared final" ln="22" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="22" sev="4" auth="user1" locRef="7" ctx="22,0|23,0" rule="SECURITY.WSC.FIMU" lnHash="1952442346" pkg="com.parasoft.nested" rule.header="Make immutable classes final" tool="jtest" lineHash="1952442346" unbViolId="08af142a-d892-3a75-bc40-9e6605e0aba9" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f3b7d989-cace-322a-aad7-275bdd13f0dc" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="22" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="24" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="24" sev="3" auth="user1" locRef="7" rule="METRIC.CC" lnHash="-771458445" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-771458445" unbViolId="d6d26db0-ac8f-35e6-92f8-1b9bb3f63b43" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="b7cbc0d4-d0c4-3d6d-bee5-c66eb963ff73" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="25" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'Phone()'" ln="24" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="24" sev="2" auth="user1" locRef="7" ctx="24,0|25,0" rule="JUNIT.TEST" lnHash="-771458445" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-771458445" unbViolId="e236c029-dc5f-378b-a5c4-59e0e93c1707" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6e0b0a55-825d-37da-ae21-2baea8ada7fe" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="24" goals="0,"/>
    <StdViol msg="'public' constructor declared" ln="24" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="24" sev="3" auth="user1" locRef="7" ctx="24,0|25,0" rule="CODSTA.BP.CMUTA" lnHash="-771458445" pkg="com.parasoft.nested" rule.header="Avoid 'public' or 'protected' constructors for immutable classes" tool="jtest" lineHash="-771458445" unbViolId="663df298-7a01-3ef3-8d41-fe4279e48727" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="27591829-35a9-39d9-a54b-430b780b7bfe" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="24" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'Phone()'" ln="24" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="24" sev="3" auth="user1" locRef="7" ctx="24,0|25,0" rule="JAVADOC.PJDM" lnHash="-771458445" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-771458445" unbViolId="5a932fe7-a454-3da3-8d5d-d2874e877454" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2dfc88eb-9c1e-36ae-8c77-d566d8cffe62" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="24" goals="0,"/>
    <StdViol msg="Flag not present" ln="24" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="24" sev="4" auth="user1" locRef="7" ctx="24,0|25,0" rule="SECURITY.WSC.INIVF" lnHash="-771458445" pkg="com.parasoft.nested" rule.header="Defend against partially initialized instances of non-final classes" tool="jtest" lineHash="-771458445" unbViolId="76fede1d-d496-3ae0-ad2d-19faa18c8a9e" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9573e584-45ff-3177-8043-7c0f1bf736ff" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="24" goals="0,"/>
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="25" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="25" sev="3" auth="user1" locRef="7" ctx="25,0|26,0" rule="CODSTA.READ.UATS" lnHash="-1307574176" pkg="com.parasoft.nested" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" tool="jtest" lineHash="-1307574176" unbViolId="225b0c24-e36d-3215-987a-8bb0baefeb53" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ae6229da-13fc-3222-a9cc-457dcb1835c2" locEndPos="16" locType="sr" hash="-1917579824" locEndLn="25" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;default&quot;" ln="25" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="25" sev="3" auth="user1" locRef="7" ctx="25,0|26,0" rule="INTER.ITT" lnHash="-1307574176" pkg="com.parasoft.nested" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="-1307574176" unbViolId="ca48b57f-e5ea-30e2-ad6c-47ce86a17a76" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e0b61c9d-07a8-3214-82bc-b78d7fea2782" locEndPos="33" locType="sr" hash="-1917579824" locEndLn="25" goals="0,"/>
    <StdViol msg="The String literal &quot;default&quot; is used" ln="25" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="25" sev="3" auth="user1" locRef="7" ctx="25,0|26,0" rule="SECURITY.WSC.SL" lnHash="-1307574176" pkg="com.parasoft.nested" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="-1307574176" unbViolId="f8c26031-faee-3945-a928-3f410aa7ab0b" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ddbb0e44-044c-3145-ba18-70b7ce873430" locEndPos="33" locType="sr" hash="-1917579824" locEndLn="25" goals="0,"/>
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="26" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="26" sev="3" auth="user1" locRef="7" ctx="26,0|27,0" rule="CODSTA.READ.UATS" lnHash="1345644102" pkg="com.parasoft.nested" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" tool="jtest" lineHash="1345644102" unbViolId="ffcf6393-7415-3808-95d3-0e8be3ed00b2" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a2745fc7-03a3-32db-bf3d-a2e15bb105ce" locEndPos="16" locType="sr" hash="-1917579824" locEndLn="26" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user1" locRef="7" rule="METRIC.CC" lnHash="-20822861" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-20822861" unbViolId="6f84a893-f336-3ba3-a060-42d2eeef9161" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="7eeb58dc-f3e2-3764-ae4b-9a096d4f9d96" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="30" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'Phone()'" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="2" auth="user1" locRef="7" ctx="29,0|30,0" rule="JUNIT.TEST" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-20822861" unbViolId="66c44b28-2abc-3c1f-9277-e4cedf587409" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b24b9ba7-c474-3c4d-b1ba-a467918960f8" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="'public' constructor declared" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user1" locRef="7" ctx="29,0|30,0" rule="CODSTA.BP.CMUTA" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Avoid 'public' or 'protected' constructors for immutable classes" tool="jtest" lineHash="-20822861" unbViolId="4b7b303a-e1a4-372e-93d3-ad81e7de1089" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9273e171-5574-30ec-9b60-1d8839968863" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'Phone()'" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user1" locRef="7" ctx="29,0|30,0" rule="JAVADOC.PJDM" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-20822861" unbViolId="c46e96b6-cb10-3775-8f45-8e2a42511a96" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1294df65-087e-392e-a00c-3c0da05e8937" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Constructor 'Phone()' should be declared &quot;private&quot;" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="4" auth="user1" locRef="7" ctx="29,0|30,0" rule="GLOBAL.DPPM" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="-20822861" unbViolId="48164b61-171b-342c-bb4d-2254fb337db1" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e73f77b5-812b-380e-a93f-c00a4d09cee3" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Constructor 'Phone()' should be declared &quot;private&quot;" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="4" auth="user1" locRef="7" ctx="29,0|30,0" rule="CWE.749.DPPM" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" tool="jtest" lineHash="-20822861" unbViolId="83f66c58-6038-32cf-97cc-c8d002ea0eb3" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a94cbf75-2b42-36b1-83df-7102e0a9437e" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Flag not present" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="4" auth="user1" locRef="7" ctx="29,0|30,0" rule="SECURITY.WSC.INIVF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Defend against partially initialized instances of non-final classes" tool="jtest" lineHash="-20822861" unbViolId="1662830a-c5cb-3a9f-9be3-672e4565960a" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f40df02f-ce71-39c1-8cb3-e6562fc64350" locEndPos="20" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Formal parameter 'name' is not declared as final" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user1" locRef="7" ctx="29,0|30,0" rule="CODSTA.BP.FPF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="-20822861" unbViolId="fe33b9c9-e9c2-387b-ab8f-14d0a9540818" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3eb946ff-900c-3ec2-babb-9fb38a0811ed" locEndPos="32" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="The parameter 'name' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user1" locRef="7" ctx="29,0|30,0" rule="OOP.HIF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Do not hide fields and local variables declared in enclosing scopes" tool="jtest" lineHash="-20822861" unbViolId="740a8782-9ee5-3619-b671-dc53b1d8f396" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c139fda5-a8f1-3ded-8e28-e174692cd7e2" locEndPos="32" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Parameter 'name' has the same name as a field" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user1" locRef="7" ctx="29,0|30,0" rule="OOP.HMF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Do not give method local variables and parameters the same name as class fields" tool="jtest" lineHash="-20822861" unbViolId="53d5bfa8-6633-361d-aa55-d3708efc992b" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="07871589-905a-3255-ac0b-bf7ab7abc103" locEndPos="32" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Formal parameter 'brand' is not declared as final" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user1" locRef="7" ctx="29,0|30,0" rule="CODSTA.BP.FPF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Declare all formal parameters as &quot;final&quot;" tool="jtest" lineHash="-20822861" unbViolId="5096d3a2-77d6-3eaf-b2fc-dd0077eece22" locStartPos="40" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3e5b8760-b254-3917-bdec-473b22072c0a" locEndPos="45" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="The parameter 'brand' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user1" locRef="7" ctx="29,0|30,0" rule="OOP.HIF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Do not hide fields and local variables declared in enclosing scopes" tool="jtest" lineHash="-20822861" unbViolId="9f448af0-5d64-384e-bf3a-08ee122469f9" locStartPos="40" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5b866232-c7a7-325a-97cc-0e2c4c17ed53" locEndPos="45" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <StdViol msg="Parameter 'brand' has the same name as a field" ln="29" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="29" sev="3" auth="user1" locRef="7" ctx="29,0|30,0" rule="OOP.HMF" lnHash="-20822861" pkg="com.parasoft.nested" rule.header="Do not give method local variables and parameters the same name as class fields" tool="jtest" lineHash="-20822861" unbViolId="a57a56e2-360e-3e7d-a82b-8fad0e4b5442" locStartPos="40" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1eeaf596-16b7-3abe-bc02-e0257ebf1660" locEndPos="45" locType="sr" hash="-1917579824" locEndLn="29" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="34" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="34" sev="3" auth="user1" locRef="7" rule="METRIC.CC" lnHash="-1459293982" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="-1459293982" unbViolId="6188fb64-b09c-30c7-93fd-11c9e62e1b6a" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="d7c0144d-e6c9-305f-909c-a3242e909472" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="35" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'call911()'" ln="34" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="34" sev="2" auth="user1" locRef="7" ctx="34,9|36,9" rule="JUNIT.TEST" lnHash="-1459293982" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="-1459293982" unbViolId="55dcdfd1-cb87-36a5-b1ca-91de8e8572c1" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="12b6b16b-8261-30ea-879a-383b17f1eaff" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="34" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'call911()'" ln="34" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="34" sev="3" auth="user1" locRef="7" ctx="34,9|36,9" rule="JAVADOC.PJDM" lnHash="-1459293982" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-1459293982" unbViolId="c0f3f627-adca-349b-8e05-ebe778bbe623" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="92cf1dc3-f04d-3203-ba5b-fc6003e01c52" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="34" goals="0,"/>
    <StdViol msg="The overriding method 'call911()' does not have an &quot;@Override&quot; annotation" ln="34" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="34" sev="3" auth="user1" locRef="7" ctx="34,9|36,9" rule="OOP.AOA" lnHash="-1459293982" pkg="com.parasoft.nested" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" tool="jtest" lineHash="-1459293982" unbViolId="22de5407-84f4-3fd6-8849-0327df74e083" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="25bf7be4-03f6-36c2-996d-94b52ae85bc9" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="34" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" auth="user1" rule="CWE.200.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="905a09d5-74ac-3b84-9c66-8bbf4471f643" locEndPos="42" urgent="true" locEndLn="35" goals="1," locStartln="35" sev="3" locRef="7" ctx="34,9|36,9" tool="jtest" lineHash="399150515" unbViolId="e6925aba-8247-346a-8525-cb802a769453" locType="sr" hash="-1917579824"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" auth="user1" rule="CWE.209.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b5be66f2-fe88-3d42-ab24-36a7d15a39da" locEndPos="42" urgent="true" locEndLn="35" goals="1," locStartln="35" sev="3" locRef="7" ctx="34,9|36,9" tool="jtest" lineHash="399150515" unbViolId="a8f4a348-74af-3dec-8400-a1b4c2ee0537" locType="sr" hash="-1917579824"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" auth="user1" rule="OWASP2017.A6.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0b172b7a-d73c-3a44-a93d-c1a5bd16e93e" locEndPos="42" urgent="true" locEndLn="35" goals="1," locStartln="35" sev="3" locRef="7" ctx="34,9|36,9" tool="jtest" lineHash="399150515" unbViolId="a7428b32-9545-392c-83c9-fd342c4b80de" locType="sr" hash="-1917579824"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" auth="user1" rule="OWASP2019.API10.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6701eaf7-04e8-39cd-9efa-d716106c0530" locEndPos="42" urgent="true" locEndLn="35" goals="1," locStartln="35" sev="3" locRef="7" ctx="34,9|36,9" tool="jtest" lineHash="399150515" unbViolId="0b13b346-6b16-336c-8ac3-31a43087ec0a" locType="sr" hash="-1917579824"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" auth="user1" rule="OWASP2021.A5.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7b2d6069-c0fe-338d-9a47-be8a8e1f1048" locEndPos="42" urgent="true" locEndLn="35" goals="1," locStartln="35" sev="3" locRef="7" ctx="34,9|36,9" tool="jtest" lineHash="399150515" unbViolId="31a01662-ad3c-32c4-9317-982f974ecc23" locType="sr" hash="-1917579824"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" auth="user1" rule="PCIDSS32.655.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="53b8a8ec-4840-302f-9b23-82297f8d9a56" locEndPos="42" urgent="true" locEndLn="35" goals="1," locStartln="35" sev="3" locRef="7" ctx="34,9|36,9" tool="jtest" lineHash="399150515" unbViolId="5eff9f48-33d8-34d0-b259-94c7de454fba" locType="sr" hash="-1917579824"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="35" sev="3" auth="user1" locRef="7" ctx="34,9|36,9" rule="SECURITY.ESD.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="399150515" unbViolId="accefcde-b658-3840-adf2-d66263ad4740" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fec44f73-a308-347b-8364-5398891ddb86" locEndPos="42" locType="sr" hash="-1917579824" locEndLn="35" goals="0,"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="35" sev="2" auth="user1" locRef="7" ctx="34,9|36,9" rule="APSC_DV.001460.SIO" lnHash="399150515" pkg="com.parasoft.nested" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="399150515" unbViolId="5aab221f-4ebe-3e1f-a0b6-86c9edf3ab97" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="82fbdf54-da60-3ce3-aec9-29d921acbe98" locEndPos="42" locType="sr" hash="-1917579824" locEndLn="35" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="38" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user1" locRef="7" rule="METRIC.CC" lnHash="656794848" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="656794848" unbViolId="d51bde7c-987e-3a4e-837d-92eead522e64" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="8d12ce0e-1131-3d9c-b5c7-3ce7983c9317" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="The method 'toString' does not have a Javadoc comment describing whether or not the method can return null" ln="38" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="JAVADOC.CRN" lnHash="656794848" pkg="com.parasoft.nested" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="656794848" unbViolId="ae2d171e-bc5a-3093-bdae-22cc1f21763f" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a6492559-4115-3ee4-bcfb-7e519d645e8f" locEndPos="30" locType="sr" hash="-1917579824" locEndLn="38" goals="0,"/>
    <StdViol msg="Missing Javadoc comment for method 'toString()'" ln="38" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="JAVADOC.PJDM" lnHash="656794848" pkg="com.parasoft.nested" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="656794848" unbViolId="d69ff59b-276a-36a0-b0f1-63ba8aa4c2f5" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="85e38869-adee-398a-a03c-a664b6b3449b" locEndPos="30" locType="sr" hash="-1917579824" locEndLn="38" goals="0,"/>
    <StdViol msg="Missing Javadoc for 'toString()'" ln="38" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="OWASP2019.API9.TSMJT" lnHash="656794848" pkg="com.parasoft.nested" rule.header="Provide a Javadoc comment for 'toString()' methods" tool="jtest" lineHash="656794848" unbViolId="43a79abb-ba02-3e0a-a682-641124a46760" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4beccdc6-8634-3ce9-84e3-7e3c21b94d1c" locEndPos="30" locType="sr" hash="-1917579824" locEndLn="38" goals="0,"/>
    <StdViol msg="Missing Javadoc for 'toString()'" ln="38" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="JAVADOC.TSMJT" lnHash="656794848" pkg="com.parasoft.nested" rule.header="Provide a Javadoc comment for 'toString()' methods" tool="jtest" lineHash="656794848" unbViolId="1f19d544-773b-3f70-99a2-6a3a7d6ec6a6" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a205f4e5-1349-31bd-8b34-27ed8b3a275b" locEndPos="30" locType="sr" hash="-1917579824" locEndLn="38" goals="0,"/>
    <StdViol msg="The overriding method 'toString()' does not have an &quot;@Override&quot; annotation" ln="38" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="38" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="OOP.AOA" lnHash="656794848" pkg="com.parasoft.nested" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" tool="jtest" lineHash="656794848" unbViolId="f922f69e-d6ed-3fed-a4c5-84519e271c3f" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1502e81d-8faf-3a66-ada5-851f70507e74" locEndPos="30" locType="sr" hash="-1917579824" locEndLn="38" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="39" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="5" auth="user1" locRef="7" ctx="38,9|40,9" rule="INTER.COS" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="2013206282" unbViolId="e6a1a975-2587-3afb-aed2-506dca10ea92" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eda23ed6-62f1-38e2-84bb-07d580cd9136" locEndPos="66" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="Concatenating strings" ln="39" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="CERT.STR00.COS" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Do not use String concatenation in an Internationalized environment" tool="jtest" lineHash="2013206282" unbViolId="2a3b0060-ad6a-3371-b4c4-98417b895b8e" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="91c4efcb-0ae2-3c34-9c52-82ae53072a30" locEndPos="66" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;name: &quot;" ln="39" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="INTER.ITT" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="2013206282" unbViolId="25d76a17-2bcc-319f-9e89-8d7e4e2318f6" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ea025121-03ce-357f-8f35-e0957e636abd" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="The String literal &quot;name: &quot; is used" ln="39" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="SECURITY.WSC.SL" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="2013206282" unbViolId="ba674bcc-75c0-3bf5-98f2-1eadca9cfcbd" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7001d783-1abe-3707-91c2-c5019b4b4418" locEndPos="27" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="39" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="CODSTA.READ.UATS" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" tool="jtest" lineHash="2013206282" unbViolId="ca2e9cb9-b5e4-3ef5-8cfd-0e70824c4bbb" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="97265a6f-cef9-32c8-85f7-78c1e9c5a8e6" locEndPos="34" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="Non internationalized string: &quot;, brand: &quot;" ln="39" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="INTER.ITT" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Isolate translatable text in resource bundles in an Internationalized environment" tool="jtest" lineHash="2013206282" unbViolId="d307afd9-ad0c-383c-a2bb-c5750a4c4ea5" locStartPos="42" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="49541812-338f-3c2a-8bfb-e6bbf618ed81" locEndPos="53" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="The String literal &quot;, brand: &quot; is used" ln="39" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="SECURITY.WSC.SL" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Avoid string literals except in constant declarations and calls to System.out or System.err's 'print' or 'println' methods" tool="jtest" lineHash="2013206282" unbViolId="220738ba-a7db-30d6-abd6-a66f4c6a0f1e" locStartPos="42" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="910c23e3-1651-3741-a48f-b47531d11ee4" locEndPos="53" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="39" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="39" sev="3" auth="user1" locRef="7" ctx="38,9|40,9" rule="CODSTA.READ.UATS" lnHash="2013206282" pkg="com.parasoft.nested" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" tool="jtest" lineHash="2013206282" unbViolId="8b6202fb-2eac-3a0e-9664-1b66e24e63cd" locStartPos="56" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7f765ab0-b412-3662-b4df-8b7418b0ac81" locEndPos="60" locType="sr" hash="-1917579824" locEndLn="39" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="42" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="42" sev="3" auth="user1" locRef="7" rule="METRIC.CC" lnHash="870424901" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="870424901" unbViolId="10c67240-26eb-3be3-b0ed-d4c4ba0a8459" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="6aacef9a-3f2e-342c-9487-4185aeb0e2fc" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="43" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'getName()'" ln="42" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="42" sev="2" auth="user1" locRef="7" ctx="42,9|44,9" rule="JUNIT.TEST" lnHash="870424901" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="870424901" unbViolId="beb0089d-5db5-39ba-af7e-385d7404a262" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fc46723b-7cda-318a-85a9-c7eb0adab730" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="42" goals="0,"/>
    <StdViol msg="The method 'getName' does not have a Javadoc comment describing whether or not the method can return null" ln="42" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="42" sev="3" auth="user1" locRef="7" ctx="42,9|44,9" rule="JAVADOC.CRN" lnHash="870424901" pkg="com.parasoft.nested" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="870424901" unbViolId="1686b6ae-d656-3c57-b6a8-741250e46c51" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c33ffcbc-6b1f-3a96-b07b-817247ad48c7" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="42" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: getName()" ln="42" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="42" sev="4" auth="user1" locRef="7" ctx="42,9|44,9" rule="GLOBAL.UPPM" lnHash="870424901" pkg="com.parasoft.nested" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="870424901" unbViolId="5c295918-c992-3676-a77e-a3571785e3f4" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="934a063d-0d9d-38b2-83da-4813a97abdfc" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="42" goals="0,"/>
    <StdViol msg="Getter method 'getName()' is not declared &quot;final&quot;" ln="42" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="42" sev="5" auth="user1" locRef="7" ctx="42,9|44,9" rule="OPT.MAF" lnHash="870424901" pkg="com.parasoft.nested" rule.header="Make getter and setter methods for instance fields &quot;final&quot;" tool="jtest" lineHash="870424901" unbViolId="c83ebdcd-34cc-366b-be2f-828aa432641a" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="aa08522d-d385-3918-b66a-be83cb5e9953" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="42" goals="0,"/>
    <MetViol msg="Value 1 is out of acceptable range: 'lower than 1'" ln="46" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="46" sev="3" auth="user1" locRef="7" rule="METRIC.CC" lnHash="1127417245" rule.header="McCabe Cyclomatic Complexity" tool="jtest" lineHash="1127417245" unbViolId="d30fa175-3c8a-35d1-9554-1c8e60314d17" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" violId="e3d281d4-6e73-3e6e-85bd-7e620f4ffde4" locType="sr" locEndPos="0" hash="-1917579824" locEndLn="47" goals="0,"/>
    <StdViol msg="No JUnit test method defined for 'getBrand()'" ln="46" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="46" sev="2" auth="user1" locRef="7" ctx="46,9|48,9" rule="JUNIT.TEST" lnHash="1127417245" pkg="com.parasoft.nested" rule.header="Make sure all methods have at least one JUnit test method" tool="jtest" lineHash="1127417245" unbViolId="438cb2f7-7445-3a50-8071-08cda7ae278a" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8d15b009-343e-399e-936f-1eebe825b40a" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="46" goals="0,"/>
    <StdViol msg="The method 'getBrand' does not have a Javadoc comment describing whether or not the method can return null" ln="46" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="46" sev="3" auth="user1" locRef="7" ctx="46,9|48,9" rule="JAVADOC.CRN" lnHash="1127417245" pkg="com.parasoft.nested" rule.header="Always include a description of whether or not a method can return null in the Javadoc" tool="jtest" lineHash="1127417245" unbViolId="763ffaa5-6964-3fa0-813c-bb2271ceeded" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c940be1b-6d34-3e97-9f10-50be5ac544a9" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="46" goals="0,"/>
    <StdViol msg="Globally unused &quot;public&quot; method: getBrand()" ln="46" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="46" sev="4" auth="user1" locRef="7" ctx="46,9|48,9" rule="GLOBAL.UPPM" lnHash="1127417245" pkg="com.parasoft.nested" rule.header="Avoid globally unused &quot;public/protected&quot; methods" tool="jtest" lineHash="1127417245" unbViolId="e83bf278-bdda-38dd-a04a-a779a6e6903d" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="45f2bd6a-9e0a-3920-9e67-2dc6f71acf06" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="46" goals="0,"/>
    <StdViol msg="Getter method 'getBrand()' is not declared &quot;final&quot;" ln="46" locFile="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locStartln="46" sev="5" auth="user1" locRef="7" ctx="46,9|48,9" rule="OPT.MAF" lnHash="1127417245" pkg="com.parasoft.nested" rule.header="Make getter and setter methods for instance fields &quot;final&quot;" tool="jtest" lineHash="1127417245" unbViolId="b43e87e5-b0d4-313a-b87e-c79ba452a2fd" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="b2b1d685-e046-3b21-8a8f-694c42455f59" locEndPos="29" locType="sr" hash="-1917579824" locEndLn="46" goals="0,"/>
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="413">
            <Project id="javaprojecttemplate" name="javaprojecttemplate" supp="0" total="413">
               <Res name="src" supp="0" total="413">
                  <Res name="main" supp="0" total="413">
                     <Res name="java" supp="0" total="413">
                        <Res loc="/javaprojecttemplate/src/main/java/Calculator.java" locRef="1" locType="sr" name="Calculator.java" supp="0" total="93"/>
                        <Res name="com" supp="0" total="320">
                           <Res name="parasoft" supp="0" total="320">
                              <Res loc="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locRef="2" locType="sr" name="Convertor.java" supp="0" total="36"/>
                              <Res name="another" supp="0" total="36">
                                 <Res loc="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locRef="3" locType="sr" name="Convertor.java" supp="0" total="36"/>
                              </Res>
                              <Res name="differentViolations" supp="0" total="92">
                                 <Res loc="/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java" locRef="4" locType="sr" name="GenerateViolations.java" supp="0" total="92"/>
                              </Res>
                              <Res name="interfaces" supp="0" total="12">
                                 <Res loc="/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" locRef="5" locType="sr" name="IConvertor.java" supp="0" total="12"/>
                              </Res>
                              <Res name="interfaces2" supp="0" total="17">
                                 <Res loc="/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" locRef="6" locType="sr" name="ICalculator.java" supp="0" total="17"/>
                              </Res>
                              <Res name="nested" supp="0" total="127">
                                 <Res loc="/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" locRef="7" locType="sr" name="PhoneFactory.java" supp="0" total="127"/>
                              </Res>
                           </Res>
                        </Res>
                     </Res>
                  </Res>
               </Res>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>